<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/04/23/hello-world/"/>
      <url>/2024/04/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>常见限流算法</title>
      <link href="/2023/03/01/%E5%B8%B8%E8%A7%81%E9%99%90%E6%B5%81%E7%AE%97%E6%B3%95/"/>
      <url>/2023/03/01/%E5%B8%B8%E8%A7%81%E9%99%90%E6%B5%81%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="常见限流算法"><a href="#常见限流算法" class="headerlink" title="常见限流算法"></a>常见限流算法</h1><h2 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h2><h3 id="计数器算法"><a href="#计数器算法" class="headerlink" title="计数器算法"></a>计数器算法</h3><h4 id="固定窗口计数器"><a href="#固定窗口计数器" class="headerlink" title="固定窗口计数器"></a>固定窗口计数器</h4><h6 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h6><ul><li>时间线划分为多个独立且固定大小的窗口</li><li>落到每一个时间窗口的请求就将计数器加1</li><li>如果计数器超过了限流值，后续请求落到该时间窗口都会被拒绝</li><li>当时间达到下一个时间窗口时，计数器将会被重置为0</li></ul><h6 id="缺陷"><a href="#缺陷" class="headerlink" title="缺陷"></a>缺陷</h6><ul><li>临界点问题：例如59秒时打满100个请求，60秒重置又打满100个请求，就相当与1秒内来了200个请求</li><li>资源浪费：我们希望100个请求可以均匀的分布到这一分钟内，但如果提前达到请求上限，剩余时间服务器就闲置了</li></ul><h4 id="滑动窗口计算器"><a href="#滑动窗口计算器" class="headerlink" title="滑动窗口计算器"></a>滑动窗口计算器</h4><h6 id="步骤-1"><a href="#步骤-1" class="headerlink" title="步骤"></a>步骤</h6><ul><li>将单位时间划分为多个区间，一般都是均分为多个小的时间段</li><li>每一个区间都有一个计数器，有请求落到该区间该区间计数器就加1</li><li>每个一个时间段，时间窗口就会向右滑动一格，抛弃最老的一个区间，纳入新的一个区间</li><li>计算整个时间窗口内的请求总数时会累计所有的时间片段内的计数器，当总和超过了限制数，就会拒绝接收请求</li></ul><h6 id="缺陷-1"><a href="#缺陷-1" class="headerlink" title="缺陷"></a>缺陷</h6><ul><li>时间区间的精度越高，算法所需的空间容量就越大</li></ul><h3 id="漏桶算法"><a href="#漏桶算法" class="headerlink" title="漏桶算法"></a>漏桶算法</h3><h6 id="步骤-2"><a href="#步骤-2" class="headerlink" title="步骤"></a>步骤</h6><ul><li>将每个请求放入固定大小的队列进行存储</li><li>队列以固定速率向外流出请求，如果队列为空则停止流出</li><li>如果队列满了则将多余的请求会被直接拒绝</li></ul><h6 id="缺陷-2"><a href="#缺陷-2" class="headerlink" title="缺陷"></a>缺陷</h6><ul><li>当短时间内有大量的突发请求时，即时服务器负载不高，每个请求也会在队列中等待一段时间才能被响应，并发量不够</li></ul><h3 id="令牌桶算法"><a href="#令牌桶算法" class="headerlink" title="令牌桶算法"></a>令牌桶算法</h3><ul><li>以固定速率生成令牌并放入令牌桶中</li><li>如果令牌桶满了则多余的令牌会直接丢弃</li><li>当请求到达时，会尝试从令牌桶中取令牌，取到令牌的请求可以执行</li><li>如果令牌桶空了，则拒绝该请求</li></ul><h6 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h6><ul><li>限流工具类RateLimiter Guava提供的限流工具类基于令牌桶</li></ul><h4 id="令牌桶与漏桶"><a href="#令牌桶与漏桶" class="headerlink" title="令牌桶与漏桶"></a>令牌桶与漏桶</h4><h6 id="总结起来：如果要让自己的系统不被打垮，用令牌桶。如果保证别人的系统不被打垮，用漏桶算法"><a href="#总结起来：如果要让自己的系统不被打垮，用令牌桶。如果保证别人的系统不被打垮，用漏桶算法" class="headerlink" title="总结起来：如果要让自己的系统不被打垮，用令牌桶。如果保证别人的系统不被打垮，用漏桶算法"></a>总结起来：如果要让自己的系统不被打垮，用令牌桶。如果保证别人的系统不被打垮，用漏桶算法</h6>]]></content>
      
      
      <categories>
          
          <category> 算法教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis总结</title>
      <link href="/2022/11/18/Redis%E6%80%BB%E7%BB%93/"/>
      <url>/2022/11/18/Redis%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p><img src="http://blog.lutao1726.top/redis-01.jpg" alt="Mou_icon"></p><span id="more"></span><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote><p>Redis是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。它支持存储的value类型相对更多，包括string(字符串)、list(链表)、set(集合)、zset(sorted set –有序集合)和hash（哈希类型）。这些数据类型都支持push&#x2F;pop、add&#x2F;remove及取交集并集和差集及更丰富的操作，而且这些操作都是原子性的。在此基础上，redis支持各种不同方式的排序。与memcached一样，为了保证效率，数据都是缓存在内存中。区别的是redis会周期性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件，并且在此基础上实现了master-slave(主从)同步。</p></blockquote><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><h4 id="String"><a href="#String" class="headerlink" title="String"></a>String</h4><h6 id="底层"><a href="#底层" class="headerlink" title="底层"></a>底层</h6><p><code>动态字符（SDS）</code></p><h6 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h6><p><code>共享session，分布式锁，计数器，限流</code></p><h4 id="Hash"><a href="#Hash" class="headerlink" title="Hash"></a>Hash</h4><h6 id="底层-1"><a href="#底层-1" class="headerlink" title="底层"></a>底层</h6><p><code>压缩列表（ziplist&#39;），哈希表（hashtable）</code></p><h6 id="应用场景-1"><a href="#应用场景-1" class="headerlink" title="应用场景"></a>应用场景</h6><p><code>缓存用户信息</code></p><h4 id="List"><a href="#List" class="headerlink" title="List"></a>List</h4><h6 id="底层-2"><a href="#底层-2" class="headerlink" title="底层"></a>底层</h6><p><code>压缩列表（ziplist&#39;），链表（linkedlist）</code></p><h6 id="应用场景-2"><a href="#应用场景-2" class="headerlink" title="应用场景"></a>应用场景</h6><p><code>消息队列，文章列表</code></p><h4 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h4><h6 id="底层-3"><a href="#底层-3" class="headerlink" title="底层"></a>底层</h6><p><code>整数集合，哈希表</code></p><h6 id="应用场景-3"><a href="#应用场景-3" class="headerlink" title="应用场景"></a>应用场景</h6><p><code>用户标签，生成随机数抽奖，社交需求</code></p><h4 id="Zset"><a href="#Zset" class="headerlink" title="Zset"></a>Zset</h4><h6 id="底层-4"><a href="#底层-4" class="headerlink" title="底层"></a>底层</h6><p><code>压缩列表（ziplist&#39;），跳跃表（skiplist）</code></p><h6 id="应用场景-4"><a href="#应用场景-4" class="headerlink" title="应用场景"></a>应用场景</h6><p><code>排行榜，社交需求（如用户点赞）</code></p><blockquote><p>压缩列表</p></blockquote><blockquote><p>跳跃表</p></blockquote><h2 id="特殊数据结构"><a href="#特殊数据结构" class="headerlink" title="特殊数据结构"></a>特殊数据结构</h2><h4 id="BitMap"><a href="#BitMap" class="headerlink" title="BitMap"></a>BitMap</h4><h6 id="底层-5"><a href="#底层-5" class="headerlink" title="底层"></a>底层</h6><p><code>基于字符串类型实现</code></p><h4 id="Hyperloglog"><a href="#Hyperloglog" class="headerlink" title="Hyperloglog"></a>Hyperloglog</h4><h6 id="底层-6"><a href="#底层-6" class="headerlink" title="底层"></a>底层</h6><p><code>基数统计算法</code></p><h6 id="应用场景-5"><a href="#应用场景-5" class="headerlink" title="应用场景"></a>应用场景</h6><p><code>统计网站的UV</code></p><h4 id="Geospatial"><a href="#Geospatial" class="headerlink" title="Geospatial"></a>Geospatial</h4><h6 id="应用场景-6"><a href="#应用场景-6" class="headerlink" title="应用场景"></a>应用场景</h6><p><code>用于地理位置存储</code></p><h2 id="持久化方式"><a href="#持久化方式" class="headerlink" title="持久化方式"></a>持久化方式</h2><h4 id="AOF（操作日志）"><a href="#AOF（操作日志）" class="headerlink" title="AOF（操作日志）"></a>AOF（操作日志）</h4><h6 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h6><h6 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h6><h4 id="RDB（快照）"><a href="#RDB（快照）" class="headerlink" title="RDB（快照）"></a>RDB（快照）</h4><h6 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h6><h6 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h6><h4 id="如何选择"><a href="#如何选择" class="headerlink" title="如何选择"></a>如何选择</h4><h2 id="数据淘汰"><a href="#数据淘汰" class="headerlink" title="数据淘汰"></a>数据淘汰</h2><h4 id="机制"><a href="#机制" class="headerlink" title="机制"></a>机制</h4><h4 id="策略"><a href="#策略" class="headerlink" title="策略"></a>策略</h4><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h4 id="集群模式"><a href="#集群模式" class="headerlink" title="集群模式"></a>集群模式</h4><h4 id="哨兵模式"><a href="#哨兵模式" class="headerlink" title="哨兵模式"></a>哨兵模式</h4><h2 id="场景问题"><a href="#场景问题" class="headerlink" title="场景问题"></a>场景问题</h2><h4 id="缓存穿透"><a href="#缓存穿透" class="headerlink" title="缓存穿透"></a>缓存穿透</h4><h6 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h6><h6 id="如何处理"><a href="#如何处理" class="headerlink" title="如何处理"></a>如何处理</h6><h4 id="缓存击穿"><a href="#缓存击穿" class="headerlink" title="缓存击穿"></a>缓存击穿</h4><h6 id="现象-1"><a href="#现象-1" class="headerlink" title="现象"></a>现象</h6><h6 id="如何处理-1"><a href="#如何处理-1" class="headerlink" title="如何处理"></a>如何处理</h6><h4 id="缓存雪崩"><a href="#缓存雪崩" class="headerlink" title="缓存雪崩"></a>缓存雪崩</h4><h6 id="现象-2"><a href="#现象-2" class="headerlink" title="现象"></a>现象</h6><h6 id="如何处理-2"><a href="#如何处理-2" class="headerlink" title="如何处理"></a>如何处理</h6><h4 id="热key问题"><a href="#热key问题" class="headerlink" title="热key问题"></a>热key问题</h4><h6 id="现象-3"><a href="#现象-3" class="headerlink" title="现象"></a>现象</h6><h6 id="如何处理-3"><a href="#如何处理-3" class="headerlink" title="如何处理"></a>如何处理</h6><h2 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h2><p><a href="https://www.processon.com/view/61c17b3ef346fb21618ca966?fromnew=1">https://www.processon.com/view/61c17b3ef346fb21618ca966?fromnew=1</a></p>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 中间件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JVM调优</title>
      <link href="/2022/11/15/%E9%9D%A2%E8%AF%95%E7%B3%BB%E5%88%97-JVM%E8%B0%83%E4%BC%98/"/>
      <url>/2022/11/15/%E9%9D%A2%E8%AF%95%E7%B3%BB%E5%88%97-JVM%E8%B0%83%E4%BC%98/</url>
      
        <content type="html"><![CDATA[<!-- 展示图片 --><p><img src="https://img2.baidu.com/it/u=1734247813,400897296&fm=253&fmt=auto&app=138&f=PNG?w=1111&h=500" alt="Mou_icon"></p><h1 id="JVM调优"><a href="#JVM调优" class="headerlink" title="JVM调优"></a>JVM调优</h1><h2 id="1-JVM调优的步骤"><a href="#1-JVM调优的步骤" class="headerlink" title="1. JVM调优的步骤"></a>1. JVM调优的步骤</h2><p>一般情况下，JVM调优可通过以下步骤进行：</p><ul><li>分析GC日志及dump文件，判断是否需要优化，确定瓶颈问题点；</li><li>确定JVM调优量化目标；</li><li>确定JVM调优参数（根据历史JVM参数来调整）；</li><li>依次调优内存、延迟、吞吐量等指标；</li><li>对比观察调优前后的差异。</li></ul><h2 id="2-JVM调优的参数"><a href="#2-JVM调优的参数" class="headerlink" title="2. JVM调优的参数"></a>2. JVM调优的参数</h2><p>JVM调优的参数有很多，这里列出一些常用的参数：</p><ul><li>-Xms：JVM启动时初始堆大小；</li><li>-Xmx：JVM堆最大值；</li><li>-Xmn：年轻代大小；</li><li>-XX:PermSize：永久代初始大小；</li><li>-XX:MaxPermSize：永久代最大值；</li><li>-XX:SurvivorRatio：年轻代中Eden区域与Survivor区域的比例；</li><li>-XX:NewRatio：老年代与年轻代的比例；</li><li>-XX:MaxTenuringThreshold：垃圾最大年龄；</li><li>-XX:+UseConcMarkSweepGC：使用CMS垃圾回收器；</li><li>-XX:+UseParNewGC：使用ParNew垃圾回收器；</li><li>-XX:+UseParallelGC：使用Parallel垃圾回收器；</li><li>-XX:+UseSerialGC：使用Serial垃圾回收器；</li><li>-XX:+UseG1GC：使用G1垃圾回收器。</li></ul><h2 id="3-JVM调优的工具"><a href="#3-JVM调优的工具" class="headerlink" title="3. JVM调优的工具"></a>3. JVM调优的工具</h2><p>JVM调优的工具有很多，这里列出一些常用的工具：</p><ul><li>jstat：用于监视JVM统计信息的命令行工具；</li><li>jmap：用于生成JVM堆转储快照的命令行工具；</li><li>jstack：用于生成JVM线程转储快照的命令行工具；</li><li>jconsole：用于监视JVM的GUI工具；</li><li>VisualVM：用于监视JVM的GUI工具。</li></ul><h2 id="4-JVM调优的实例"><a href="#4-JVM调优的实例" class="headerlink" title="4. JVM调优的实例"></a>4. JVM调优的实例</h2><p>以下是一些JVM调优的实例：</p><ul><li><a href="https://blog.csdn.net/qq_36080515/article/details/120502104">JVM调优汇总（JDK1.8）</a></li><li><a href="https://zhuanlan.zhihu.com/p/488615913">面试官：如何进行 JVM 调优（附真实案例）</a></li><li><a href="https://zhuanlan.zhihu.com/p/91223656">JVM性能调优详解</a></li><li><a href="https://juejin.cn/post/6958097237398257671">JVM调优详解（一次java性能优化实战）</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 面试系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Interview </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud Alibaba 微服务实战-基础环境</title>
      <link href="/2020/06/10/SpringCloud%20Alibaba%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%AE%9E%E6%88%98-%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83/"/>
      <url>/2020/06/10/SpringCloud%20Alibaba%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%AE%9E%E6%88%98-%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<!-- 展示图片 --><p><img src="http://gimg2.baidu.com/image_search/src=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fimages%2F20181220%2F625a58b9a1d3449491d2ae9e396da5d8.jpeg&refer=http%3A%2F%2F5b0988e595225.cdn.sohucs.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1623575506&t=fe07c6007ebc786e268abb7e4480dc0e" alt="Mou_icon"></p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><pre><code>很多人可能会问，有了spring cloud这个微服务的框架，为什么又要使用spring cloud alibaba这个框架了？最重要的原因在于spring cloud中的几乎所有的组件都使用Netflix公司的产品，然后在其基础上做了一层封装。然而Netflix的服务发现组件Eureka已经停止更新，我们公司在使用的时候就发现过其一个细小的Bug；而其他的众多组件预计会在明年(即2020年)停止维护。所以急需其他的一些替代产品，也就是spring cloud alibaba，目前正处于蓬勃发展的态式。</code></pre><p><img src="http://blog.lutao1726.top/nacos%E9%9B%86%E7%BE%A4-01.png" alt="Mou_icon"></p><h4 id="MySQL数据源配置"><a href="#MySQL数据源配置" class="headerlink" title="MySQL数据源配置"></a>MySQL数据源配置</h4><p>在进行集群配置之前，先完成对MySQL数据源的初始化和配置。主要分以下两步：</p><ul><li>1、初始化MySQL数据库，数据库初始化文件：<code>nacos-mysql.sql</code>，该文件可以在Nacos程序包下的conf目录下获得。</li><li>2、修改<code>conf/application.properties</code>文件，增加支持MySQL数据源配置，添加（目前只支持mysql）数据源的url、用户名和密码。配置样例如下：</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.datasource.platform</span>=<span class="string">mysql</span></span><br><span class="line"><span class="attr">db.num</span>=<span class="string">1</span></span><br><span class="line"><span class="attr">db.url.0</span>=<span class="string">jdbc:mysql://localhost:3306/nacos?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true</span></span><br><span class="line"><span class="attr">db.user</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">db.password</span>=<span class="string"></span></span><br></pre></td></tr></table></figure><h4 id="集群配置"><a href="#集群配置" class="headerlink" title="集群配置"></a>集群配置</h4><p>在Nacos的conf目录下有一个cluster.conf.example，可以直接把example扩展名去掉来使用，也可以单独创建一个<code>cluster.conf</code>文件，然后打开将后续要部署的Nacos实例地址配置在这里。</p><p>本文以在本地不同端点启动3个Nacos服务端为例，可以如下配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:8841</span><br><span class="line">127.0.0.1:8842</span><br><span class="line">127.0.0.1:8843</span><br></pre></td></tr></table></figure><blockquote><p>注意：这里的例子仅用于本地学习测试使用，实际生产环境必须部署在不同的节点上，才能起到高可用的效果。另外，Nacos的集群需要3个或3个以上的节点，并且确保这三个节点之间是可以互相访问的。</p></blockquote><h4 id="本地测试"><a href="#本地测试" class="headerlink" title="本地测试"></a>本地测试</h4><p>本文中，在集群配置的时候，我们设定了3个Nacos的实例都在本地，只是以不同的端口区分，所以我们在启动Nacos的时候，需要修改不同的端口号。</p><p>下面介绍一种方法来方便地启动Nacos的三个本地实例，我们可以将bin目录下的startup.sh脚本复制三份，分别用来启动三个不同端口的Nacos实例，为了可以方便区分不同实例的启动脚本，我们可以把端口号加入到脚本的命名中，比如：</p><ul><li>startup-8841.sh</li><li>startup-8842.sh</li><li>startup-8843.sh</li></ul><p>然后，分别修改这三个脚本中的参数，具体如下图的红色部分（端口号根据上面脚本命名分配）：</p><p><img src="http://blog.lutao1726.top/nacos%E9%9B%86%E7%BE%A4-02.png" alt="Mou_icon"></p><p>修改完3个脚本配置之后，分别执行下面的命令就可以在本地启动Nacos集群了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sh startup-8841.sh</span><br><span class="line">sh startup-8842.sh</span><br><span class="line">sh startup-8843.sh</span><br></pre></td></tr></table></figure><h4 id="生产环境"><a href="#生产环境" class="headerlink" title="生产环境"></a>生产环境</h4><p>在实际生产环境部署的时候，由于每个实例分布在不同的节点上，我们可以直接使用默认的启动脚本（除非要调整一些JVM参数等才需要修改）。只需要在各个节点的Nacos的bin目录下执行<code>sh startup.sh</code>命令即可。</p><h4 id="Proxy配置"><a href="#Proxy配置" class="headerlink" title="Proxy配置"></a>Proxy配置</h4><p>在Nacos的集群启动完毕之后，根据架构图所示，我们还需要提供一个统一的入口给我们用来维护以及给Spring Cloud应用访问。简单地说，就是我们需要为上面启动的的三个Nacos实例做一个可以为它们实现负载均衡的访问点。这个实现的方式非常多，这里就举个用Nginx来实现的简单例子吧。</p><p>在Nginx配置文件的http段中，我们可以加入下面的配置内容：</p><p><img src="http://blog.lutao1726.top/nacos%E9%9B%86%E7%BE%A4-03.png" alt="Mou_icon"></p>]]></content>
      
      
      <categories>
          
          <category> SpringCloud Alibaba </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> SpringCloud Alibaba </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java锁汇总</title>
      <link href="/2019/11/15/Java%E9%94%81%E6%B1%87%E6%80%BB/"/>
      <url>/2019/11/15/Java%E9%94%81%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<!-- 展示图片 --><p><img src="http://justyy.com/wp-content/uploads/2016/01/markdown-syntax-language.png" alt="Mou_icon"></p><h3 id="Java锁汇总"><a href="#Java锁汇总" class="headerlink" title="Java锁汇总"></a>Java锁汇总</h3><p>各种锁汇总，乐观锁、悲观锁、分布式锁、可重入锁、互斥锁、读写锁、分段锁、类锁、行级锁等</p><h4 id="乐观锁"><a href="#乐观锁" class="headerlink" title="乐观锁"></a>乐观锁</h4>]]></content>
      
      
      <categories>
          
          <category> Java教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何做技术选型？Sentinel 还是 Hystrix？</title>
      <link href="/2019/11/15/%E5%A6%82%E4%BD%95%E5%81%9A%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B%EF%BC%9FSentinel%20%E8%BF%98%E6%98%AF%20Hystrix%EF%BC%9F/"/>
      <url>/2019/11/15/%E5%A6%82%E4%BD%95%E5%81%9A%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B%EF%BC%9FSentinel%20%E8%BF%98%E6%98%AF%20Hystrix%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<!-- 展示图片 --><p><img src="http://justyy.com/wp-content/uploads/2016/01/markdown-syntax-language.png" alt="Mou_icon"></p><details><summary>Title</summary>content!!!</details>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java关于远程调试程序教程</title>
      <link href="/2019/09/29/Java%E5%85%B3%E4%BA%8E%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95%E7%A8%8B%E5%BA%8F%E6%95%99%E7%A8%8B/"/>
      <url>/2019/09/29/Java%E5%85%B3%E4%BA%8E%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95%E7%A8%8B%E5%BA%8F%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<!-- 展示图片 --><p><img src="http://biddingcs.lutao1726.top/java-flag-001.jpg" alt="Mou_icon"></p><span id="more"></span><p>写一个简单程序打成jar丢到远程服务器运行，模拟远程Server在运行。就拿Java调用shell脚本提交作业程序为例分析。源码如下  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JavaShell</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">grant</span> <span class="operator">=</span> <span class="string">&quot;chmod u+x submit-job.sh&quot;</span>;</span><br><span class="line">            <span class="type">Runtime</span> <span class="variable">runtime</span> <span class="operator">=</span> Runtime.getRuntime();</span><br><span class="line"></span><br><span class="line">            <span class="type">Process</span> <span class="variable">grantProc</span> <span class="operator">=</span> runtime.exec(grant);</span><br><span class="line">            <span class="type">int</span> <span class="variable">resultCode</span> <span class="operator">=</span> grantProc.waitFor();</span><br><span class="line">            System.out.println(resultCode);</span><br><span class="line">            grantProc = runtime.exec(<span class="string">&quot;./submit-job.sh&quot;</span>);</span><br><span class="line">            resultCode = grantProc.waitFor();</span><br><span class="line"></span><br><span class="line">            System.out.println(resultCode);</span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> grantProc.getInputStream();</span><br><span class="line">            <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="type">int</span> code;</span><br><span class="line">            <span class="keyword">while</span> ((code = in.read(buffer, <span class="number">0</span>, buffer.length)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                System.out.print(<span class="keyword">new</span> <span class="title class_">String</span>(buffer, <span class="number">0</span>, code));</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 死循环阻止debugger没有连接上之前程序退出（测试suspend参数功能） </span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            System.out.println(<span class="string">&quot;shell脚本执行完毕，接下来开始进行定时打印任务！&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">                Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;这是第&quot;</span> + (++i) + <span class="string">&quot;次循环！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;this is a excption !&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打成Jar包提交到远程服务器之后运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java  -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=9999,server=y,<span class="built_in">suspend</span>=y  -jar  JavaShell.jar </span><br></pre></td></tr></table></figure><p><img src="http://blog.lutao1726.top/java-debug-01.png"></p><p>会发现程序阻塞，并等待debugger连接，此时我们可以使用eclipse进行远程调试：<br><img src="http://blog.lutao1726.top/java-debug-02.png"></p><p>点击debugger即可进行连接，跟踪源码运行：<br><img src="http://blog.lutao1726.top/java-debug-03.png"></p><p>远程有输出，证明远程程序正在跟踪debugger执行：<br><img src="http://blog.lutao1726.top/java-debug-04.png"></p><p>更多参数细节：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-XDebug               启用调试。</span><br><span class="line">-Xnoagent             禁用默认sun.tools.debug调试器。</span><br><span class="line">-Djava.compiler=NONE  禁止 JIT 编译器的加载。</span><br><span class="line">-Xrunjdwp             加载JDWP的JPDA参考执行实例。</span><br><span class="line">transport             用于在调试程序和 VM 使用的进程之间通讯。</span><br><span class="line">dt_socket             套接字传输。</span><br><span class="line">dt_shmem              共享内存传输，仅限于 Windows。</span><br><span class="line">server=y/n            VM 是否需要作为调试服务器执行。</span><br><span class="line">address=3999          调试服务器的端口号，客户端用来连接服务器的端口号。</span><br><span class="line"><span class="built_in">suspend</span>=y/n           是否在调试客户端建立连接之后启动 VM 。</span><br></pre></td></tr></table></figure><h4 id="IntelliJ-IDEA远程调试运行中的JAVA程序-项目"><a href="#IntelliJ-IDEA远程调试运行中的JAVA程序-项目" class="headerlink" title="IntelliJ IDEA远程调试运行中的JAVA程序&#x2F;项目"></a><strong>IntelliJ IDEA远程调试运行中的JAVA程序&#x2F;项目</strong></h4><h6 id="IntelliJ-IDEA配置"><a href="#IntelliJ-IDEA配置" class="headerlink" title="IntelliJ IDEA配置"></a>IntelliJ IDEA配置</h6><ul><li>1.添加一个运行配置（remote项）<br><img src="http://blog.lutao1726.top/java-debug-05.png"></li><li>2.打开remote项配置对话框</li><li>3.远程jvm参数配置提示</li><li>4.远程调试的ip地址和端口号，ip就是java项目所在机器ip，端口只要不被占用就可以（注意防火墙不阻止该端口的访问）</li><li>5.源码模块，选择程序对应的源码模块即可</li></ul><h6 id="远程java程序配置"><a href="#远程java程序配置" class="headerlink" title="远程java程序配置"></a>远程java程序配置</h6><ul><li>1.普通java程序配置</li></ul><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -agentlib:jdwp=transport=dt_socket,server=y,<span class="built_in">suspend</span>=n,address=5006 -jar chess-server.jar</span><br></pre></td></tr></table></figure><ul><li>2.tomcat中web项目配置</li></ul><p>在tomcat的bin目录中，新建setenv.sh文件，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CATALINA_OPTS=<span class="string">&quot;-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5006&quot;</span></span><br></pre></td></tr></table></figure><p>如果是windows系统，新建setenv.bat文件，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SET CATALINA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,<span class="built_in">suspend</span>=n,address=5006</span><br></pre></td></tr></table></figure><p>tomcat启动后会自动调用setenv文件，进行jvm参数设置</p><h6 id="启动调试"><a href="#启动调试" class="headerlink" title="启动调试"></a>启动调试</h6><p>点击调试按钮，控制台输出如下提示就成功了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Connected to the target VM, address: <span class="string">&#x27;192.168.66.252:5006&#x27;</span>, transport: <span class="string">&#x27;socket&#x27;</span> </span><br></pre></td></tr></table></figure><p>然后先在代码处打上断点，然后操作java程序即可进入断点。</p>]]></content>
      
      
      <categories>
          
          <category> Java教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次生产问题 elastic-job</title>
      <link href="/2019/08/28/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%94%9F%E4%BA%A7%E9%97%AE%E9%A2%98%20elastic-job/"/>
      <url>/2019/08/28/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%94%9F%E4%BA%A7%E9%97%AE%E9%A2%98%20elastic-job/</url>
      
        <content type="html"><![CDATA[<h4 id="问题截图"><a href="#问题截图" class="headerlink" title="问题截图"></a>问题截图</h4><p><img src="http://blog.lutao1726.top/elastic-job-01.jpg" alt="Mou_icon"></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">com</span><span class="selector-class">.dangdang</span><span class="selector-class">.ddframe</span><span class="selector-class">.job</span><span class="selector-class">.exception</span><span class="selector-class">.JobConfigurationException</span>: <span class="selector-tag">Job</span> <span class="selector-tag">conflict</span> <span class="selector-tag">with</span> <span class="selector-tag">register</span> <span class="selector-tag">center</span>. <span class="selector-tag">The</span> <span class="selector-tag">job</span> &#x27;<span class="selector-tag">UserLongTimeNoLoginTask</span>&#x27; <span class="selector-tag">in</span> <span class="selector-tag">register</span> <span class="selector-tag">center</span>&#x27;<span class="selector-tag">s</span> <span class="selector-tag">class</span> <span class="selector-tag">is</span> &#x27;<span class="selector-tag">com</span><span class="selector-class">.zhjs</span><span class="selector-class">.saas</span><span class="selector-class">.job</span><span class="selector-class">.task</span><span class="selector-class">.SupplyCreditNoLoginTask</span>&#x27;, <span class="selector-tag">your</span> <span class="selector-tag">job</span> <span class="selector-tag">class</span> <span class="selector-tag">is</span> &#x27;<span class="selector-tag">com</span><span class="selector-class">.zhjs</span><span class="selector-class">.saas</span><span class="selector-class">.job</span><span class="selector-class">.task</span><span class="selector-class">.UserLongTimeNoLoginTask</span>&#x27;</span><br><span class="line">        <span class="selector-tag">at</span> <span class="selector-tag">com</span><span class="selector-class">.dangdang</span><span class="selector-class">.ddframe</span><span class="selector-class">.job</span><span class="selector-class">.lite</span><span class="selector-class">.internal</span><span class="selector-class">.config</span><span class="selector-class">.ConfigurationService</span><span class="selector-class">.checkConflictJob</span>(ConfigurationService.<span class="attribute">java</span>:<span class="number">79</span>)</span><br><span class="line">        <span class="selector-tag">at</span> <span class="selector-tag">com</span><span class="selector-class">.dangdang</span><span class="selector-class">.ddframe</span><span class="selector-class">.job</span><span class="selector-class">.lite</span><span class="selector-class">.internal</span><span class="selector-class">.config</span><span class="selector-class">.ConfigurationService</span><span class="selector-class">.persist</span>(ConfigurationService.<span class="attribute">java</span>:<span class="number">70</span>)</span><br><span class="line">        <span class="selector-tag">at</span> <span class="selector-tag">com</span><span class="selector-class">.dangdang</span><span class="selector-class">.ddframe</span><span class="selector-class">.job</span><span class="selector-class">.lite</span><span class="selector-class">.internal</span><span class="selector-class">.schedule</span><span class="selector-class">.SchedulerFacade</span><span class="selector-class">.updateJobConfiguration</span>(SchedulerFacade.<span class="attribute">java</span>:<span class="number">103</span>)</span><br><span class="line">        <span class="selector-tag">at</span> <span class="selector-tag">com</span><span class="selector-class">.dangdang</span><span class="selector-class">.ddframe</span><span class="selector-class">.job</span><span class="selector-class">.lite</span><span class="selector-class">.api</span><span class="selector-class">.JobScheduler</span><span class="selector-class">.init</span>(JobScheduler.<span class="attribute">java</span>:<span class="number">105</span>)</span><br><span class="line">        <span class="selector-tag">at</span> <span class="selector-tag">com</span><span class="selector-class">.zhjs</span><span class="selector-class">.saas</span><span class="selector-class">.job</span><span class="selector-class">.manager</span><span class="selector-class">.JobManager</span><span class="selector-class">.lambda</span>$<span class="selector-tag">init</span>$<span class="number">0</span>(JobManager.<span class="attribute">java</span>:<span class="number">51</span>)</span><br><span class="line">        <span class="selector-tag">at</span> <span class="selector-tag">java</span><span class="selector-class">.util</span><span class="selector-class">.LinkedHashMap</span>$<span class="selector-tag">LinkedValues</span><span class="selector-class">.forEach</span>(LinkedHashMap.<span class="attribute">java</span>:<span class="number">608</span>)</span><br><span class="line">        <span class="selector-tag">at</span> <span class="selector-tag">com</span><span class="selector-class">.zhjs</span><span class="selector-class">.saas</span><span class="selector-class">.job</span><span class="selector-class">.manager</span><span class="selector-class">.JobManager</span><span class="selector-class">.init</span>(JobManager.<span class="attribute">java</span>:<span class="number">42</span>)</span><br><span class="line">        <span class="selector-tag">at</span> <span class="selector-tag">com</span><span class="selector-class">.zhjs</span><span class="selector-class">.saas</span><span class="selector-class">.job</span><span class="selector-class">.manager</span><span class="selector-class">.JobManager</span>$$<span class="selector-tag">FastClassBySpringCGLIB</span>$$<span class="number">31</span><span class="selector-tag">b26d06</span><span class="selector-class">.invoke</span>(&lt;generated&gt;)</span><br><span class="line">        <span class="selector-tag">at</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.cglib</span><span class="selector-class">.proxy</span><span class="selector-class">.MethodProxy</span><span class="selector-class">.invoke</span>(MethodProxy.<span class="attribute">java</span>:<span class="number">204</span>)</span><br><span class="line">        <span class="selector-tag">at</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.aop</span><span class="selector-class">.framework</span><span class="selector-class">.CglibAopProxy</span>$<span class="selector-tag">CglibMethodInvocation</span><span class="selector-class">.invokeJoinpoint</span>(CglibAopProxy.<span class="attribute">java</span>:<span class="number">736</span>)</span><br><span class="line">        <span class="selector-tag">at</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.aop</span><span class="selector-class">.framework</span><span class="selector-class">.ReflectiveMethodInvocation</span><span class="selector-class">.proceed</span>(ReflectiveMethodInvocation.<span class="attribute">java</span>:<span class="number">157</span>)</span><br><span class="line">        <span class="selector-tag">at</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.aop</span><span class="selector-class">.interceptor</span><span class="selector-class">.AsyncExecutionInterceptor</span>$<span class="number">1</span><span class="selector-class">.call</span>(AsyncExecutionInterceptor.<span class="attribute">java</span>:<span class="number">115</span>)</span><br><span class="line">        <span class="selector-tag">at</span> <span class="selector-tag">java</span><span class="selector-class">.util</span><span class="selector-class">.concurrent</span><span class="selector-class">.FutureTask</span><span class="selector-class">.run</span>(FutureTask.<span class="attribute">java</span>:<span class="number">266</span>)</span><br><span class="line">        <span class="selector-tag">at</span> <span class="selector-tag">java</span><span class="selector-class">.util</span><span class="selector-class">.concurrent</span><span class="selector-class">.ThreadPoolExecutor</span><span class="selector-class">.runWorker</span>(ThreadPoolExecutor.<span class="attribute">java</span>:<span class="number">1149</span>)</span><br><span class="line">        <span class="selector-tag">at</span> <span class="selector-tag">java</span><span class="selector-class">.util</span><span class="selector-class">.concurrent</span><span class="selector-class">.ThreadPoolExecutor</span>$<span class="selector-tag">Worker</span><span class="selector-class">.run</span>(ThreadPoolExecutor.<span class="attribute">java</span>:<span class="number">624</span>)</span><br><span class="line">        <span class="selector-tag">at</span> <span class="selector-tag">java</span><span class="selector-class">.lang</span><span class="selector-class">.Thread</span><span class="selector-class">.run</span>(Thread.<span class="attribute">java</span>:<span class="number">748</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>引起：com.dangdang.ddframe.job.exception.JobConfigurationException：作业与注册中心冲突。 注册中心班级的工作’UserLongTimeNoLoginTask’是’com.zhjs.saas.job.task.SupplyCreditNoLoginTask’，你的工作类是’com.zhjs.saas.job.task.UserLongTimeNoLoginTask’</p></blockquote><h4 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h4><h6 id="下载-ZooInspector-zip"><a href="#下载-ZooInspector-zip" class="headerlink" title="下载 ZooInspector.zip"></a>下载 <a href="https://issues.apache.org/jira/secure/attachment/12436620/ZooInspector.zip">ZooInspector.zip</a></h6><h6 id="解压，进入目录ZooInspector-build，"><a href="#解压，进入目录ZooInspector-build，" class="headerlink" title="解压，进入目录ZooInspector\build，"></a>解压，进入目录ZooInspector\build，</h6><p> 运行zookeeper-dev-ZooInspector.jar</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar zookeeper-dev-ZooInspector.jar  //执行成功后,会弹出java ui client</span><br></pre></td></tr></table></figure><p><img src="http://blog.lutao1726.top/elastic-job-02.jpg" alt="Mou_icon"></p><h6 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h6><p><img src="http://blog.lutao1726.top/elastic-job-03.jpg" alt="Mou_icon"></p><p>选中节点后点删除图标<br><img src="http://blog.lutao1726.top/elastic-job-04.jpg" alt="Mou_icon"></p><p>不删除节点，手动改配置也是可以的：<br><img src="http://blog.lutao1726.top/elastic-job-05.jpg" alt="Mou_icon"></p>]]></content>
      
      
      <categories>
          
          <category> Linux教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>grafana+prometheus监控Jvm</title>
      <link href="/2019/08/03/grafana+prometheus%E7%9B%91%E6%8E%A7Jvm/"/>
      <url>/2019/08/03/grafana+prometheus%E7%9B%91%E6%8E%A7Jvm/</url>
      
        <content type="html"><![CDATA[<h6 id="下载jmx-exporter"><a href="#下载jmx-exporter" class="headerlink" title="下载jmx_exporter"></a>下载jmx_exporter</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /app/runtime/prometheus/jmx_exporter</span><br><span class="line"> <span class="built_in">cd</span> /app/runtime/prometheus/jmx_exporter</span><br><span class="line"> wget https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.3.1/jmx_prometheus_javaagent-0.3.1.jar</span><br></pre></td></tr></table></figure><h6 id="添加配置文件-simple-config-yml"><a href="#添加配置文件-simple-config-yml" class="headerlink" title="添加配置文件 simple-config.yml"></a>添加配置文件 <em><strong>simple-config.yml</strong></em></h6><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">startDelaySeconds:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">hostPort:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:1234</span></span><br><span class="line"><span class="attr">username:</span> </span><br><span class="line"><span class="attr">password:</span> </span><br><span class="line"><span class="attr">jmxUrl:</span> <span class="string">service:jmx:rmi:///jndi/rmi://127.0.0.1:1234/jmxrmi</span></span><br><span class="line"><span class="attr">ssl:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">lowercaseOutputName:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">lowercaseOutputLabelNames:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">whitelistObjectNames:</span> [<span class="string">&quot;org.apache.cassandra.metrics:*&quot;</span>]</span><br><span class="line"><span class="attr">blacklistObjectNames:</span> [<span class="string">&quot;org.apache.cassandra.metrics:type=ColumnFamily,*&quot;</span>]</span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">pattern:</span> <span class="string">&#x27;org.apache.cassandra.metrics&lt;type=(\w+), name=(\w+)&gt;&lt;&gt;Value: (\d+)&#x27;</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cassandra_$1_$2</span></span><br><span class="line">    <span class="attr">value:</span> <span class="string">$3</span></span><br><span class="line">    <span class="attr">valueFactor:</span> <span class="number">0.001</span></span><br><span class="line">    <span class="attr">labels:</span> &#123;&#125;</span><br><span class="line">    <span class="attr">help:</span> <span class="string">&quot;Cassandra metric $1 $2&quot;</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">GAUGE</span></span><br><span class="line">    <span class="attr">attrNameSnakeCase:</span> <span class="literal">false</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="启动jar包"><a href="#启动jar包" class="headerlink" title="启动jar包"></a>启动jar包</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash -ile </span></span><br><span class="line"><span class="built_in">nohup</span> java -jar -Dsun.zip.disableMemoryMapping=<span class="literal">true</span>   -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/app/services/saas-data-center -Xms512m -Xmx1024m -javaagent:/app/runtime/prometheus/jmx_exporter/jmx_prometheus_javaagent-0.3.1.jar=6060:/app/runtime/prometheus/jmx_exporter/simple-config.yml  saas-data-center-0.0.1-SNAPSHOT.jar &gt; /app/logs/saas-data-center/saas-data-center.log 2&gt;&amp;1 &amp;</span><br><span class="line"><span class="built_in">echo</span> $! &gt; /app/data/data-saas-data-center.pid</span><br></pre></td></tr></table></figure><h6 id="修改prometheus配置文件"><a href="#修改prometheus配置文件" class="headerlink" title="修改prometheus配置文件"></a>修改prometheus配置文件</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- job_name: &#x27;jvm&#x27;</span><br><span class="line">  scrape_interval: 30s</span><br><span class="line">  static_configs:</span><br><span class="line">  - targets:</span><br><span class="line">    - &#x27;192.168.1.231:6060&#x27;</span><br></pre></td></tr></table></figure><h6 id="重启prometheus"><a href="#重启prometheus" class="headerlink" title="重启prometheus"></a>重启prometheus</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> ./prometheus --config.file=./prometheus.yml &amp;</span><br></pre></td></tr></table></figure><h4 id="grafana配置"><a href="#grafana配置" class="headerlink" title="grafana配置"></a>grafana配置</h4><p>配置prometheus数据源<br>添加prometheus插件，然后配置<br><img src="https://lutao1726.top/img/grafana-redis-01.png" alt="Mou_icon"><br><img src="https://lutao1726.top/img/grafana-redis-02.png" alt="Mou_icon"><br><img src="https://lutao1726.top/img/grafana-redis-03.png" alt="Mou_icon"></p><h4 id="下载仪表盘模板"><a href="#下载仪表盘模板" class="headerlink" title="下载仪表盘模板"></a>下载仪表盘模板</h4><p><img src="https://lutao1726.top/img/grafana-jvm-01.png" alt="Mou_icon"></p><h6 id="导入模板"><a href="#导入模板" class="headerlink" title="导入模板"></a>导入模板</h6><p><img src="https://lutao1726.top/img/grafana-redis-05.png" alt="Mou_icon"><br><img src="https://lutao1726.top/img/grafana-jvm-02.png" alt="Mou_icon"></p>]]></content>
      
      
      <categories>
          
          <category> Linux教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> grafana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>grafana+prometheus监控jenkins</title>
      <link href="/2019/07/28/grafana+prometheus%E7%9B%91%E6%8E%A7jenkins/"/>
      <url>/2019/07/28/grafana+prometheus%E7%9B%91%E6%8E%A7jenkins/</url>
      
        <content type="html"><![CDATA[<h6 id="在jenkins中下载prometheus-plugin"><a href="#在jenkins中下载prometheus-plugin" class="headerlink" title="在jenkins中下载prometheus-plugin"></a>在jenkins中下载prometheus-plugin</h6><p><img src="https://lutao1726.top/img/grafana-jenkins-01.png" alt="Mou_icon"></p><h6 id="修改prometheus配置文件"><a href="#修改prometheus配置文件" class="headerlink" title="修改prometheus配置文件"></a>修改prometheus配置文件</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- job_name: &#x27;jenkins&#x27;</span><br><span class="line">  metrics_path: &#x27;/prometheus/&#x27;</span><br><span class="line">  scheme: http</span><br><span class="line">  bearer_token: &lt;bearer_token&gt;</span><br><span class="line">  static_configs:</span><br><span class="line">  - targets: [&#x27;192.168.1.68:8090&#x27;]</span><br></pre></td></tr></table></figure><h6 id="重启prometheus"><a href="#重启prometheus" class="headerlink" title="重启prometheus"></a>重启prometheus</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> ./prometheus --config.file=./prometheus.yml &amp;</span><br></pre></td></tr></table></figure><h4 id="grafana配置"><a href="#grafana配置" class="headerlink" title="grafana配置"></a>grafana配置</h4><p>配置prometheus数据源<br>添加prometheus插件，然后配置<br><img src="https://lutao1726.top/img/grafana-redis-01.png" alt="Mou_icon"><br><img src="https://lutao1726.top/img/grafana-redis-02.png" alt="Mou_icon"><br><img src="https://lutao1726.top/img/grafana-redis-03.png" alt="Mou_icon"></p><h4 id="下载node-exporter仪表盘模板"><a href="#下载node-exporter仪表盘模板" class="headerlink" title="下载node_exporter仪表盘模板"></a>下载node_exporter仪表盘模板</h4><p><img src="https://lutao1726.top/img/grafana-jenkins-02.png" alt="Mou_icon"></p><h6 id="导入模板"><a href="#导入模板" class="headerlink" title="导入模板"></a>导入模板</h6><p><img src="https://lutao1726.top/img/grafana-redis-05.png" alt="Mou_icon"><br><img src="https://lutao1726.top/img/grafana-jenkins-03.png" alt="Mou_icon"></p>]]></content>
      
      
      <categories>
          
          <category> Linux教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> grafana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>grafana+prometheus监控mysql</title>
      <link href="/2019/07/21/grafana+prometheus%E7%9B%91%E6%8E%A7mysql/"/>
      <url>/2019/07/21/grafana+prometheus%E7%9B%91%E6%8E%A7mysql/</url>
      
        <content type="html"><![CDATA[<h4 id="下载mysqld-exporter插件"><a href="#下载mysqld-exporter插件" class="headerlink" title="下载mysqld_exporter插件"></a>下载<a href="https://github.com/prometheus/mysqld_exporter">mysqld_exporter插件</a></h4><h6 id="在被监控端mysql服务器上创建账号用于mysql-exporter收集使用"><a href="#在被监控端mysql服务器上创建账号用于mysql-exporter收集使用" class="headerlink" title="在被监控端mysql服务器上创建账号用于mysql exporter收集使用"></a>在被监控端mysql服务器上创建账号用于mysql exporter收集使用</h6><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> REPLICATION CLIENT, PROCESS <span class="keyword">ON</span>  <span class="operator">*</span>.<span class="operator">*</span>  <span class="keyword">to</span> <span class="string">&#x27;exporter&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> performance_schema.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;exporter&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/prometheus/mysqld_exporter/releases/download/v0.12.1/mysqld_exporter-0.12.1.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><h6 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar xf tar -xvf mysqld_exporter-*.tar.gz -C /app/runtime/prometheus</span><br></pre></td></tr></table></figure><h6 id="配置文件-my-cnf"><a href="#配置文件-my-cnf" class="headerlink" title="配置文件 .my.cnf"></a>配置文件 <em><strong>.my.cnf</strong></em></h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">user=exporter</span><br><span class="line">password=123456</span><br></pre></td></tr></table></figure><h6 id="在启动"><a href="#在启动" class="headerlink" title="在启动"></a>在启动</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./mysqld_exporter -config.my-cnf=<span class="string">&quot;.my.cnf&quot;</span> &amp;</span><br></pre></td></tr></table></figure><h6 id="查看node-exporter是否开启"><a href="#查看node-exporter是否开启" class="headerlink" title="查看node_exporter是否开启"></a>查看node_exporter是否开启</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netstat -lntp</span><br><span class="line">tcp6       0      0 :::9104                 :::*                    LISTEN      4981/./mysqld_expor</span><br></pre></td></tr></table></figure><h6 id="修改prometheus配置文件"><a href="#修改prometheus配置文件" class="headerlink" title="修改prometheus配置文件"></a>修改prometheus配置文件</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- job_name: mysql</span><br><span class="line">  static_configs:</span><br><span class="line">    - targets: [&#x27;118.25.46.244:9104&#x27;]</span><br><span class="line">      labels:</span><br><span class="line">        instance: db1 </span><br></pre></td></tr></table></figure><h6 id="重启prometheus"><a href="#重启prometheus" class="headerlink" title="重启prometheus"></a>重启prometheus</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> ./prometheus --config.file=./prometheus.yml &amp;</span><br></pre></td></tr></table></figure><h4 id="grafana配置"><a href="#grafana配置" class="headerlink" title="grafana配置"></a>grafana配置</h4><p>配置prometheus数据源<br>添加prometheus插件，然后配置<br><img src="https://lutao1726.top/img/grafana-redis-01.png" alt="Mou_icon"><br><img src="https://lutao1726.top/img/grafana-redis-02.png" alt="Mou_icon"><br><img src="https://lutao1726.top/img/grafana-redis-03.png" alt="Mou_icon"></p><h4 id="下载仪表盘模板"><a href="#下载仪表盘模板" class="headerlink" title="下载仪表盘模板"></a>下载仪表盘模板</h4><p><img src="https://lutao1726.top/img/grafana-mysql-01.png" alt="Mou_icon"></p><h6 id="导入模板"><a href="#导入模板" class="headerlink" title="导入模板"></a>导入模板</h6><p><img src="https://lutao1726.top/img/grafana-redis-05.png" alt="Mou_icon"><br><img src="https://lutao1726.top/img/grafana-mysql-02.png" alt="Mou_icon"></p>]]></content>
      
      
      <categories>
          
          <category> Linux教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> grafana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>grafana+prometheus监控nacos</title>
      <link href="/2019/07/15/grafana+prometheus%E7%9B%91%E6%8E%A7nacos/"/>
      <url>/2019/07/15/grafana+prometheus%E7%9B%91%E6%8E%A7nacos/</url>
      
        <content type="html"><![CDATA[<h6 id="安装Nacos"><a href="#安装Nacos" class="headerlink" title="安装Nacos"></a>安装<a href="https://lutao1726.top/2019/06/10/SpringCloud%20nacos%E8%87%AA%E5%AE%9A%E4%B9%89%E7%94%A8%E6%88%B7/">Nacos</a></h6><h6 id="修改配置文件-application-properties-暴露metrics数据"><a href="#修改配置文件-application-properties-暴露metrics数据" class="headerlink" title="修改配置文件 application.properties 暴露metrics数据"></a>修改配置文件 <em><strong>application.properties</strong></em> 暴露metrics数据</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">management.endpoints.web.exposure.include=*</span><br></pre></td></tr></table></figure><p>访问{ip}:8848&#x2F;nacos&#x2F;actuator&#x2F;prometheus，看是否能访问到metrics数据</p><h6 id="修改prometheus配置文件"><a href="#修改prometheus配置文件" class="headerlink" title="修改prometheus配置文件"></a>修改prometheus配置文件</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- job_name: nacos</span><br><span class="line">  metrics_path: &#x27;/nacos/actuator/prometheus&#x27;</span><br><span class="line">  static_configs:</span><br><span class="line">    - targets: [&#x27;192.168.1.238:8848&#x27;]</span><br></pre></td></tr></table></figure><h6 id="重启prometheus"><a href="#重启prometheus" class="headerlink" title="重启prometheus"></a>重启prometheus</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> ./prometheus --config.file=./prometheus.yml &amp;</span><br></pre></td></tr></table></figure><h4 id="grafana配置"><a href="#grafana配置" class="headerlink" title="grafana配置"></a>grafana配置</h4><p>配置prometheus数据源<br>添加prometheus插件，然后配置<br><img src="https://lutao1726.top/img/grafana-redis-01.png" alt="Mou_icon"><br><img src="https://lutao1726.top/img/grafana-redis-02.png" alt="Mou_icon"><br><img src="https://lutao1726.top/img/grafana-redis-03.png" alt="Mou_icon"></p><h4 id="下载仪表盘模板"><a href="#下载仪表盘模板" class="headerlink" title="下载仪表盘模板"></a>下载<a href="https://github.com/nacos-group/nacos-template/blob/master/nacos-sync-grafana">仪表盘模板</a></h4><h6 id="导入模板"><a href="#导入模板" class="headerlink" title="导入模板"></a>导入模板</h6><p><img src="https://lutao1726.top/img/grafana-redis-05.png" alt="Mou_icon"><br><img src="https://lutao1726.top/img/grafana-nacos-02.png" alt="Mou_icon"></p>]]></content>
      
      
      <categories>
          
          <category> Linux教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> grafana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>grafana+prometheus监控postgresql</title>
      <link href="/2019/07/09/grafana+prometheus%E7%9B%91%E6%8E%A7postgresql/"/>
      <url>/2019/07/09/grafana+prometheus%E7%9B%91%E6%8E%A7postgresql/</url>
      
        <content type="html"><![CDATA[<h6 id="下载postgres-exporter插件"><a href="#下载postgres-exporter插件" class="headerlink" title="下载postgres_exporter插件"></a>下载<a href="http://blog.lutao1726.top/postgres_exporter">postgres_exporter插件</a></h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/wrouesnel/postgres_exporter/releases/download/v0.5.1/postgres_exporter_v0.5.1_linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><h6 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar xf postgre_exporter-*.tar.gz</span><br></pre></td></tr></table></figure><h6 id="启动postgre-exporter"><a href="#启动postgre-exporter" class="headerlink" title="启动postgre_exporter"></a>启动postgre_exporter</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> DATA_SOURCE_NAME=<span class="string">&quot;postgresql://postgres:lt123456@127.0.0.1:5432/postgres?sslmode=disable&quot;</span></span><br><span class="line">setsid ./postgre_exporter &amp;</span><br></pre></td></tr></table></figure><h6 id="查看postgre-exporter是否开启"><a href="#查看postgre-exporter是否开启" class="headerlink" title="查看postgre_exporter是否开启"></a>查看postgre_exporter是否开启</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netstat -lntp</span><br><span class="line">tcp        0      0 :::9187                     :::*                        LISTEN      13614/./postgres_ex </span><br></pre></td></tr></table></figure><h6 id="在postgres-中queries-yaml"><a href="#在postgres-中queries-yaml" class="headerlink" title="在postgres_ 中queries.yaml"></a>在postgres_ 中queries.yaml</h6><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> postgres_exporter PASSWORD <span class="string">&#x27;password&#x27;</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> postgres_exporter <span class="keyword">SET</span> SEARCH_PATH <span class="keyword">TO</span> postgres_exporter,pg_catalog;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> SCHEMA postgres_exporter <span class="keyword">AUTHORIZATION</span> postgres_exporter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> postgres_exporter.f_select_pg_stat_activity()</span><br><span class="line"><span class="keyword">RETURNS</span> setof pg_catalog.pg_stat_activity</span><br><span class="line"><span class="keyword">LANGUAGE</span> <span class="keyword">sql</span></span><br><span class="line">SECURITY DEFINER</span><br><span class="line"><span class="keyword">AS</span> $$</span><br><span class="line">  <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> pg_catalog.pg_stat_activity;</span><br><span class="line">$$;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> postgres_exporter.f_select_pg_stat_replication()</span><br><span class="line"><span class="keyword">RETURNS</span> setof pg_catalog.pg_stat_replication</span><br><span class="line"><span class="keyword">LANGUAGE</span> <span class="keyword">sql</span></span><br><span class="line">SECURITY DEFINER</span><br><span class="line"><span class="keyword">AS</span> $$</span><br><span class="line">  <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> pg_catalog.pg_stat_replication;</span><br><span class="line">$$;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> postgres_exporter.pg_stat_replication</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">  <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> postgres_exporter.f_select_pg_stat_replication();</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> postgres_exporter.pg_stat_activity</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">  <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> postgres_exporter.f_select_pg_stat_activity();</span><br><span class="line"></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> postgres_exporter.pg_stat_replication <span class="keyword">TO</span> postgres_exporter;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> postgres_exporter.pg_stat_activity <span class="keyword">TO</span> postgres_exporter;</span><br></pre></td></tr></table></figure><h6 id="修改prometheus配置文件"><a href="#修改prometheus配置文件" class="headerlink" title="修改prometheus配置文件"></a>修改prometheus配置文件</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- job_name: postgre</span><br><span class="line">  static_configs:</span><br><span class="line">  - targets: [&#x27;192.168.1.242:9187&#x27;]   </span><br><span class="line">  labels:</span><br><span class="line">    instance: db1</span><br></pre></td></tr></table></figure><h6 id="重启prometheus"><a href="#重启prometheus" class="headerlink" title="重启prometheus"></a>重启prometheus</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> ./prometheus --config.file=./prometheus.yml &amp;</span><br></pre></td></tr></table></figure><h4 id="grafana配置"><a href="#grafana配置" class="headerlink" title="grafana配置"></a>grafana配置</h4><p>配置prometheus数据源<br>添加prometheus插件，然后配置<br><img src="https://lutao1726.top/img/grafana-redis-01.png" alt="Mou_icon"><br><img src="https://lutao1726.top/img/grafana-redis-02.png" alt="Mou_icon"><br><img src="https://lutao1726.top/img/grafana-redis-03.png" alt="Mou_icon"></p><h4 id="下载仪表盘模板"><a href="#下载仪表盘模板" class="headerlink" title="下载仪表盘模板"></a>下载仪表盘模板</h4><p><img src="https://lutao1726.top/img/grafana-postgre-04.png" alt="Mou_icon"></p><h6 id="导入模板"><a href="#导入模板" class="headerlink" title="导入模板"></a>导入模板</h6><p><img src="https://lutao1726.top/img/grafana-redis-05.png" alt="Mou_icon"><br><img src="https://lutao1726.top/img/grafana-postgre-06.png" alt="Mou_icon"></p>]]></content>
      
      
      <categories>
          
          <category> Linux教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> grafana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>grafana+prometheus监控服务器</title>
      <link href="/2019/07/05/grafana+prometheus%E7%9B%91%E6%8E%A7%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2019/07/05/grafana+prometheus%E7%9B%91%E6%8E%A7%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><hr><p>监控服务器状态是运维必不可少的一部分,这里给大家介绍的是一种监控系统grafana,grafana仅仅只是提供界面显示, 所以他需要从influxdb或prometheus中获取数据, 而influxdb或prometheus中的数据又需要从其他地方收集过来, 常用的收集工具是collectd和telegraf, 其中collectd这里不做介绍, 有些数据不是太适合, 而 influxdb 自身集成 telegraf插件, 不需要进行专门的配置</p><h4 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h4><blockquote><p>collectd&#x2F;telegraf或prometheus插件(收集数据)  ——-&gt;   influxdb&#x2F;prometheus(保存数据)  ——-&gt; grafana(显示数据)</p></blockquote><h6 id="下载node-exporter插件"><a href="#下载node-exporter插件" class="headerlink" title="下载node_exporter插件"></a>下载<a href="http://blog.lutao1726.top/node_exporter">node_exporter插件</a></h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/prometheus/node_exporter/releases/download/v0.18.1/node_exporter-0.18.1.linux-arm64.tar.gz</span><br></pre></td></tr></table></figure><h6 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar xf node_exporter-*.tar.gz</span><br></pre></td></tr></table></figure><h6 id="在对应机器上启动node-exporter"><a href="#在对应机器上启动node-exporter" class="headerlink" title="在对应机器上启动node_exporter"></a>在对应机器上启动node_exporter</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setsid ./node_exporter</span><br></pre></td></tr></table></figure><h6 id="查看node-exporter是否开启"><a href="#查看node-exporter是否开启" class="headerlink" title="查看node_exporter是否开启"></a>查看node_exporter是否开启</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netstat -lntp</span><br><span class="line">tcp6       0      0 :::9100                 :::*                    LISTEN      62737/./node_export</span><br></pre></td></tr></table></figure><h6 id="修改prometheus配置文件"><a href="#修改prometheus配置文件" class="headerlink" title="修改prometheus配置文件"></a>修改prometheus配置文件</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- job_name: &#x27;node_exporter&#x27;</span><br><span class="line">  static_configs:</span><br><span class="line">    - targets: [&#x27;192.168.1.231:9100&#x27;]</span><br><span class="line">      labels:</span><br><span class="line">        instance: sys-231  </span><br><span class="line">    - targets: [&#x27;192.168.1.68:9100&#x27;]</span><br><span class="line">       labels:</span><br><span class="line">         instance: sys-68</span><br></pre></td></tr></table></figure><h6 id="重启prometheus"><a href="#重启prometheus" class="headerlink" title="重启prometheus"></a>重启prometheus</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> ./prometheus --config.file=./prometheus.yml &amp;</span><br></pre></td></tr></table></figure><h4 id="grafana配置"><a href="#grafana配置" class="headerlink" title="grafana配置"></a>grafana配置</h4><p>配置prometheus数据源<br>添加prometheus插件，然后配置<br><img src="https://lutao1726.top/img/grafana-redis-01.png" alt="Mou_icon"><br><img src="https://lutao1726.top/img/grafana-redis-02.png" alt="Mou_icon"><br><img src="https://lutao1726.top/img/grafana-redis-03.png" alt="Mou_icon"></p><h4 id="下载node-exporter仪表盘模板"><a href="#下载node-exporter仪表盘模板" class="headerlink" title="下载node_exporter仪表盘模板"></a>下载node_exporter仪表盘模板</h4><p><img src="https://lutao1726.top/img/grafana-node-04.png" alt="Mou_icon"></p><h6 id="导入模板"><a href="#导入模板" class="headerlink" title="导入模板"></a>导入模板</h6><p><img src="https://lutao1726.top/img/grafana-redis-05.png" alt="Mou_icon"><br><img src="https://lutao1726.top/img/grafana-node-06.png" alt="Mou_icon"></p>]]></content>
      
      
      <categories>
          
          <category> Linux教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> grafana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>grafana+prometheus监控redis</title>
      <link href="/2019/06/25/grafana+prometheus%E7%9B%91%E6%8E%A7redis/"/>
      <url>/2019/06/25/grafana+prometheus%E7%9B%91%E6%8E%A7redis/</url>
      
        <content type="html"><![CDATA[<h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><hr><p>监控服务器状态是运维必不可少的一部分,这里给大家介绍的是一种监控系统grafana,grafana仅仅只是提供界面显示, 所以他需要从influxdb或prometheus中获取数据, 而influxdb或prometheus中的数据又需要从其他地方收集过来, 常用的收集工具是collectd和telegraf, 其中collectd这里不做介绍, 有些数据不是太适合, 而 influxdb 自身集成 telegraf插件, 不需要进行专门的配置</p><h4 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h4><blockquote><p>collectd&#x2F;telegraf或prometheus插件(收集数据)  ——-&gt;   influxdb&#x2F;prometheus(保存数据)  ——-&gt; grafana(显示数据)</p></blockquote><h6 id="下载redis-exporter插件"><a href="#下载redis-exporter插件" class="headerlink" title="下载redis_exporter插件"></a>下载redis_exporter插件</h6><p> <em><strong>代理插件不一定非要安装在redis端</strong></em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/oliver006/redis_exporter/releases/download/v0.30.0/redis_exporter-v0.30.0.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><h6 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar xf redis_exporter-v0.30.0.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><h6 id="启动redis-exporter登陆redis"><a href="#启动redis-exporter登陆redis" class="headerlink" title="启动redis_exporter登陆redis"></a>启动redis_exporter登陆redis</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 无密码</span></span><br><span class="line"><span class="built_in">nohup</span> ./redis_exporter -redis.addr 192.168.1.120:6379 &amp;</span><br><span class="line"><span class="comment">## 有密码</span></span><br><span class="line"><span class="built_in">nohup</span> ./redis_exporter  -redis.addr 192.168.1.120:6379  -redis.password 123456 </span><br></pre></td></tr></table></figure><h6 id="查看redis-exporte是否开启"><a href="#查看redis-exporte是否开启" class="headerlink" title="查看redis_exporte是否开启"></a>查看redis_exporte是否开启</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netstat -lntp</span><br><span class="line">tcp6       0      0 :::9121               :::*              LISTEN      32407/redis_exporte</span><br></pre></td></tr></table></figure><h6 id="修改prometheus配置文件"><a href="#修改prometheus配置文件" class="headerlink" title="修改prometheus配置文件"></a>修改prometheus配置文件</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- job_name: &#x27;redis&#x27;</span><br><span class="line">   static_configs:</span><br><span class="line">   - targets:</span><br><span class="line">     - &quot;localhost:9121&quot;   #redis_exporte在哪台服务器启动的就填哪台服务器ip</span><br></pre></td></tr></table></figure><h6 id="重启prometheus"><a href="#重启prometheus" class="headerlink" title="重启prometheus"></a>重启prometheus</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> ./prometheus --config.file=./prometheus.yml &amp;</span><br></pre></td></tr></table></figure><h4 id="grafana配置"><a href="#grafana配置" class="headerlink" title="grafana配置"></a>grafana配置</h4><p>配置prometheus数据源<br>添加prometheus插件，然后配置<br><img src="https://lutao1726.top/img/grafana-redis-01.png" alt="Mou_icon"><br><img src="https://lutao1726.top/img/grafana-redis-02.png" alt="Mou_icon"><br><img src="https://lutao1726.top/img/grafana-redis-03.png" alt="Mou_icon"></p><h4 id="下载redis仪表盘模板"><a href="#下载redis仪表盘模板" class="headerlink" title="下载redis仪表盘模板"></a>下载redis仪表盘模板</h4><p><img src="https://lutao1726.top/img/grafana-redis-04.png" alt="Mou_icon"></p><h6 id="导入模板"><a href="#导入模板" class="headerlink" title="导入模板"></a>导入模板</h6><p><img src="https://lutao1726.top/img/grafana-redis-05.png" alt="Mou_icon"><br><img src="https://lutao1726.top/img/grafana-redis-06.png" alt="Mou_icon"></p>]]></content>
      
      
      <categories>
          
          <category> Linux教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> grafana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>grafana+influxdb+telegraf监控服务器cpu,内存和硬盘</title>
      <link href="/2019/06/25/grafana+influxdb+telegraf%E7%9B%91%E6%8E%A7%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2019/06/25/grafana+influxdb+telegraf%E7%9B%91%E6%8E%A7%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>监控服务器状态是运维必不可少的一部分,这里给大家介绍的是一种监控系统grafana,grafana仅仅只是提供界面显示, 所以他需要从influxdb中获取数据, 而influxdb中的数据又需要从其他地方收集过来, 常用的收集工具是collectd和telegraf, 其中collectd这里不做介绍, 有些数据不是太适合, 而 influxdb 自身集成 telegraf插件, 不需要进行专门的配置</p><p>流程</p><blockquote><p>collectd&#x2F;telegraf(收集数据)  ——-&gt;   influxdb(保存数据)  ——-&gt; grafana(显示数据)</p></blockquote><h1 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h1><h2 id="grafana-3-x"><a href="#grafana-3-x" class="headerlink" title="grafana 3.x+"></a>grafana 3.x+</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line"><span class="comment"># 下载速度很慢, 建议用迅雷下载, 然后通过ftp上载到服务器</span></span><br><span class="line">wget https://grafanarel.s3.amazonaws.com/builds/grafana-3.1.1-1470047149.x86_64.rpm</span><br><span class="line">yum localinstall grafana-3.1.1-1470047149.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动服务 (centos6)</span></span><br><span class="line">service grafana-server start</span><br><span class="line"><span class="comment"># 添加开机启动 (centos6)</span></span><br><span class="line">chkconfig --add grafana-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动服务 (centos7)</span></span><br><span class="line">systemctl start grafana-server </span><br><span class="line"><span class="comment"># 添加开机启动 (centos7)</span></span><br><span class="line">systemctl <span class="built_in">enable</span> grafana-server </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>默认启动端口 3000, 账户密码默认都是 admin</p><h2 id="influxdb-1-x"><a href="#influxdb-1-x" class="headerlink" title="influxdb 1.x+"></a>influxdb 1.x+</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line"><span class="comment"># 下载速度很慢, 建议用迅雷下载, 然后通过ftp上载到服务器</span></span><br><span class="line">wget https://dl.influxdata.com/influxdb/releases/influxdb-1.0.2.x86_64.rpm  </span><br><span class="line">yum localinstall influxdb-1.0.2.x86_64.rpm</span><br><span class="line"><span class="comment"># 启动服务 (centos6)</span></span><br><span class="line">service influxdb start</span><br><span class="line"><span class="comment"># 启动服务 (centos7)</span></span><br><span class="line">systemctl start influxdb</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>管理后台默认端口: 8083, 我们可以直接访问后台管理数据<br>数据传递默认端口: 8086, 其他服务传递数据的端口</p><h2 id="telegraf-1-x"><a href="#telegraf-1-x" class="headerlink" title="telegraf 1.x+"></a>telegraf 1.x+</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line"><span class="comment"># 下载速度很慢, 建议用迅雷下载, 然后通过ftp上载到服务器</span></span><br><span class="line">wget https://dl.influxdata.com/telegraf/releases/telegraf-1.0.1.x86_64.rpm</span><br><span class="line">yum localinstall telegraf-1.0.1.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /etc/telegraf</span><br><span class="line"><span class="comment"># 设置将数据传递写入influxdb服务器</span></span><br><span class="line">vi telegraf.conf</span><br><span class="line"><span class="comment"># 将地址改成 influxdb 对应的服务器地址, 端口默认 8086, 默认数据库 telegraf</span></span><br><span class="line"><span class="comment">#如果只想收集cpu, 内存和硬盘的数据</span></span><br><span class="line">telegraf -sample-config -input-filter cpu:mem:disk -output-filter influxdb &gt; telegraf.conf</span><br><span class="line"><span class="comment"># 启动服务 (centos6)</span></span><br><span class="line">service telegraf start</span><br><span class="line"><span class="comment"># 启动服务 (centos7)</span></span><br><span class="line">systemctl start telegraf</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="grafana-使用"><a href="#grafana-使用" class="headerlink" title="grafana 使用"></a>grafana 使用</h1><ul><li><p>创建数据源<br><img src="/img/30005624_2ck6.png" alt="Mou_icon"><br><img src="/img/30005624_FPpU.png" alt="Mou_icon"></p></li><li><p>创建显示面板<br><img src="/img/30005624_AqKx.png" alt="Mou_icon"></p></li><li><p>添加单个面板<br><img src="/img/30005624_JvQt.png" alt="Mou_icon"></p></li><li><p>选择定义数据源<br><img src="/img/30005624_orfY.png" alt="Mou_icon"></p></li><li><p>从数据源中添加数据<br><img src="/img/30005624_ZiJM.png" alt="Mou_icon"></p></li><li><p>最终显示结果:<br><img src="/img/30005624_9idB.png" alt="Mou_icon"></p></li></ul><h1 id="模板例子"><a href="#模板例子" class="headerlink" title="模板例子"></a>模板例子</h1><p>在<a href="https://grafana.com/dashboards">grafana官网</a>上有许多模板<br><img src="/img/grafana-0001.jpg"><br><img src="/img/grafana-0002.jpg"><br>监控服务器模板链接<br><a href="http://blog.lutao1726.top/system_rev4.json">http://blog.lutao1726.top/system_rev4.json</a></p><p>效果图<br><img src="/img/grafana-0003.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> Linux教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> grafana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos7安装OpenResty代替nginx</title>
      <link href="/2019/06/19/centos7%E5%AE%89%E8%A3%85OpenResty%E4%BB%A3%E6%9B%BFnginx/"/>
      <url>/2019/06/19/centos7%E5%AE%89%E8%A3%85OpenResty%E4%BB%A3%E6%9B%BFnginx/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="centos7安装OpenResty代替nginx"><a href="#centos7安装OpenResty代替nginx" class="headerlink" title="centos7安装OpenResty代替nginx"></a>centos7安装OpenResty代替nginx</h1><h2 id="1-安装依赖的软件包"><a href="#1-安装依赖的软件包" class="headerlink" title="1.安装依赖的软件包"></a>1.安装依赖的软件包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install readline-devel pcre-devel openssl-devel gcc</span><br></pre></td></tr></table></figure><h2 id="2-安装openresty"><a href="#2-安装openresty" class="headerlink" title="2.安装openresty"></a>2.安装openresty</h2><p>建立目录： </p><pre><code>源代码编译目录： /app/runtimes/openresty安装执行目录： /app/services/openresty</code></pre><p>下载openresty源码：  </p><p>进入：<code>cd /app/runtimes/openresty</code></p><p>下载：<code>wget https://openresty.org/download/openresty-1.11.2.5.tar.gz</code></p><p>解压：<code>tar -zxvf openresty-1.11.2.5.tar.gz</code></p><h2 id="3-安装LuaJIT"><a href="#3-安装LuaJIT" class="headerlink" title="3.安装LuaJIT"></a>3.安装LuaJIT</h2><p>进入：</p><blockquote><p>cd openresty-1.11.2.5&#x2F;bundle&#x2F;LuaJIT-2.1-20170808&#x2F;</p></blockquote><p>清理安装：</p><blockquote><p>make clean &amp;&amp; make &amp;&amp; make install</p></blockquote><h2 id="4-下载ngx-cache-purge模块，该模块用于清理nginx缓存"><a href="#4-下载ngx-cache-purge模块，该模块用于清理nginx缓存" class="headerlink" title="4.下载ngx_cache_purge模块，该模块用于清理nginx缓存"></a>4.下载ngx_cache_purge模块，该模块用于清理nginx缓存</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ../</span><br><span class="line"></span><br><span class="line">wget https://github.com/FRiCKLE/ngx_cache_purge/archive/2.3.tar.gz</span><br><span class="line"></span><br><span class="line">tar -xvf 2.3.tar.gz</span><br></pre></td></tr></table></figure><h2 id="5-下载nginx-upstream-check-module模块，该模块用于ustream健康检查"><a href="#5-下载nginx-upstream-check-module模块，该模块用于ustream健康检查" class="headerlink" title="5.下载nginx_upstream_check_module模块，该模块用于ustream健康检查"></a>5.下载nginx_upstream_check_module模块，该模块用于ustream健康检查</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/yaoweibin/nginx_upstream_check_module/archive/v0.3.0.tar.gz</span><br><span class="line"></span><br><span class="line">tar -xvf v0.3.0.tar.gz</span><br></pre></td></tr></table></figure><h2 id="6-安装openresty"><a href="#6-安装openresty" class="headerlink" title="6.安装openresty"></a>6.安装openresty</h2><blockquote><p>cd &#x2F;app&#x2F;runtimes&#x2F;openresty&#x2F;openresty-1.11.2.5&#x2F;</p></blockquote><p>编译：</p><blockquote><p>.&#x2F;configure –prefix&#x3D;&#x2F;app&#x2F;services&#x2F;openresty –with-http_realip_module –with-pcre –with-luajit –add-module&#x3D;.&#x2F;bundle&#x2F;ngx_cache_purge-2.3&#x2F; –add-module&#x3D;.&#x2F;bundle&#x2F;nginx_upstream_check_module-0.3.0&#x2F; -j2 </p></blockquote><p>安装：</p><blockquote><p>make &amp;&amp; make install</p></blockquote><h2 id="7-添加nginx到服务加入开机启动"><a href="#7-添加nginx到服务加入开机启动" class="headerlink" title="7.添加nginx到服务加入开机启动"></a>7.添加nginx到服务加入开机启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">vi /lib/systemd/system/nginx.service</span><br><span class="line"></span><br><span class="line">    [Unit]</span><br><span class="line"></span><br><span class="line">    Description=nginx</span><br><span class="line"></span><br><span class="line">    After=network.target</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    [Service]</span><br><span class="line"></span><br><span class="line">    Type=forking</span><br><span class="line"></span><br><span class="line">    ExecStart=/app/services/openresty/nginx/sbin/nginx</span><br><span class="line"></span><br><span class="line">    ExecReload=/app/services/openresty/nginx/sbin/nginx -s reload</span><br><span class="line"></span><br><span class="line">    ExecStop=/app/services/openresty/nginx/sbin/nginx -s quit</span><br><span class="line"></span><br><span class="line">    PrivateTmp=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    [Install]</span><br><span class="line"></span><br><span class="line">    WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h2 id="8-启动并加入开机启动："><a href="#8-启动并加入开机启动：" class="headerlink" title="8.启动并加入开机启动："></a>8.启动并加入开机启动：</h2><blockquote><p>systemctl start nginx.service<br>  systemctl enable nginx.service</p></blockquote><h2 id="9-将nginx加入到环境变量"><a href="#9-将nginx加入到环境变量" class="headerlink" title="9.将nginx加入到环境变量"></a>9.将nginx加入到环境变量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile,加入</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx</span></span><br><span class="line"><span class="built_in">export</span> NGINX_HOME=/app/services/openresty/nginx</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$NGINX_HOME</span>/sbin</span><br><span class="line"></span><br><span class="line">刷新:<span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Linux </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux加密脚本</title>
      <link href="/2019/06/18/linux%E5%8A%A0%E5%AF%86%E8%84%9A%E6%9C%AC/"/>
      <url>/2019/06/18/linux%E5%8A%A0%E5%AF%86%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="linux加密脚本"><a href="#linux加密脚本" class="headerlink" title="linux加密脚本"></a>linux加密脚本</h1><ul><li>1.确保已经安装 bc 和 shc</li><li>2.shc只能加密bash shell脚本，无法加密expect脚本<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shc -v -r -f auto_deploy.sh</span><br></pre></td></tr></table></figure>执行后会产生两个文件，分别是:<br><code>auto_deploy.sh.x</code>    可执行的二进制文件<br><code>auto_deploy.sh.x.c</code>  二进制文件的c源码，这个无用，必须删除以防止脚本流程泄露</li></ul><p>接着将.sh.x改名    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> auto_deploy.sh.x auto_deploy</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line"><span class="comment">## shc相关资料</span></span><br><span class="line"><span class="comment">#### 简介</span></span><br><span class="line">shc是一个专业的加密shell脚本的工具.它的作用是把shell脚本转换为一个可执行的二进制文件，这个办法很好的解决了脚本中含有IP、密码等不希望公开的问题.</span><br><span class="line"></span><br><span class="line">shc的官网下载地址: </span><br><span class="line">`http://www.datsi.fi.upm.es/~frosal/sources/ `</span><br><span class="line"></span><br><span class="line"><span class="comment">#### 安装</span></span><br><span class="line">```bash</span><br><span class="line">tar xzvf shc-3.8.6.tgz</span><br><span class="line"><span class="built_in">cd</span> shc-3.8.6</span><br><span class="line"><span class="built_in">mkdir</span> -p /usr/local/man/man1</span><br></pre></td></tr></table></figure><p>这步是必须的，不然安装过程中会报错，shc将安装命令到&#x2F;usr&#x2F;local&#x2F;bin&#x2F;目录下；将帮助文档存放在&#x2F;usr&#x2F;local&#x2F;man&#x2F;man1&#x2F;目录下，如果系统中无此目录，安装时会报错，可创建此目录后再执行安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure><p>这是要回答yes或者y，不能直接回车，否则会报错<br>使用方法:<br>“-f”选项指定需要加密的程序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># shc -r -f abc.sh </span></span><br><span class="line">[root@localhost ~]<span class="comment"># ll</span></span><br><span class="line">total 64</span><br><span class="line">-rw-r--r--. 1 root root    23 Nov 17 11:14 abc.sh</span><br><span class="line">-rwx--x--x. 1 root root 11520 Nov 17 11:14 abc.sh.x</span><br><span class="line">-rw-r--r--. 1 root root  9174 Nov 17 11:14 abc.sh.x.c</span><br><span class="line">drwxr-xr-x. 2 root root  4096 Nov 17 11:13 shc-3.8.7</span><br><span class="line">-rw-r--r--. 1 root root 20498 Nov 17 11:11 shc-3.8.7.tgz</span><br></pre></td></tr></table></figure><p>运行后会生成两个文件,script-name.x 和 script-name.x.c. 其中script-name.x是加密后的可执行的二进制文件；用.&#x2F;script-name即可运行，script-name.x.c是生成script-name.x的原文件(c语言).<br>另shc还提供了一种设定有效执行期限的方法，可以首先使用shc将shell程序转化为二进制，并加上过期时间，如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment">#  shc -e 18/10/2006 -m &quot; It&#x27;s too late to run this script &quot; -f script.sh</span></span><br></pre></td></tr></table></figure><p>题外：</p><p>如果你仅仅是看不见内容就行了的话，不妨用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gzexe a.sh</span><br></pre></td></tr></table></figure><p>原来的 a.sh 就被存为 a.sh~，新的 a.sh 是乱码，但是可以用 sh 的方式运行</p>]]></content>
      
      
      <categories>
          
          <category> Linux教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Linux </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud Nacos配置中心</title>
      <link href="/2019/06/13/SpringCloud%20nacos%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/"/>
      <url>/2019/06/13/SpringCloud%20nacos%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/</url>
      
        <content type="html"><![CDATA[<!-- 展示图片 --><p><img src="http://gimg2.baidu.com/image_search/src=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fimages%2F20181220%2F625a58b9a1d3449491d2ae9e396da5d8.jpeg&refer=http%3A%2F%2F5b0988e595225.cdn.sohucs.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1623575506&t=fe07c6007ebc786e268abb7e4480dc0e" alt="Mou_icon"></p><h2 id="nacos作为注册中心"><a href="#nacos作为注册中心" class="headerlink" title="nacos作为注册中心"></a>nacos作为注册中心</h2><ol><li>先在官网上下载nacos中间件 下面教程有启动步骤<blockquote><p><a href="https://nacos.io/zh-cn/docs/quick-start.html">https://nacos.io/zh-cn/docs/quick-start.html</a></p></blockquote></li></ol><p>先新建一个springboot项目，添加如下依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.2.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在resource目录下加入 bootstrap.properties文件 并添加配置中心相关信息<br>bootstrap.properties：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#服务名</span></span><br><span class="line"><span class="attr">spring.application.name</span>=<span class="string">nacos-config-example</span></span><br><span class="line"><span class="comment"># 配置中心url</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.config.server-addr</span>=<span class="string">127.0.0.1:8848</span></span><br></pre></td></tr></table></figure><p>相应的application.properties的内容写到配置中心里面去，如图所示：</p><p><img src="http://blog.lutao1726.top/nacos-config-01.png" alt="Mou_icon"></p><p><img src="http://blog.lutao1726.top/nacos-config-02.png" alt="Mou_icon"></p><p>在项目启动时就会去配置中心去读取配置信息（本地的配置文件application.properties还能用，但优先级低于配置中心的配置）</p><p>如果你不想用nacos提供的控制台，nacos也提供了java开发服务端的sdk和api,我们可以用sdk开发配置中心服务端，用java代码去操作配置中心,sdk的文档可参看官方文档。</p><h2 id="多环境总结"><a href="#多环境总结" class="headerlink" title="多环境总结"></a>多环境总结</h2><ul><li>第一种：通过DataID与profile实现。<ul><li>优点：这种方式与Spring Cloud Config的实现非常像，用过Spring Cloud Config的用户，可以毫无违和感的过渡过来，由于命名规则类似，所以要从Spring Cloud Config中做迁移也非常简单。</li><li>缺点：这种方式在项目与环境多的时候，配置内容就会显得非常混乱。配置列表中会看到各种不同应用，不同环境的配置交织在一起，非常不利于管理。</li><li>建议：项目不多时使用，或者可以结合 Group对项目根据业务或者组织架构做一些拆分规划。</li></ul></li><li>第二种：通过Group实现。<ul><li>优点：通过 Group按环境讲各个应用的配置隔离开。可以非常方便的利用 DataID和 Group的搜索功能，分别从应用纬度和环境纬度来查看配置。</li><li>缺点：由于会占用 Group纬度，所以需要对 Group的使用做好规划，毕竟与业务上的一些配置分组起冲突等问题。</li><li>建议：这种方式虽然结构上比上一种更好一些，但是依然可能会有一些混乱，主要是在 Group的管理上要做好规划和控制。</li></ul></li><li>第三种：通过Namespace实现。<ul><li>优点：官方建议的方式，通过 Namespace来区分不同的环境，释放了 Group的自由度，这样可以让 Group的使用专注于做业务层面的分组管理。同时，Nacos控制页面上对于 Namespace也做了分组展示，不需要搜索，就可以隔离开不同的环境配置，非常易用。</li><li>缺点：没有啥缺点，可能就是多引入一个概念，需要用户去理解吧。</li><li>建议：直接用这种方式长远上来说会比较省心。虽然可能对小团队而言，项目不多，第一第二方式也够了，但是万一后面做大了呢？</li></ul></li></ul><blockquote><p>多环境注意：不论用哪一种方式实现。对于指定环境的配置（spring.profiles.active&#x3D;DEV、spring.cloud.nacos.config.group&#x3D;DEV_GROUP、spring.cloud.nacos.config.namespace&#x3D;83eed625-d166-4619-b923-93df2088883a），都不要配置在应用的bootstrap.properties中。而是在发布脚本的启动命令中，用-Dspring.profiles.active&#x3D;DEV的方式来动态指定，会更加灵活！。    </p></blockquote><blockquote><p>Nacos使用注意<br><br> Nacos本身的相关配置必须都放在bootstrap.yml文件中<br> 如果在Nacos添加了应用的配置文件<br> 1. 应用读取配置后只会覆盖本地相同key的配置<br> 2. 应用读取配置后会缓存起来，就算停掉Nacos也会生效</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud Nacos自定义用户</title>
      <link href="/2019/06/10/SpringCloud%20nacos%E8%87%AA%E5%AE%9A%E4%B9%89%E7%94%A8%E6%88%B7/"/>
      <url>/2019/06/10/SpringCloud%20nacos%E8%87%AA%E5%AE%9A%E4%B9%89%E7%94%A8%E6%88%B7/</url>
      
        <content type="html"><![CDATA[<!-- 展示图片 --><p><img src="http://gimg2.baidu.com/image_search/src=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fimages%2F20181220%2F625a58b9a1d3449491d2ae9e396da5d8.jpeg&refer=http%3A%2F%2F5b0988e595225.cdn.sohucs.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1623575506&t=fe07c6007ebc786e268abb7e4480dc0e" alt="Mou_icon"></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Nacos致力于帮助您发现、配置和管理微服务。Nacos提供了一组简单易用的特性集，帮助您快速实现动态服务发现、服务配置、服务元数据及流量管理。Nacos帮助您更敏捷和容易地构建、交付和管理微服务平台。Nacos是构建以“服务”为中心的现代应用架构 (例如微服务范式、云原生范式) 的服务基础设施。<br>在接下里的教程中，将使用Nacos作为微服务架构中的注册中心</p><ul><li>1、Nacos 下载地址：<a href="https://github.com/alibaba/nacos/releases">https://github.com/alibaba/nacos/releases</a></li><li>2、执行如下命令启动Nacos<br>  <code>windows</code>：startup.cmd -m standalone<br>  <code>linux</code>  :.&#x2F;startup.sh -m standalone</li></ul><h2 id="设置自定义用户和密码"><a href="#设置自定义用户和密码" class="headerlink" title="设置自定义用户和密码"></a>设置自定义用户和密码</h2><ul><li>1、修改使用mysql数据库存储配置信息。Nacos Server默认使用的是内嵌的cmdb数据库在配置文件（.&#x2F;conf&#x2F;application.properties）添加配置</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.datasource.platform</span>=<span class="string">mysql</span></span><br><span class="line"><span class="attr">db.num</span>=<span class="string">1</span></span><br><span class="line"><span class="attr">db.url.0</span>=<span class="string">jdbc:mysql://xxx.xxx.xxx.xxx:3306/nacos_config?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=GMT%2B8</span></span><br><span class="line"><span class="attr">db.user</span>=<span class="string">xxxxxx</span></span><br><span class="line"><span class="attr">db.password</span>=<span class="string">xxxxxx</span></span><br></pre></td></tr></table></figure><p>所以最终整个配置文件：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># spring</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server.contextPath</span>=<span class="string">/nacos</span></span><br><span class="line"><span class="attr">server.servlet.contextPath</span>=<span class="string">/nacos</span></span><br><span class="line"><span class="attr">server.port</span>=<span class="string">8848</span></span><br><span class="line"></span><br><span class="line"><span class="attr">nacos.cmdb.dumpTaskInterval</span>=<span class="string">3600</span></span><br><span class="line"><span class="attr">nacos.cmdb.eventTaskInterval</span>=<span class="string">10</span></span><br><span class="line"><span class="attr">nacos.cmdb.labelTaskInterval</span>=<span class="string">300</span></span><br><span class="line"><span class="attr">nacos.cmdb.loadDataAtStart</span>=<span class="string">false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">spring.datasource.platform</span>=<span class="string">mysql</span></span><br><span class="line"><span class="attr">db.num</span>=<span class="string">1</span></span><br><span class="line"><span class="attr">db.url.0</span>=<span class="string">jdbc:mysql://xxx.xxx.xxx.xxx:3306/nacos_config?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=GMT%2B8</span></span><br><span class="line"><span class="attr">db.user</span>=<span class="string">xxxxxx</span></span><br><span class="line"><span class="attr">db.password</span>=<span class="string">xxxxxx</span></span><br><span class="line"><span class="comment"># metrics for prometheus</span></span><br><span class="line"><span class="comment">#management.endpoints.web.exposure.include=*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># metrics for elastic search</span></span><br><span class="line"><span class="attr">management.metrics.export.elastic.enabled</span>=<span class="string">false</span></span><br><span class="line"><span class="comment">#management.metrics.export.elastic.host=http://localhost:9200</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># metrics for influx</span></span><br><span class="line"><span class="attr">management.metrics.export.influx.enabled</span>=<span class="string">false</span></span><br><span class="line"><span class="comment">#management.metrics.export.influx.db=springboot</span></span><br><span class="line"><span class="comment">#management.metrics.export.influx.uri=http://localhost:8086</span></span><br><span class="line"><span class="comment">#management.metrics.export.influx.auto-create-db=true</span></span><br><span class="line"><span class="comment">#management.metrics.export.influx.consistency=one</span></span><br><span class="line"><span class="comment">#management.metrics.export.influx.compressed=true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">server.tomcat.accesslog.enabled</span>=<span class="string">true</span></span><br><span class="line"><span class="attr">server.tomcat.accesslog.pattern</span>=<span class="string">%h %l %u %t &quot;%r&quot; %s %b %D %&#123;User-Agent&#125;i</span></span><br><span class="line"><span class="comment"># default current work dir</span></span><br><span class="line"><span class="attr">server.tomcat.basedir</span>=<span class="string"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">## spring security config</span></span><br><span class="line"><span class="comment">### turn off security</span></span><br><span class="line"><span class="comment">#spring.security.enabled=false</span></span><br><span class="line"><span class="comment">#management.security=false</span></span><br><span class="line"><span class="comment">#security.basic.enabled=false</span></span><br><span class="line"><span class="comment">#nacos.security.ignore.urls=/**</span></span><br><span class="line"></span><br><span class="line"><span class="attr">nacos.security.ignore.urls</span>=<span class="string">/,/**/*.css,/**/*.js,/**/*.html,/**/*.map,/**/*.svg,/**/*.png,/**/*.ico,/console-fe/public/**,/v1/auth/login,/v1/console/health/**,/v1/cs/**,/v1/ns/**,/v1/cmdb/**,/actuator/**,/v1/console/server/**</span></span><br><span class="line"></span><br><span class="line"><span class="attr">nacos.naming.distro.taskDispatchThreadCount</span>=<span class="string">1</span></span><br><span class="line"><span class="attr">nacos.naming.distro.taskDispatchPeriod</span>=<span class="string">200</span></span><br><span class="line"><span class="attr">nacos.naming.distro.batchSyncKeyCount</span>=<span class="string">1000</span></span><br><span class="line"><span class="attr">nacos.naming.distro.initDataRatio</span>=<span class="string">0.9</span></span><br><span class="line"><span class="attr">nacos.naming.distro.syncRetryDelay</span>=<span class="string">5000</span></span><br><span class="line"><span class="attr">nacos.naming.data.warmup</span>=<span class="string">true</span></span><br><span class="line"><span class="attr">nacos.naming.expireInstance</span>=<span class="string">true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>2、创建数据库<br>在Nacos Server conf文件夹下，找到nacos-mysql.sql文件</li></ul><p><img src="http://blog.lutao1726.top/nacos-mysql-sql.png" alt="Mou_icon"></p><ul><li><p>3、该文件是创建数据库所需要的SQL语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   数据库全名 = nacos_config   */</span></span><br><span class="line"><span class="comment">/*   表名称 = config_info   */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_info` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `content` longtext <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;content&#x27;</span>,</span><br><span class="line">  `md5` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;md5&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;2010-05-05 00:00:00&#x27;</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;2010-05-05 00:00:00&#x27;</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  `src_user` text COMMENT <span class="string">&#x27;source user&#x27;</span>,</span><br><span class="line">  `src_ip` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;source ip&#x27;</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;租户字段&#x27;</span>,</span><br><span class="line">  `c_desc` <span class="type">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `c_use` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `effect` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `type` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `c_schema` text,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_configinfo_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;config_info&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   数据库全名 = nacos_config   */</span></span><br><span class="line"><span class="comment">/*   表名称 = config_info_aggr   */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_info_aggr` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;group_id&#x27;</span>,</span><br><span class="line">  `datum_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;datum_id&#x27;</span>,</span><br><span class="line">  `content` longtext <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;内容&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;租户字段&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_configinfoaggr_datagrouptenantdatum` (`data_id`,`group_id`,`tenant_id`,`datum_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;增加租户字段&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   数据库全名 = nacos_config   */</span></span><br><span class="line"><span class="comment">/*   表名称 = config_info_beta   */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_info_beta` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;group_id&#x27;</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;app_name&#x27;</span>,</span><br><span class="line">  `content` longtext <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;content&#x27;</span>,</span><br><span class="line">  `beta_ips` <span class="type">varchar</span>(<span class="number">1024</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;betaIps&#x27;</span>,</span><br><span class="line">  `md5` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;md5&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;2010-05-05 00:00:00&#x27;</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;2010-05-05 00:00:00&#x27;</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  `src_user` text COMMENT <span class="string">&#x27;source user&#x27;</span>,</span><br><span class="line">  `src_ip` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;source ip&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;租户字段&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_configinfobeta_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;config_info_beta&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   数据库全名 = nacos_config   */</span></span><br><span class="line"><span class="comment">/*   表名称 = config_info_tag   */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_info_tag` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;group_id&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;tenant_id&#x27;</span>,</span><br><span class="line">  `tag_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;tag_id&#x27;</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;app_name&#x27;</span>,</span><br><span class="line">  `content` longtext <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;content&#x27;</span>,</span><br><span class="line">  `md5` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;md5&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;2010-05-05 00:00:00&#x27;</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;2010-05-05 00:00:00&#x27;</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  `src_user` text COMMENT <span class="string">&#x27;source user&#x27;</span>,</span><br><span class="line">  `src_ip` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;source ip&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_configinfotag_datagrouptenanttag` (`data_id`,`group_id`,`tenant_id`,`tag_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;config_info_tag&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   数据库全名 = nacos_config   */</span></span><br><span class="line"><span class="comment">/*   表名称 = config_tags_relation   */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `config_tags_relation` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `tag_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;tag_name&#x27;</span>,</span><br><span class="line">  `tag_type` <span class="type">varchar</span>(<span class="number">64</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;tag_type&#x27;</span>,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;data_id&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;group_id&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;tenant_id&#x27;</span>,</span><br><span class="line">  `nid` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`nid`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_configtagrelation_configidtag` (`id`,`tag_name`,`tag_type`),</span><br><span class="line">  KEY `idx_tenant_id` (`tenant_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;config_tag_relation&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   数据库全名 = nacos_config   */</span></span><br><span class="line"><span class="comment">/*   表名称 = group_capacity   */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `group_capacity` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;Group ID，空字符表示整个集群&#x27;</span>,</span><br><span class="line">  `quota` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;配额，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `usage` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;使用量&#x27;</span>,</span><br><span class="line">  `max_size` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;单个配置大小上限，单位为字节，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_aggr_count` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;聚合子配置最大个数，，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_aggr_size` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_history_count` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;最大变更历史数量&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;2010-05-05 00:00:00&#x27;</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;2010-05-05 00:00:00&#x27;</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_group_id` (`group_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;集群、各Group容量信息表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   数据库全名 = nacos_config   */</span></span><br><span class="line"><span class="comment">/*   表名称 = his_config_info   */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `his_config_info` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">64</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `nid` <span class="type">bigint</span>(<span class="number">20</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `data_id` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `group_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `app_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;app_name&#x27;</span>,</span><br><span class="line">  `content` longtext <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `md5` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;2010-05-05 00:00:00&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;2010-05-05 00:00:00&#x27;</span>,</span><br><span class="line">  `src_user` text,</span><br><span class="line">  `src_ip` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `op_type` <span class="type">char</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;租户字段&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`nid`),</span><br><span class="line">  KEY `idx_gmt_create` (`gmt_create`),</span><br><span class="line">  KEY `idx_gmt_modified` (`gmt_modified`),</span><br><span class="line">  KEY `idx_did` (`data_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;多租户改造&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="comment">/*   数据库全名 = nacos_config   */</span></span><br><span class="line"><span class="comment">/*   表名称 = tenant_capacity   */</span></span><br><span class="line"><span class="comment">/******************************************/</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `tenant_capacity` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;Tenant ID&#x27;</span>,</span><br><span class="line">  `quota` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;配额，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `usage` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;使用量&#x27;</span>,</span><br><span class="line">  `max_size` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;单个配置大小上限，单位为字节，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_aggr_count` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;聚合子配置最大个数&#x27;</span>,</span><br><span class="line">  `max_aggr_size` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值&#x27;</span>,</span><br><span class="line">  `max_history_count` <span class="type">int</span>(<span class="number">10</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;最大变更历史数量&#x27;</span>,</span><br><span class="line">  `gmt_create` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;2010-05-05 00:00:00&#x27;</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;2010-05-05 00:00:00&#x27;</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_tenant_id` (`tenant_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;租户容量信息表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `tenant_info` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">  `kp` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;kp&#x27;</span>,</span><br><span class="line">  `tenant_id` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">default</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;tenant_id&#x27;</span>,</span><br><span class="line">  `tenant_name` <span class="type">varchar</span>(<span class="number">128</span>) <span class="keyword">default</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;tenant_name&#x27;</span>,</span><br><span class="line">  `tenant_desc` <span class="type">varchar</span>(<span class="number">256</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;tenant_desc&#x27;</span>,</span><br><span class="line">  `create_source` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;create_source&#x27;</span>,</span><br><span class="line">  `gmt_create` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `gmt_modified` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `uk_tenant_info_kptenantid` (`kp`,`tenant_id`),</span><br><span class="line">  KEY `idx_tenant_id` (`tenant_id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;tenant_info&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> users (</span><br><span class="line">username <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">password <span class="type">varchar</span>(<span class="number">500</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">enabled <span class="type">boolean</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> roles (</span><br><span class="line">username <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">role <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> users (username, password, enabled) <span class="keyword">VALUES</span> (<span class="string">&#x27;nacos&#x27;</span>, <span class="string">&#x27;$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu&#x27;</span>, <span class="literal">TRUE</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> roles (username, role) <span class="keyword">VALUES</span> (<span class="string">&#x27;nacos&#x27;</span>, <span class="string">&#x27;ROLE_ADMIN&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将上面的文件在自己的mysql数据库中执行以下就可以创建出相应的数据库<br>其中，<br><code>users</code>表存储的是用户名、密码以及用户使能<br><code>roles</code>表中存储的是用户角色</p></li><li><p>启动server，可以用用户名<code>nacos</code>和密码 <code>nacos</code> 登录一下试试，没问题，再继续下一步</p></li><li><p>生成加密密码， 在com.alibaba.nacos.console.utils.PasswordEncoderUtil.main函数中，将nacos改成你要改成的密码，运行即可得到加密有算法。注意盐值是随机的，所以生成密码每次可能不一样，请不要担心。</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PasswordEncoderUtil</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">BCryptPasswordEncoder</span>().encode(<span class="string">&quot;nacos&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>创建用户名或者密码的时候，用指定用户名密码即可例如上面我设置密码是123456,加密后是：$2a$10$ikr55NplsYjmAntyKBfKRusmAnvcaiMpj.oMgcfPpk4UAyyHcxgeW<br>只需将密码在数据库中进行修改即可。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> users (username, password, enabled) <span class="keyword">VALUES</span> (<span class="string">&#x27;admin&#x27;</span>, <span class="string">&#x27;$2a$10$ikr55NplsYjmAntyKBfKRusmAnvcaiMpj.oMgcfPpk4UAyyHcxgeW&#x27;</span>, <span class="literal">TRUE</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> roles (username, role) <span class="keyword">VALUES</span> (<span class="string">&#x27;admin&#x27;</span>, <span class="string">&#x27;ROLE_ADMIN&#x27;</span>);</span><br></pre></td></tr></table></figure><ul><li>修改完数据库后，用自定义的用户<code>admin</code> 密码 <code>123456</code> 登录：<br><img src="http://blog.lutao1726.top/nacos-002.jpg" alt="Mou_icon"></li></ul><h2 id="nacos-centos开机启动"><a href="#nacos-centos开机启动" class="headerlink" title="nacos centos开机启动"></a>nacos centos开机启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /lib/systemd/system/nacos.service</span><br></pre></td></tr></table></figure><p>添加如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=nacos</span><br><span class="line">After=network.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/bin/setsid /app/runtime/nacos/bin/startup.sh -m standalone</span><br><span class="line">ExecReload=/app/runtime/nacos/bin/shutdown.sh</span><br><span class="line">ExecStop=/app/runtime/nacos/bin/shutdown.sh</span><br><span class="line">PrivateTmp=<span class="literal">true</span></span><br><span class="line"> </span><br><span class="line">[Install]  </span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>保存退出后，执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="built_in">enable</span> nacos.service</span><br><span class="line">systemctl start nacos.service</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud Nacos集群部署</title>
      <link href="/2019/06/10/SpringCloud%20nacos%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/"/>
      <url>/2019/06/10/SpringCloud%20nacos%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<!-- 展示图片 --><p><img src="http://gimg2.baidu.com/image_search/src=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fimages%2F20181220%2F625a58b9a1d3449491d2ae9e396da5d8.jpeg&refer=http%3A%2F%2F5b0988e595225.cdn.sohucs.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1623575506&t=fe07c6007ebc786e268abb7e4480dc0e" alt="Mou_icon"></p><h2 id="集群搭建"><a href="#集群搭建" class="headerlink" title="集群搭建"></a>集群搭建</h2><p>根据官方文档的介绍，Nacos的集群架构大致如下图所示</p><p><img src="http://blog.lutao1726.top/nacos%E9%9B%86%E7%BE%A4-01.png" alt="Mou_icon"></p><h4 id="MySQL数据源配置"><a href="#MySQL数据源配置" class="headerlink" title="MySQL数据源配置"></a>MySQL数据源配置</h4><p>在进行集群配置之前，先完成对MySQL数据源的初始化和配置。主要分以下两步：</p><ul><li>1、初始化MySQL数据库，数据库初始化文件：<code>nacos-mysql.sql</code>，该文件可以在Nacos程序包下的conf目录下获得。</li><li>2、修改<code>conf/application.properties</code>文件，增加支持MySQL数据源配置，添加（目前只支持mysql）数据源的url、用户名和密码。配置样例如下：</li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.datasource.platform</span>=<span class="string">mysql</span></span><br><span class="line"><span class="attr">db.num</span>=<span class="string">1</span></span><br><span class="line"><span class="attr">db.url.0</span>=<span class="string">jdbc:mysql://localhost:3306/nacos?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true</span></span><br><span class="line"><span class="attr">db.user</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">db.password</span>=<span class="string"></span></span><br></pre></td></tr></table></figure><h4 id="集群配置"><a href="#集群配置" class="headerlink" title="集群配置"></a>集群配置</h4><p>在Nacos的conf目录下有一个cluster.conf.example，可以直接把example扩展名去掉来使用，也可以单独创建一个<code>cluster.conf</code>文件，然后打开将后续要部署的Nacos实例地址配置在这里。</p><p>本文以在本地不同端点启动3个Nacos服务端为例，可以如下配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:8841</span><br><span class="line">127.0.0.1:8842</span><br><span class="line">127.0.0.1:8843</span><br></pre></td></tr></table></figure><blockquote><p>注意：这里的例子仅用于本地学习测试使用，实际生产环境必须部署在不同的节点上，才能起到高可用的效果。另外，Nacos的集群需要3个或3个以上的节点，并且确保这三个节点之间是可以互相访问的。</p></blockquote><h4 id="本地测试"><a href="#本地测试" class="headerlink" title="本地测试"></a>本地测试</h4><p>本文中，在集群配置的时候，我们设定了3个Nacos的实例都在本地，只是以不同的端口区分，所以我们在启动Nacos的时候，需要修改不同的端口号。</p><p>下面介绍一种方法来方便地启动Nacos的三个本地实例，我们可以将bin目录下的startup.sh脚本复制三份，分别用来启动三个不同端口的Nacos实例，为了可以方便区分不同实例的启动脚本，我们可以把端口号加入到脚本的命名中，比如：</p><ul><li>startup-8841.sh</li><li>startup-8842.sh</li><li>startup-8843.sh</li></ul><p>然后，分别修改这三个脚本中的参数，具体如下图的红色部分（端口号根据上面脚本命名分配）：</p><p><img src="http://blog.lutao1726.top/nacos%E9%9B%86%E7%BE%A4-02.png" alt="Mou_icon"></p><p>修改完3个脚本配置之后，分别执行下面的命令就可以在本地启动Nacos集群了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sh startup-8841.sh</span><br><span class="line">sh startup-8842.sh</span><br><span class="line">sh startup-8843.sh</span><br></pre></td></tr></table></figure><h4 id="生产环境"><a href="#生产环境" class="headerlink" title="生产环境"></a>生产环境</h4><p>在实际生产环境部署的时候，由于每个实例分布在不同的节点上，我们可以直接使用默认的启动脚本（除非要调整一些JVM参数等才需要修改）。只需要在各个节点的Nacos的bin目录下执行<code>sh startup.sh</code>命令即可。</p><h4 id="Proxy配置"><a href="#Proxy配置" class="headerlink" title="Proxy配置"></a>Proxy配置</h4><p>在Nacos的集群启动完毕之后，根据架构图所示，我们还需要提供一个统一的入口给我们用来维护以及给Spring Cloud应用访问。简单地说，就是我们需要为上面启动的的三个Nacos实例做一个可以为它们实现负载均衡的访问点。这个实现的方式非常多，这里就举个用Nginx来实现的简单例子吧。</p><p>在Nginx配置文件的http段中，我们可以加入下面的配置内容：</p><p><img src="http://blog.lutao1726.top/nacos%E9%9B%86%E7%BE%A4-03.png" alt="Mou_icon"></p>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud Nacos服务注册与发现</title>
      <link href="/2019/06/01/SpringCloud%20nacos%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0/"/>
      <url>/2019/06/01/SpringCloud%20nacos%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<!-- 展示图片 --><p><img src="http://gimg2.baidu.com/image_search/src=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fimages%2F20181220%2F625a58b9a1d3449491d2ae9e396da5d8.jpeg&refer=http%3A%2F%2F5b0988e595225.cdn.sohucs.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1623575506&t=fe07c6007ebc786e268abb7e4480dc0e" alt="Mou_icon"></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Nacos致力于帮助您发现、配置和管理微服务。Nacos提供了一组简单易用的特性集，帮助您快速实现动态服务发现、服务配置、服务元数据及流量管理。Nacos帮助您更敏捷和容易地构建、交付和管理微服务平台。Nacos是构建以“服务”为中心的现代应用架构 (例如微服务范式、云原生范式) 的服务基础设施。<br>在接下里的教程中，将使用Nacos作为微服务架构中的注册中心</p><ul><li>1、Nacos 下载地址：<a href="https://github.com/alibaba/nacos/releases">https://github.com/alibaba/nacos/releases</a></li><li>2、执行如下命令启动Nacos：cmd startup.cmd -m standalone<br><img src="http://blog.lutao1726.top/nacos-001.png" alt="Mou_icon"></li><li>3、在浏览器中打开Nacos提供的管理页面(用户名，密码为  nacos <code>可配置</code> )<br><img src="http://blog.lutao1726.top/nacos-002.jpg" alt="Mou_icon"></li></ul><h2 id="Nacos-服务提供者"><a href="#Nacos-服务提供者" class="headerlink" title="Nacos 服务提供者"></a>Nacos 服务提供者</h2><h4 id="搭建工程"><a href="#搭建工程" class="headerlink" title="搭建工程"></a>搭建工程</h4><ul><li><p>引入maven依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lutao<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>nacos-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>nacos-client<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for nacos<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nacos.version</span>&gt;</span>0.2.1.RELEASE<span class="tag">&lt;/<span class="name">nacos.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-boot.version</span>&gt;</span>2.0.4.RELEASE<span class="tag">&lt;/<span class="name">spring-boot.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Finchley.RELEASE<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;nacos.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;nacos.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>application.properties中添加相关配置</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server.port</span>=<span class="string">8070</span></span><br><span class="line"><span class="attr">spring.application.name</span>=<span class="string">example</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.discovery.server-addr</span>=<span class="string">127.0.0.1:8848</span></span><br></pre></td></tr></table></figure></li><li><p>添加服务启动代码，并对外提供服务</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NacosClientApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(NacosClientApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RestController</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">EchoController</span> &#123;</span><br><span class="line">        <span class="meta">@RequestMapping(value = &quot;/echo/&#123;string&#125;&quot;, method = RequestMethod.GET)</span></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">echo</span><span class="params">(<span class="meta">@PathVariable</span> String string)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Hello Nacos Discovery &quot;</span> + string;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>启动服务提供者之后会在nacos的管理页面中看到nacos-provider相关的服务信息</p></li></ul><p><img src="http://blog.lutao1726.top/nacos-003.jpg" alt="Mou_icon"></p><h2 id="Nacos-服务消费者"><a href="#Nacos-服务消费者" class="headerlink" title="Nacos 服务消费者"></a>Nacos 服务消费者</h2><h4 id="搭建工程-1"><a href="#搭建工程-1" class="headerlink" title="搭建工程"></a>搭建工程</h4><ul><li>引入maven依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lutao<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>nacos-consumer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>nacos-consumer<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nacos.version</span>&gt;</span>0.2.1.RELEASE<span class="tag">&lt;/<span class="name">nacos.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-boot.version</span>&gt;</span>2.0.4.RELEASE<span class="tag">&lt;/<span class="name">spring-boot.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Finchley.RELEASE<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;nacos.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>application.properties中添加相关配置<figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server.port</span>=<span class="string">8080</span></span><br><span class="line"><span class="attr">spring.application.name</span>=<span class="string">service-consumer</span></span><br><span class="line"><span class="attr">spring.cloud.nacos.discovery.server-addr</span>=<span class="string">127.0.0.1:8848</span></span><br></pre></td></tr></table></figure></li><li>服务消费者可以根据服务名远程调用服务提供者提供的接口<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lutao.nacosconsumer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.DiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.loadbalancer.LoadBalanced;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NacosConsumerApplication</span> &#123;</span><br><span class="line">    <span class="meta">@LoadBalanced</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RestTemplate <span class="title function_">restTemplate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RestTemplate</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(NacosConsumerApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@RestController</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestController</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Autowired(required=true)</span></span><br><span class="line">        <span class="keyword">private</span> DiscoveryClient discoveryClient;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Autowired</span></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">TestController</span><span class="params">(RestTemplate restTemplate)</span> &#123;<span class="built_in">this</span>.restTemplate = restTemplate;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@RequestMapping(value = &quot;/echo/&#123;str&#125;&quot;, method = RequestMethod.GET)</span></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">echo</span><span class="params">(<span class="meta">@PathVariable</span> String str)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> restTemplate.getForObject(<span class="string">&quot;http://example/echo/&quot;</span> + str, String.class);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 获取所有服务</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="meta">@RequestMapping(&quot;/services&quot;)</span></span><br><span class="line">        <span class="keyword">public</span> Object <span class="title function_">services</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> discoveryClient.getInstances(<span class="string">&quot;example&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>通过调用<code>http://127.0.0.1:8080/echo/nacosclient</code>即可获取到服务提供者提供的数据信息</li></ul><p><img src="http://blog.lutao1726.top/nacos-004.jpg" alt="Mou_icon"></p><p>通过调用<code>http://127.0.0.1:8080/services</code>可以看到Nacos中提供的相关的服务的信息，存储的信息很简单类似Eureka注册中心</p><p><img src="http://blog.lutao1726.top/nacos-005.jpg" alt="Mou_icon"></p><h2 id="Nacos-注意事项"><a href="#Nacos-注意事项" class="headerlink" title="Nacos 注意事项"></a>Nacos 注意事项</h2><h4 id="兼容版本"><a href="#兼容版本" class="headerlink" title="兼容版本"></a>兼容版本</h4><table><thead><tr><th align="center">SpringCloud</th><th align="center">SpringBoot</th><th align="center">Spring Cloud Alibaba</th></tr></thead><tbody><tr><td align="center">Greenwich</td><td align="center">2.1.x</td><td align="center">0.2.2(还没有RELEASE)</td></tr><tr><td align="center">Finchley</td><td align="center">2.0.x</td><td align="center">0.2.1</td></tr><tr><td align="center">Edgware</td><td align="center">1.5.x</td><td align="center">0.1.1</td></tr><tr><td align="center">Dalston</td><td align="center">1.5.x</td><td align="center">0.1.1</td></tr></tbody></table><p>在SpringBoot 2.0.x以下时 Spring Cloud Alibaba为0.1.1 启动报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">2019/06/11 15:10:30 INFO  [main] [org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer] : </span><br><span class="line"></span><br><span class="line">Error starting ApplicationContext. To display the auto-configuration report re-run your application with <span class="string">&#x27;debug&#x27;</span> enabled.</span><br><span class="line">2019/06/11 15:10:30 ERROR [main] [org.springframework.boot.SpringApplication] : Application startup failed</span><br><span class="line">org.springframework.beans.factory.BeanCreationException: Error creating bean with name <span class="string">&#x27;nacosAutoServiceRegistration&#x27;</span> defined <span class="keyword">in</span> class path resource [org/springframework/cloud/alibaba/nacos/NacosDiscoveryAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.alibaba.nacos.registry.NacosAutoServiceRegistration]: Factory method <span class="string">&#x27;nacosAutoServiceRegistration&#x27;</span> threw exception; nested exception is java.lang.NoSuchMethodError: org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.&lt;init&gt;(Lorg/springframework/cloud/client/serviceregistry/ServiceRegistry;Lorg/springframework/cloud/client/serviceregistry/AutoServiceRegistrationProperties;)V</span><br><span class="line">at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory<span class="variable">$1</span>.getObject(AbstractBeanFactory.java:306)</span><br><span class="line">at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)</span><br><span class="line">at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)</span><br><span class="line">at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)</span><br><span class="line">at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)</span><br><span class="line">at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)</span><br><span class="line">at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)</span><br><span class="line">at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)</span><br><span class="line">at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)</span><br><span class="line">at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)</span><br><span class="line">at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)</span><br><span class="line">at cn.zhangfusheng.alibaba.nacos.test.server.AlibabaNacosTestServerApplication.main(AlibabaNacosTestServerApplication.java:21)</span><br><span class="line">Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.cloud.alibaba.nacos.registry.NacosAutoServiceRegistration]: Factory method <span class="string">&#x27;nacosAutoServiceRegistration&#x27;</span> threw exception; nested exception is java.lang.NoSuchMethodError: org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.&lt;init&gt;(Lorg/springframework/cloud/client/serviceregistry/ServiceRegistry;Lorg/springframework/cloud/client/serviceregistry/AutoServiceRegistrationProperties;)V</span><br><span class="line">at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189)</span><br><span class="line">at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588)</span><br><span class="line">... 18 common frames omitted</span><br><span class="line">Caused by: java.lang.NoSuchMethodError: org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration.&lt;init&gt;(Lorg/springframework/cloud/client/serviceregistry/ServiceRegistry;Lorg/springframework/cloud/client/serviceregistry/AutoServiceRegistrationProperties;)V</span><br><span class="line">at org.springframework.cloud.alibaba.nacos.registry.NacosAutoServiceRegistration.&lt;init&gt;(NacosAutoServiceRegistration.java:43)</span><br><span class="line">at org.springframework.cloud.alibaba.nacos.NacosDiscoveryAutoConfiguration.nacosAutoServiceRegistration(NacosDiscoveryAutoConfiguration.java:62)</span><br><span class="line">at org.springframework.cloud.alibaba.nacos.NacosDiscoveryAutoConfiguration$$EnhancerBySpringCGLIB$<span class="variable">$5cdf832e</span>.CGLIB$nacosAutoServiceRegistration<span class="variable">$2</span>(&lt;generated&gt;)</span><br><span class="line">at org.springframework.cloud.alibaba.nacos.NacosDiscoveryAutoConfiguration$$EnhancerBySpringCGLIB$$5cdf832e$$FastClassBySpringCGLIB$<span class="variable">$531121d8</span>.invoke(&lt;generated&gt;)</span><br><span class="line">at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)</span><br><span class="line">at org.springframework.context.annotation.ConfigurationClassEnhancer<span class="variable">$BeanMethodInterceptor</span>.intercept(ConfigurationClassEnhancer.java:358)</span><br><span class="line">at org.springframework.cloud.alibaba.nacos.NacosDiscoveryAutoConfiguration$$EnhancerBySpringCGLIB$<span class="variable">$5cdf832e</span>.nacosAutoServiceRegistration(&lt;generated&gt;)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)</span><br><span class="line">at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">at java.lang.reflect.Method.invoke(Method.java:498)</span><br><span class="line">at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162)</span><br><span class="line">... 19 common frames omitted</span><br><span class="line">Disconnected from the target VM, address: <span class="string">&#x27;127.0.0.1:52284&#x27;</span>, transport: <span class="string">&#x27;socket&#x27;</span></span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 1</span><br></pre></td></tr></table></figure><p>查看源码_如图报错</p><p><img src="http://blog.lutao1726.top/nacos-0006.png" alt="Mou_icon"></p><ul><li>NacosAutoServiceRegistration 继承 AbstractAutoServiceRegistration,AbstractAutoServiceRegistration的构造函数值接收一个ServiceRegistry serviceRegistry</li></ul><p>解决问题</p><ul><li>查看 AbstractAutoServiceRegistration 所在的依赖关系</li></ul><p><img src="http://blog.lutao1726.top/nacos-0007.png" alt="Mou_icon"></p><ul><li>限定 spring-cloud-Commons的版本号.当前的1.3.0 版本中AbstractAutoServiceRegistration的构造函数接收单个参数</li></ul><h4 id="通过dependencyManagement限制版本"><a href="#通过dependencyManagement限制版本" class="headerlink" title="通过dependencyManagement限制版本"></a>通过dependencyManagement限制版本</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>Edgware.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.1.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-commons<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux下如何批量杀JAVA进程或某个进程方法</title>
      <link href="/2019/05/24/linux%E4%B8%8B%E5%A6%82%E4%BD%95%E6%89%B9%E9%87%8F%E6%9D%80JAVA%E8%BF%9B%E7%A8%8B%E6%88%96%E6%9F%90%E4%B8%AA%E8%BF%9B%E7%A8%8B%E6%96%B9%E6%B3%95/"/>
      <url>/2019/05/24/linux%E4%B8%8B%E5%A6%82%E4%BD%95%E6%89%B9%E9%87%8F%E6%9D%80JAVA%E8%BF%9B%E7%A8%8B%E6%88%96%E6%9F%90%E4%B8%AA%E8%BF%9B%E7%A8%8B%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="linux下如何批量杀JAVA进程或某个进程方法"><a href="#linux下如何批量杀JAVA进程或某个进程方法" class="headerlink" title="linux下如何批量杀JAVA进程或某个进程方法"></a>linux下如何批量杀JAVA进程或某个进程方法</h2><p>linux下如何批量杀JAVA进程或某个进程方法 </p><p>在工作中经常需要停止JAVA进程，停止时间也比较长，那么有时候因为一些情况，需要把 linux 下JAVA所有进程 kill 掉，又不能用killall 直接杀掉某一进程名称包含的所有运行中进程（我们可能只需要杀掉其中的某一类或运行指定参数命令的进程），这个时候我们需要运用ps, grep, cut 和 kill 一起操作。</p><p>ok，下面给出具体的参考：</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef|grep LOCAL=NO|grep -v grep|cut -c 9-15|xargs kill -9</span><br></pre></td></tr></table></figure><p>运行这条命令将会杀掉所有含有关键字”LOCAL&#x3D;NO”的进程，是不是很方便？</p><p>下面将这条命令作一下简单说明：</p><p>管道符”|”用来隔开两个命令，管道符左边命令的输出会作为管道符右边命令的输入。</p><p><em>“ps -ef”</em> 是linux里查看所有进程的命令。这时检索出的进程将作为下一条命令”grep LOCAL&#x3D;NO”的输入。</p><p><em>“grep LOCAL&#x3D;NO”</em> 的输出结果是，所有含有关键字”LOCAL&#x3D;NO”的进程。</p><p><em>“grep -v grep”</em> 是在列出的进程中去除含有关键字”grep”的进程。</p><p><em>“cut -c 9-15”</em> 是截取输入行的第9个字符到第15个字符，而这正好是进程号PID。</p><p><em>“xargs kill -9”</em> 中的 xargs 命令是用来把前面命令的输出结果（PID）作为”kill -9”命令的参数，并执行该命令。”kill -9”会强行杀掉指定进程。</p><p>其它类似的情况，只需要修改”grep LOCAL&#x3D;NO”中的关键字部分就可以了。</p><p>另一种方法，使用awk</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps x|grep gas|grep -v grep |awk &#x27;&#123;print $1&#125;&#x27;|xargs kill -9</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud consul服务注册与发现</title>
      <link href="/2019/05/22/SpringCloud%20consul%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0/"/>
      <url>/2019/05/22/SpringCloud%20consul%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<!-- 展示图片 --><p><img src="https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=2103295947,3549244433&fm=26&gp=0.jpg" alt="Mou_icon"></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Consul 是 HashiCorp 公司推出的开源工具，用于实现分布式系统的服务发现与配置。与其他分布式服务注册与发现的方案，Consul的方案更“一站式”，内置了服务注册与发现框 架、分布一致性协议实现、健康检查、Key&#x2F;Value存储、多数据中心方案，不再需要依赖其他工具（比如ZooKeeper等）。使用起来也较 为简单。Consul使用Go语言编写，因此具有天然可移植性(支持Linux、windows和Mac OS X)；安装包仅包含一个可执行文件，方便部署，与Docker等轻量级容器可无缝配合 。</p><ul><li>1、Consul 下载地址：<a href="https://www.consul.io/downloads.html">https://www.consul.io/downloads.html</a> </li><li>2、执行如下命令启动Consul：consul agent -dev<br><img src="http://blog.lutao1726.top/consul-001.png" alt="Mou_icon"></li><li>3、在浏览器中打开consul提供的管理页面<br><img src="http://blog.lutao1726.top/consul-002.jpg" alt="Mou_icon"><br>fgc</li></ul><h2 id="Consul-服务提供者"><a href="#Consul-服务提供者" class="headerlink" title="Consul 服务提供者"></a>Consul 服务提供者</h2><h4 id="搭建工程"><a href="#搭建工程" class="headerlink" title="搭建工程"></a>搭建工程</h4><ul><li>引入maven依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lutao<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>consul-provider<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>consul-provider<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-boot.version</span>&gt;</span>2.0.4.RELEASE<span class="tag">&lt;/<span class="name">spring-boot.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Finchley.RELEASE<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-consul-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>application.yml中添加相关配置<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">consul:</span></span><br><span class="line"><span class="comment">#consul地址</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line"><span class="comment">#consul 对外提供服务的端口</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8500</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line"><span class="comment">#服务提供者对外提供的健康检查接口</span></span><br><span class="line">        <span class="attr">healthCheckPath:</span> <span class="string">/health</span></span><br><span class="line">        <span class="attr">healthCheckInterval:</span> <span class="string">15s</span></span><br><span class="line"><span class="comment">#服务实例ID</span></span><br><span class="line">        <span class="attr">instance-id:</span> <span class="string">consul-provider</span></span><br><span class="line"><span class="comment">#应用名称</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">consul-provider</span></span><br><span class="line"><span class="comment">#对外提供服务的端口</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">10020</span></span><br></pre></td></tr></table></figure></li><li>添加服务启动代码，并对外提供服务<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConsulProviderApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(ConsulProviderApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hi&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">home</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hi ,i&#x27;m consul-provider&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 自检</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/health&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">health</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;health&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>启动服务提供者之后会在consul的管理页面中看到consul-provider相关的服务信息</li></ul><p><img src="http://blog.lutao1726.top/consul-003.jpg" alt="Mou_icon"></p><h2 id="Consul-服务消费者"><a href="#Consul-服务消费者" class="headerlink" title="Consul 服务消费者"></a>Consul 服务消费者</h2><h4 id="搭建工程-1"><a href="#搭建工程-1" class="headerlink" title="搭建工程"></a>搭建工程</h4><ul><li>引入maven依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lutao<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>consul-consumer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>consul-consumer<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-boot.version</span>&gt;</span>2.0.4.RELEASE<span class="tag">&lt;/<span class="name">spring-boot.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Finchley.RELEASE<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-consul-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>application.yml中添加相关配置<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">consul:</span></span><br><span class="line"><span class="comment">#consul地址</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line"><span class="comment">#consul 对外提供服务的端口</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8500</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">register:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">#应用名称</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">consul-consumer</span></span><br><span class="line"><span class="comment">#对外提供服务的端口</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">10010</span></span><br></pre></td></tr></table></figure></li><li>服务消费者可以根据服务名远程调用服务提供者提供的接口<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.DiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.loadbalancer.LoadBalanced;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.loadbalancer.LoadBalancerClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConsulConsumerApplication</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired(required=true)</span></span><br><span class="line">    <span class="keyword">private</span> LoadBalancerClient loadBalancer;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired(required=true)</span></span><br><span class="line">    <span class="keyword">private</span> DiscoveryClient discoveryClient;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从所有服务中选择一个服务（轮询）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/discover&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">discover</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> loadBalancer.choose(<span class="string">&quot;consul-provider&quot;</span>).getUri().toString();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@LoadBalanced</span></span><br><span class="line">    <span class="keyword">public</span> RestTemplate <span class="title function_">restTemplate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RestTemplate</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/hi&quot;, method = RequestMethod.GET)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">add</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForEntity(<span class="string">&quot;http://consul-provider/hi&quot;</span>, String.class).getBody();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取所有服务</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/services&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">services</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> discoveryClient.getInstances(<span class="string">&quot;consul-provider&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(ConsulConsumerApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>通过调用 <code>http://127.0.0.1:10010/hi</code> 即可获取到服务提供者提供的数据信息</li></ul><p><img src="http://blog.lutao1726.top/consul-004.jpg" alt="Mou_icon"></p><p>通过调用<code>http://127.0.0.1:10010/services</code>可以看到consul中提供的相关的服务的信息，存储的信息很简单类似Eureka注册中心</p><p><img src="http://blog.lutao1726.top/consul-005.jpg" alt="Mou_icon"></p>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud eureka服务注册与发现</title>
      <link href="/2019/05/16/SpringCloud%20eureka%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0/"/>
      <url>/2019/05/16/SpringCloud%20eureka%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<!-- 展示图片 --><p><img src="http://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=3833687770,1236182247&fm=26&gp=0.jpg" alt="Mou_icon"></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h2 id="Eureka-Server服务"><a href="#Eureka-Server服务" class="headerlink" title="Eureka Server服务"></a>Eureka Server服务</h2><h4 id="搭建工程"><a href="#搭建工程" class="headerlink" title="搭建工程"></a>搭建工程</h4><ul><li>引入maven依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.zhjs.base<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zhjs-base-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.zhjs.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zhjs-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>zhjs-eureka-server<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>application.properties中添加相关配置<figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.application.name</span>=<span class="string">eureka-server</span></span><br><span class="line"><span class="attr">server.port</span>=<span class="string">1001</span></span><br><span class="line"><span class="attr">eureka.instance.hostname</span>=<span class="string">localhost</span></span><br><span class="line"><span class="attr">eureka.client.register-with-eureka</span>=<span class="string">false</span></span><br><span class="line"><span class="attr">eureka.client.fetch-registry</span>=<span class="string">false</span></span><br></pre></td></tr></table></figure></li><li>添加服务启动代码<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ZhjsEurekaServerApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(ZhjsEurekaServerApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>启动<br><img src="http://blog.lutao1726.top/eureka-001.png" alt="Mou_icon"></li><li>在浏览器中打开eureka提供的管理页面</li></ul><p><img src="http://blog.lutao1726.top/eureka-002.jpg" alt="Mou_icon"></p><h2 id="Eureka-服务提供者"><a href="#Eureka-服务提供者" class="headerlink" title="Eureka 服务提供者"></a>Eureka 服务提供者</h2><h4 id="搭建工程-1"><a href="#搭建工程-1" class="headerlink" title="搭建工程"></a>搭建工程</h4><ul><li>引入maven依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.zhjs.base<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zhjs-base-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.zhjs.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zhjs-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>zhjs-eureka-client<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-feign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.zhjs.framework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zhjs-framework-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>application.properties中添加相关配置<figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.application.name</span>=<span class="string">eureka-client</span></span><br><span class="line"><span class="attr">server.port</span>=<span class="string">1002</span></span><br><span class="line"><span class="attr">eureka.client.serviceUrl.defaultZone</span>=<span class="string">http://127.0.0.1:1001/eureka/</span></span><br></pre></td></tr></table></figure></li><li>添加服务启动代码，并对外提供服务<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ZhjsEurekaClientApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(ZhjsEurekaClientApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DiscoveryController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DiscoveryClient discoveryClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;server.port&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String ip;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/client&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">client</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">services</span> <span class="operator">=</span> <span class="string">&quot;Services: &quot;</span> + discoveryClient.getServices()+<span class="string">&quot; ip :&quot;</span>+ip;</span><br><span class="line"></span><br><span class="line">        System.out.println(services);</span><br><span class="line">        <span class="keyword">return</span> services;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>启动服务提供者之后会在eureka的管理页面中看到eureka-provider相关的服务信息</li></ul><p><img src="http://blog.lutao1726.top/eureka-003.jpg" alt="Mou_icon"></p><h2 id="Eureka-服务消费者"><a href="#Eureka-服务消费者" class="headerlink" title="Eureka 服务消费者"></a>Eureka 服务消费者</h2><h4 id="搭建工程-2"><a href="#搭建工程-2" class="headerlink" title="搭建工程"></a>搭建工程</h4><ul><li>引入maven依赖<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.zhjs.base<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zhjs-base-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.zhjs.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zhjs-eureka-feign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>zhjs-eureka-feign<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-boot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-feign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>application.properties中添加相关配置<figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.application.name</span>=<span class="string">eureka-feign</span></span><br><span class="line"><span class="attr">server.port</span>=<span class="string">1003</span></span><br><span class="line"><span class="attr">eureka.client.serviceUrl.defaultZone</span>=<span class="string">http://127.0.0.1:1001/eureka/</span></span><br></pre></td></tr></table></figure></li><li>服务消费者可以根据服务名远程调用服务提供者提供的接口<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@EnableFeignClients</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ZhjsEurekaFeignApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(ZhjsEurekaFeignApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@FeignClient(name = &quot;eureka-client&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">DiscoveryService</span> &#123;</span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/client&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getClient</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/feignTest&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    DiscoveryService discoveryService;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/getUserList&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUserList</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> discoveryService.getClient();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>通过调用<code>http://127.0.0.1:10010/hi</code>即可获取到服务提供者提供的数据信息</li></ul><p><img src="http://blog.lutao1726.top/eureka-004.jpg" alt="Mou_icon"></p><p>通过调用<code>http://127.0.0.1:10010/services</code>可以看到consul中提供的相关的服务的信息，存储的信息很简单类似Eureka注册中心</p><p><img src="http://blog.lutao1726.top/eureka-005.jpg" alt="Mou_icon"></p>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud gateway异常处理</title>
      <link href="/2019/05/15/SpringCloud%20gateway%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/"/>
      <url>/2019/05/15/SpringCloud%20gateway%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<!-- 展示图片 --><p><img src="http://justyy.com/wp-content/uploads/2016/01/markdown-syntax-language.png" alt="Mou_icon"></p>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud gateway动态路由</title>
      <link href="/2019/05/15/SpringCloud%20gateway%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1/"/>
      <url>/2019/05/15/SpringCloud%20gateway%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1/</url>
      
        <content type="html"><![CDATA[<!-- 展示图片 --><p><img src="http://justyy.com/wp-content/uploads/2016/01/markdown-syntax-language.png" alt="Mou_icon"></p>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud gateway熔断限流</title>
      <link href="/2019/05/15/SpringCloud%20gateway%E7%86%94%E6%96%AD%E9%99%90%E6%B5%81/"/>
      <url>/2019/05/15/SpringCloud%20gateway%E7%86%94%E6%96%AD%E9%99%90%E6%B5%81/</url>
      
        <content type="html"><![CDATA[<!-- 展示图片 --><p><img src="http://justyy.com/wp-content/uploads/2016/01/markdown-syntax-language.png" alt="Mou_icon"></p>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud gateway初体验</title>
      <link href="/2019/05/14/SpringCloud%20gateway%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
      <url>/2019/05/14/SpringCloud%20gateway%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<!-- 展示图片 --><p><img src="http://justyy.com/wp-content/uploads/2016/01/markdown-syntax-language.png" alt="Mou_icon"></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote><p>Spring Cloud Gateway是Spring Cloud官方推出的第二代网关框架，基于Spring5.0、Spring Boot2.0、Project Reactor等技术开发的网关，使用非阻塞API，Websockets得到支持，目的是代替原先版本中的Spring Cloud Netfilx Zuul，目前Netfilx已经开源了Zuul2.0，但Spring 没有考虑集成，而是推出了自己开发的Spring Cloud GateWay。<code>这里需要注意一下gateway使用的netty+webflux实现，不要加入web依赖（不要引用webmvc），否则初始化会报错 ，需要加入webflux依赖</code>。</p></blockquote><h4 id="网关的基本功能"><a href="#网关的基本功能" class="headerlink" title="网关的基本功能"></a>网关的基本功能</h4><ul><li>网关核心功能是路由转发，因此不要有耗时操作在网关上处理，让请求快速转发到后端服务上</li><li>网关还能做统一的熔断、限流、认证、日志监控等</li></ul><p><img src="https://img-blog.csdnimg.cn/20190115094937733.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3podXl1MTk5MTEwMTY1MjA=,size_16,color_FFFFFF,t_70" alt="Mou_icon"></p><h2 id="Spring-Cloud-Gateway-VS-Spring-Cloud-Zuul"><a href="#Spring-Cloud-Gateway-VS-Spring-Cloud-Zuul" class="headerlink" title="Spring Cloud Gateway VS Spring Cloud Zuul"></a>Spring Cloud Gateway VS Spring Cloud Zuul</h2><p>gateway与zuul的简单比较：gateway使用的是异步请求，zuul是同步请求，gateway的数据封装在ServerWebExchange里，zuul封装在RequestContext里，同步方便调式，可以把数据封装在ThreadLocal中传递。</p><p>Spring Cloud Gateway有三个核心概念：路由、断言、过滤器<br>过滤器：gateway有两种filter：GlobalFilter、GatewayFilter，全局过滤器默认对所有路由有效。</p><h2 id="搭建工程"><a href="#搭建工程" class="headerlink" title="搭建工程"></a>搭建工程</h2><h4 id="引入maven依赖"><a href="#引入maven依赖" class="headerlink" title="引入maven依赖"></a>引入maven依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span> </span><br><span class="line">       </span><br></pre></td></tr></table></figure><h4 id="配置yml"><a href="#配置yml" class="headerlink" title="配置yml"></a>配置yml</h4><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在github上配置hexo自定义域名</title>
      <link href="/2019/05/12/%E5%9C%A8github%E4%B8%8A%E9%85%8D%E7%BD%AEhexo%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D/"/>
      <url>/2019/05/12/%E5%9C%A8github%E4%B8%8A%E9%85%8D%E7%BD%AEhexo%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> hexo教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试题积累</title>
      <link href="/2019/05/12/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%A7%AF%E7%B4%AF/"/>
      <url>/2019/05/12/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%A7%AF%E7%B4%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="Java基础"><a href="#Java基础" class="headerlink" title="Java基础"></a>Java基础</h2><h4>装箱与拆箱</h4>* 装箱：将基本类型用它们对应的引用类型包装起来；* 拆箱：将包装类型转换为基本数据类型；<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">e</span> <span class="operator">=</span> <span class="number">321</span>;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">f</span> <span class="operator">=</span> <span class="number">321</span>;</span><br><span class="line">        <span class="type">Long</span> <span class="variable">g</span> <span class="operator">=</span> <span class="number">3L</span>;</span><br><span class="line">        <span class="type">Long</span> <span class="variable">h</span> <span class="operator">=</span> <span class="number">2L</span>;</span><br><span class="line">        System.out.println(c==d);</span><br><span class="line">        System.out.println(e==f);</span><br><span class="line">        System.out.println(c==(a+b));</span><br><span class="line">        System.out.println(c.equals(a+b));</span><br><span class="line">        System.out.println(g==(a+b));</span><br><span class="line">        System.out.println(g.equals(a+b));</span><br><span class="line">        System.out.println(g.equals(a+h));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><details>    <summary><mark><font color=darkred>点击查看运行结果</font></mark></summary><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">true</span><br><span class="line">false</span><br><span class="line">true</span><br><span class="line">true</span><br><span class="line">true</span><br><span class="line">false</span><br><span class="line">true</span><br></pre></td></tr></table></figure></details><h2 id="Java集合"><a href="#Java集合" class="headerlink" title="Java集合"></a>Java集合</h2><p>HashMap：<br>    * HashMap与ConcurrentHashMap实现原理？ </p><pre><code>* ConcurrentHashMap如何实现线程安全的？</code></pre><h2 id="Java多线程"><a href="#Java多线程" class="headerlink" title="Java多线程"></a>Java多线程</h2><h2 id="线程池：核心参数有哪些：7个核心参数-corePoolSize-核心线程数-maximumPoolSize-最大线程数-keepAliveTime-空闲线程存活时间-unit-存活时间单位-workQueue-任务队列-threadFactory-线程工厂，用于创建线程-handler-拒绝策略（4种：1-AbortPolicy-抛出异常（默认）-2-CallerRunsPolicy线程池没有被关闭，则由提交该任务的线程来执行-，3-DiscardPolicy直接丢弃被拒绝的任务-4-DiscardOldestPolicy如果线程池没有被关闭，则丢弃队列首部的任务，提交这个新的任务）-常用线程池：-newFixThreadPool-指定工作线程数量的线程池-（无任务时不释放）-newSingleThreadExecutor-创建一个单线程化的Executor-可保证顺序地执行各个任务-newCachedThreadPool-可缓存线程池（无任务时默认1分钟后释放）-newScheduleThreadPool-创建一个定长的线程池-任务执行流程-线程池刚创建时，里面没有一个线程。任务队列是作为参数传进来的。不过，就算队列里面有任务，线程池也不会马上执行它们-当调用-execute-方法添加一个任务时，线程池会做如下判断：-a-如果正在运行的线程数量小于-corePoolSize，那么马上创建线程运行这个任务；-b-如果正在运行的线程数量大于或等于-corePoolSize，那么将这个任务放入队列；-c-如果这时候队列满了，而且正在运行的线程数量小于-maximumPoolSize，那么还是要创建非核心线程立刻运行这个任务；-d-如果队列满了，而且正在运行的线程数量等于-maximumPoolSize，那么线程池会抛出异常-RejectExecutionException。-当一个线程完成任务时，它会从队列中取下一个任务来执行。-当一个线程无事可做，超过一定的时间（keepAliveTime）时，线程池会判断，如果当前运行的线程数大于-corePoolSize，那么这个线程就被停掉。所以线程池的所有任务完成后，它最终会收缩到-corePoolSize-的大小。-任务拒绝策略-线程池中的线程已经用完了，无法继续为新任务服务，同时，等待队列也已经排满了，再也塞不下新任务了。这时候我们就需要拒绝策略机制合理的处理这个问题-1-AbortPolicy-中止抛出异常策略-2-CallerRunsPolicy-调用者运行策略-3-DiscardOldestPolicy-抛弃最老策略-4-DiscardPolicy-抛弃策略-以上内置拒绝策略均实现了-RejectedExecutionHandler-接口，若以上策略仍无法满足实际需要，完全可以自己扩展-RejectedExecutionHandler-接口。锁：-synchronized锁升级过程-无锁-偏向锁-轻量锁-重量锁-ReentrantLock-实现原理（AQS）-公平锁如何实现-volatile特性-CASJVM"><a href="#线程池：核心参数有哪些：7个核心参数-corePoolSize-核心线程数-maximumPoolSize-最大线程数-keepAliveTime-空闲线程存活时间-unit-存活时间单位-workQueue-任务队列-threadFactory-线程工厂，用于创建线程-handler-拒绝策略（4种：1-AbortPolicy-抛出异常（默认）-2-CallerRunsPolicy线程池没有被关闭，则由提交该任务的线程来执行-，3-DiscardPolicy直接丢弃被拒绝的任务-4-DiscardOldestPolicy如果线程池没有被关闭，则丢弃队列首部的任务，提交这个新的任务）-常用线程池：-newFixThreadPool-指定工作线程数量的线程池-（无任务时不释放）-newSingleThreadExecutor-创建一个单线程化的Executor-可保证顺序地执行各个任务-newCachedThreadPool-可缓存线程池（无任务时默认1分钟后释放）-newScheduleThreadPool-创建一个定长的线程池-任务执行流程-线程池刚创建时，里面没有一个线程。任务队列是作为参数传进来的。不过，就算队列里面有任务，线程池也不会马上执行它们-当调用-execute-方法添加一个任务时，线程池会做如下判断：-a-如果正在运行的线程数量小于-corePoolSize，那么马上创建线程运行这个任务；-b-如果正在运行的线程数量大于或等于-corePoolSize，那么将这个任务放入队列；-c-如果这时候队列满了，而且正在运行的线程数量小于-maximumPoolSize，那么还是要创建非核心线程立刻运行这个任务；-d-如果队列满了，而且正在运行的线程数量等于-maximumPoolSize，那么线程池会抛出异常-RejectExecutionException。-当一个线程完成任务时，它会从队列中取下一个任务来执行。-当一个线程无事可做，超过一定的时间（keepAliveTime）时，线程池会判断，如果当前运行的线程数大于-corePoolSize，那么这个线程就被停掉。所以线程池的所有任务完成后，它最终会收缩到-corePoolSize-的大小。-任务拒绝策略-线程池中的线程已经用完了，无法继续为新任务服务，同时，等待队列也已经排满了，再也塞不下新任务了。这时候我们就需要拒绝策略机制合理的处理这个问题-1-AbortPolicy-中止抛出异常策略-2-CallerRunsPolicy-调用者运行策略-3-DiscardOldestPolicy-抛弃最老策略-4-DiscardPolicy-抛弃策略-以上内置拒绝策略均实现了-RejectedExecutionHandler-接口，若以上策略仍无法满足实际需要，完全可以自己扩展-RejectedExecutionHandler-接口。锁：-synchronized锁升级过程-无锁-偏向锁-轻量锁-重量锁-ReentrantLock-实现原理（AQS）-公平锁如何实现-volatile特性-CASJVM" class="headerlink" title="线程池：核心参数有哪些：7个核心参数    *  corePoolSize 核心线程数    *  maximumPoolSize 最大线程数    *  keepAliveTime  空闲线程存活时间    *  unit  存活时间单位    *  workQueue 任务队列    *  threadFactory 线程工厂，用于创建线程    *  handler 拒绝策略（4种：1.AbortPolicy 抛出异常（默认） 2.CallerRunsPolicy线程池没有被关闭，则由提交该任务的线程来执行 ，3. DiscardPolicy直接丢弃被拒绝的任务 4.DiscardOldestPolicy如果线程池没有被关闭，则丢弃队列首部的任务，提交这个新的任务）  常用线程池：    * newFixThreadPool    指定工作线程数量的线程池 （无任务时不释放）    * newSingleThreadExecutor  创建一个单线程化的Executor,可保证顺序地执行各个任务    * newCachedThreadPool   可缓存线程池（无任务时默认1分钟后释放）    * newScheduleThreadPool  创建一个定长的线程池  任务执行流程     * 线程池刚创建时，里面没有一个线程。任务队列是作为参数传进来的。不过，就算队列里面有任务，线程池也不会马上执行它们     * 当调用 execute() 方法添加一个任务时，线程池会做如下判断：        *  a) 如果正在运行的线程数量小于 corePoolSize，那么马上创建线程运行这个任务；        *  b) 如果正在运行的线程数量大于或等于 corePoolSize，那么将这个任务放入队列；        *  c) 如果这时候队列满了，而且正在运行的线程数量小于 maximumPoolSize，那么还是要创建非核心线程立刻运行这个任务；        *  d) 如果队列满了，而且正在运行的线程数量等于 maximumPoolSize，那么线程池会抛出异常 RejectExecutionException。     * 当一个线程完成任务时，它会从队列中取下一个任务来执行。     * 当一个线程无事可做，超过一定的时间（keepAliveTime）时，线程池会判断，如果当前运行的线程数大于 corePoolSize，那么这个线程就被停掉。所以线程池的所有任务完成后，它最终会收缩到 corePoolSize 的大小。  任务拒绝策略     * 线程池中的线程已经用完了，无法继续为新任务服务，同时，等待队列也已经排满了，再也塞不下新任务了。这时候我们就需要拒绝策略机制合理的处理这个问题     1.AbortPolicy 中止抛出异常策略     2.CallerRunsPolicy 调用者运行策略     3.DiscardOldestPolicy 抛弃最老策略     4.DiscardPolicy 抛弃策略     * 以上内置拒绝策略均实现了 RejectedExecutionHandler 接口，若以上策略仍无法满足实际需要，完全可以自己扩展 RejectedExecutionHandler 接口。锁：  synchronized锁升级过程        无锁-偏向锁-轻量锁-重量锁  ReentrantLock    * 实现原理（AQS）    * 公平锁如何实现    * volatile特性  CASJVM"></a>线程池：核心参数有哪些：7个核心参数<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">ThreadPoolExecutor</span><span class="params">(<span class="type">int</span> corePoolSize,</span></span><br><span class="line"><span class="params">                              <span class="type">int</span> maximumPoolSize,</span></span><br><span class="line"><span class="params">                              <span class="type">long</span> keepAliveTime,</span></span><br><span class="line"><span class="params">                              TimeUnit unit,</span></span><br><span class="line"><span class="params">                              BlockingQueue&lt;Runnable&gt; workQueue)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue,</span><br><span class="line">             Executors.defaultThreadFactory(), defaultHandler);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><br>    *  corePoolSize 核心线程数<br>    *  maximumPoolSize 最大线程数<br>    *  keepAliveTime  空闲线程存活时间<br>    *  unit  存活时间单位<br>    *  workQueue 任务队列<br>    *  threadFactory 线程工厂，用于创建线程<br>    *  handler 拒绝策略（4种：1.AbortPolicy 抛出异常（默认） 2.CallerRunsPolicy线程池没有被关闭，则由提交该任务的线程来执行 ，3. DiscardPolicy直接丢弃被拒绝的任务 4.DiscardOldestPolicy如果线程池没有被关闭，则丢弃队列首部的任务，提交这个新的任务）<br><br>  常用线程池：<br>    * newFixThreadPool    指定工作线程数量的线程池 （无任务时不释放）<br>    * newSingleThreadExecutor  创建一个单线程化的Executor,可保证顺序地执行各个任务<br>    * newCachedThreadPool   可缓存线程池（无任务时默认1分钟后释放）<br>    * newScheduleThreadPool  创建一个定长的线程池<br><br>  任务执行流程<br>     * 线程池刚创建时，里面没有一个线程。任务队列是作为参数传进来的。不过，就算队列里面有任务，线程池也不会马上执行它们<br>     * 当调用 execute() 方法添加一个任务时，线程池会做如下判断：<br>        *  a) 如果正在运行的线程数量小于 corePoolSize，那么马上创建线程运行这个任务；<br>        *  b) 如果正在运行的线程数量大于或等于 corePoolSize，那么将这个任务放入队列；<br>        *  c) 如果这时候队列满了，而且正在运行的线程数量小于 maximumPoolSize，那么还是要创建非核心线程立刻运行这个任务；<br>        *  d) 如果队列满了，而且正在运行的线程数量等于 maximumPoolSize，那么线程池会抛出异常 RejectExecutionException。<br>     * 当一个线程完成任务时，它会从队列中取下一个任务来执行。<br>     * 当一个线程无事可做，超过一定的时间（keepAliveTime）时，线程池会判断，如果当前运行的线程数大于 corePoolSize，那么这个线程就被停掉。所以线程池的所有任务完成后，它最终会收缩到 corePoolSize 的大小。<br>  任务拒绝策略<br>     * 线程池中的线程已经用完了，无法继续为新任务服务，同时，等待队列也已经排满了，再也塞不下新任务了。这时候我们就需要拒绝策略机制合理的处理这个问题<br>     1.AbortPolicy 中止抛出异常策略<br>     2.CallerRunsPolicy 调用者运行策略<br>     3.DiscardOldestPolicy 抛弃最老策略<br>     4.DiscardPolicy 抛弃策略<br>     * 以上内置拒绝策略均实现了 RejectedExecutionHandler 接口，若以上策略仍无法满足实际需要，完全可以自己扩展 RejectedExecutionHandler 接口。<br>锁：<br>  synchronized锁升级过程<br>        无锁-偏向锁-轻量锁-重量锁<br>  ReentrantLock<br>    * 实现原理（AQS）<br>    * 公平锁如何实现<br>    * volatile特性<br>  CAS<br>JVM</h2><ul><li><p>JVM内存结构       </p><ul><li>程序计数器：记录当前线程正在执行的那条字节码指令的地址，若当前线程正在执行的是本地方法此时程序计数器为Undefined</li><li>Java虚拟机栈：</li><li>本地方法栈：</li><li>堆：Eden空间、From Survivor空间、To Survivor空间,默认情况下年轻代按照8:1:1的比例来分配</li><li>方法区：存储类信息、常量、静态变量等数据，是线程共享的区域<br>JDK1.8与JDK1.7差异：元数据区取代了永久代  （它两的最大区别：元数据空间并不在虚拟机中，而是使用本地内存）</li></ul></li><li><p>类的生命周期</p><ul><li>加载：加载class文件进JVM</li><li>验证：确保被加载的类的正确性（文件格式，元数据，字节码，符号引用）</li><li>准备：为类中的静态变量分配内存，并将其初始化为默认值</li><li>解析：把类中的符号引用转化为直接引用</li><li>初始化：为类中的静态变量赋予初始值</li><li>使用：</li><li>卸载</li></ul></li><li><p>类加载器：启动类加载器，扩展类加载器，应用类加载器，用户自定义加载器</p></li><li><p>双亲委派模型：如果一个类加载器收到了类加载的请求，它首先不会自己去尝试加载这个类，而是把请求委托给父加载器去完成，依次向上，因此，所有的类加载请求最终都应该被传递到顶层的启动类加载器中，只有当父加载器在它的搜索范围中没有找到所需的类时，即无法完成该加载，子加载器才会尝试自己去加载该类。<br>  目的：系统类防止内存中出现多份同样的字节码</p></li><li><p>Java类的加载机制</p><ul><li>全盘负责</li><li>父类委托</li><li>缓存机制</li></ul></li><li><p>JVM调优控制参数</p><ul><li>Xms 设置堆的最小空间大小</li><li>Xmx 设置堆的最大空间大小</li><li>XX:NewSize 设置新生代最小空间大小    </li><li>XX:MaxNewSize 设置新生代最大空间大小</li><li>XX:PermSize 设置永久代最小空间大小</li><li>XX:MaxPermSize 设置永久代最大空间大小</li><li>Xss 设置每个线程的堆栈大小</li></ul></li><li><p>运行时的内存划分</p></li><li><p>垃圾收集算法</p><ul><li>标记清除</li><li>复制回收</li><li>标记-整理</li><li>分代收集</li></ul></li><li><p>一个对象的内存分配过程</p></li><li><p>CMS收集器</p><ul><li>收集过程</li><li>哪个过程会有STW</li><li>如何处理内存碎片问题</li></ul></li><li><p>G1收集器</p></li><li><p>GC roots有哪些<br>   1、虚拟机栈（局部变量表中引用的对象）<br>   2、本地方法栈（本地方法引用的对象）<br>   3、方法区中静态属性引用的对象<br>   4、方法区中静态常量池中引用的对象</p></li><li><p>JVM 常用配置参数有哪些</p></li><li><p>内存占用过多，如何排除</p></li></ul><h2 id="计算机基础"><a href="#计算机基础" class="headerlink" title="计算机基础"></a>计算机基础</h2><h4> TCP 三次握⼿和四次挥⼿</h4><details>    <summary><mark><font color=darkred>点击查看详情</font></mark></summary><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">123</span><br></pre></td></tr></table></figure></details><h4> TCP，UDP协议区别</h4><details>    <summary><mark><font color=darkred>点击查看详情</font></mark></summary><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">123</span><br></pre></td></tr></table></figure></details><h4> TCP 协议如何保证可靠传输</h4><details>    <summary><mark><font color=darkred>点击查看详情</font></mark></summary><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">123</span><br></pre></td></tr></table></figure></details><h4>  HTTP 和 HTTPS 的区别？</h4><details>    <summary><mark><font color=darkred>点击查看详情</font></mark></summary><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">123</span><br></pre></td></tr></table></figure></details><h4> 进程和线程的区别</h4><details>    <summary><mark><font color=darkred>点击查看详情</font></mark></summary><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1123</span><br></pre></td></tr></table></figure></details><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p>mysql：<br>    * 索引<br>        * 分类？使用场景？<br>        * InnoDB索引的结构是（B+树），为啥不用B树？<br>        * 如何查看索引的使用情况？Explain关注哪些字段？<br>            explain: type </p><ul><li>事务<ul><li><p>ACID 原子性 一致性 隔离性 持久性</p></li><li><p>隔离级别（解决脏读，不可重复读，幻读）</p><ul><li>读未提交</li><li>读已提交</li><li>可重复读<ul><li>MVCC多版本并发控制<ul><li>InnoDB每行记录后面会有三个隐藏的列<ul><li>DB_ROW_ID：行ID，随着插入新行而单调递增，如果有主键，则不会包含该列。</li><li>DB_TRX_ID：记录插入或更新该行的事务的事务ID。</li><li>DB_ROLL_PTR：回滚指针，指向 undo log 记录。</li></ul></li><li>MVCC只作用于RC(读已提交)与RR(可重复读)</li></ul></li></ul></li><li>串行化</li></ul></li><li><p>RC&#x2F;RR的实现原理</p></li></ul></li></ul><p>redis：<br>    * 常见数据结构<br>        * zset实现原理<br>        * hash扩容过程<br>    * 常见缓存问题<br>        * 缓存穿透，缓存击穿，缓存雪崩，热点key<br>        * 如何解决上述问题<br>    * 持久化 RDB与AOF二者的区别<br>    * redis为啥快？线程模型是什么？</p><pre><code>* redis的淘汰策略有哪些？* redis集群架构    * 主从    * 集群    * 哨兵</code></pre><h3>redis</h3>https://zhuanlan.zhihu.com/p/91539644Redis的数据类型：    String    Hash    List    Set    SortedSet(HyperLogLog,Geo,Pub/Sub,BloomFilter,RedisSearch,Redis-ML)缓存雪崩：大量的key在同一时间过期Redis分布式锁：setnx 来争抢锁 expire给锁加过期时间 在Redis2.6之前这个不是原子操作可能会存在过期时间未执行到就发生意外<p>keys：Redis单线程会导致线程阻塞<br>scan:无阻塞的取出指定模式的key列表，但会有一定的重复，客户端需要做一次去重，时间消耗上比keys大，键值有可能被修改<br>smembers：可以返回集合键当前包含的所有元素</p><p>Redis作异步队列：rpush生产消息，lpop消费消息，当lpop没有消息的时候，要适当sleep一会再重试<br>                也可以用blpop，在没有消息的时候，它会阻塞住直到消息到来<br>               使用pub&#x2F;sub主题订阅者模式，可以实现 1:N 的消息队列。缺点当消费者下线，生产的消息会丢失</p><p>Redis如何实现延时队列：使用sortedset，拿时间戳作为score，消息内容作为key调用zadd来生产消息，消费者用zrangebyscore指令获取N秒之前的数据轮询进行处理。               </p><p>持久化：RDB(镜像全量持久化)与AOF(增量持久化)   不过Redis本身的机制是 AOF持久化开启且存在AOF文件时，优先加载AOF文件；AOF关闭或者AOF文件不存在时，加载RDB文件；加载AOF&#x2F;RDB文件城后，Redis启动成功； AOF&#x2F;RDB文件存在错误时，Redis启动失败并打印错误信息<br>RDB的原理是什么:fork和cow</p><p>pipeline: 可以将多次IO往返的时间缩减为一次，前提是pipeline执行的指令之间没有因果相关性。使用redis-benchmark进行压测的时候可以发现影响redis的QPS峰值的一个重要因素是pipeline批次指令的数目。</p><p>Redis的同步机制:Redis可以使用主从同步，从从同步。第一次同步时，主节点做一次bgsave，并同时将后续修改操作记录到内存buffer，待完成后将RDB文件全量同步到复制节点，复制节点接受完成后将RDB镜像加载到内存。加载完成后，再通知主节点将期间修改的操作记录同步到复制节点进行重放就完成了同步过程。后续的增量数据通过AOF日志同步即可，有点类似数据库的binlog。</p><p>Redis集群:Redis Sentinal 着眼于高可用,在master宕机时会自动将slave提升为master，继续提供服务。<br>         Redis Cluster 着眼于扩展性，在单个redis内存不足时，使用Cluster进行分片存储。 </p><p>Redis过期策略：定期删除+惰性删除<br>     内存淘汰机制：noeviction  返回错误当内存限制达到并且客户端尝试执行会让更多内存被使用的命令<br>                 allkeys-lru 尝试回收最少使用的键（LRU）<br>                 volatile-lru 尝试回收最少使用的键（LRU），但仅限于在过期集合的键<br>                 allkeys-random 回收随机的键<br>                 volatile-random 回收随机的过期键<br>                 volatile-ttl 回收在过期集合的键，并且优先回收存活时间（TTL）较短的键<br>     LRU近似算法：LinkedHashMap<br>     <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line">        <span class="keyword">class</span> <span class="title class_">LRUCache</span>&lt;K,V&gt; entends LinkedHashMap&lt;K,V&gt;&#123;</span><br><span class="line">            <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> CACHE_SIZE;</span><br><span class="line">            <span class="keyword">public</span> <span class="title function_">LRUCache</span><span class="params">(<span class="type">int</span> cacheSize)</span>&#123;</span><br><span class="line">                <span class="built_in">super</span>((<span class="type">int</span>) Math.cell(cacheSize/<span class="number">0.75</span>)+<span class="number">1</span>,<span class="number">0.75f</span>,<span class="literal">true</span>);</span><br><span class="line">                CACHE_SIZE = cacheSize</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">removeEldestEntry</span><span class="params">(Map.Entry&lt;K,V&gt; eldest)</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> size() &gt; CACHE_SIZE</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">     ```            </span><br><span class="line"></span><br><span class="line">              </span><br><span class="line">              </span><br><span class="line">常用框架</span><br><span class="line">-------</span><br><span class="line">&lt;h3&gt;Spring&lt;/h3&gt;</span><br><span class="line">* AOP 与 IOC实现</span><br><span class="line">* 循环依赖问题</span><br><span class="line">* 事务传播特性，失效场景</span><br><span class="line">* JDK&amp;CGLIB的区别</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;Mybatis&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;Netty&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;SpringBoot&lt;/h3&gt;</span><br><span class="line">* Spring Boot启动原理</span><br><span class="line">    </span><br><span class="line">* Spring 自动化配置</span><br><span class="line">    <span class="meta">@SpringBootApplication</span> </span><br><span class="line">        * <span class="meta">@ComponentScan</span>  ---<span class="meta">@ComponentScan</span></span><br><span class="line">        * <span class="meta">@SpringBootConfiguration</span> ---<span class="meta">@Configuration</span></span><br><span class="line">        * <span class="meta">@EnableAutoConfiguration</span>  ---<span class="meta">@Import</span> ---&gt;EnableAutoConfigurationImportSelector.class ---&gt;selectImports ---&gt;MATE-INF/spring.factories</span><br><span class="line">                    </span><br><span class="line">* 如何编写一个Starter</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;SpringSecurity与Oauth2<span class="number">.0</span>&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">分布式与微服务相关</span><br><span class="line">------</span><br><span class="line">&lt;h3&gt;消息队列MQ&lt;/h3&gt;</span><br><span class="line">* RocketMQ </span><br><span class="line">    * 整体架构</span><br><span class="line">    * 如何保证消息的可靠性？</span><br><span class="line">    * 如何实现消息的顺序性？</span><br><span class="line">    * 消费者接口幂等性设计？</span><br><span class="line">    * 事务消息实现？</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;h3&gt;SpringCloud&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">&lt;h5&gt;zuul与gateway&lt;/h5&gt;</span><br><span class="line">Zuul，中文文件名乱码原因：因为上传用了zuul的servlet而不是springmvc</span><br><span class="line">    解决方法：<span class="number">1.</span>在调用的上传接口时加 <span class="string">&quot;/zuul&quot;</span> 这种</span><br><span class="line">            <span class="number">2.</span></span><br><span class="line">&lt;h5&gt;config&lt;/h5&gt;</span><br><span class="line"></span><br><span class="line">&lt;h5&gt;eureka&lt;/h5&gt;</span><br><span class="line"></span><br><span class="line">&lt;h5&gt;hystrix&lt;/h5&gt;</span><br><span class="line"></span><br><span class="line">&lt;h5&gt;Ribbon&lt;/h5&gt;</span><br><span class="line"></span><br><span class="line">&lt;h5&gt;feign&lt;/h5&gt;</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;SpringCloud Alibaba&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">&lt;h5&gt;Nacos&lt;/h5&gt;</span><br><span class="line"> nacos服务注册原理</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">&lt;h5&gt;Seate&lt;/h5&gt;</span><br><span class="line"></span><br><span class="line">&lt;h5&gt;Sentinel&lt;/h5&gt;</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;Dubbo&lt;/h3&gt;</span><br><span class="line">* Dubbo的架构</span><br><span class="line">* 负载均衡算法，容错策略，灰度测试</span><br><span class="line">* SPI机制</span><br><span class="line">* RPC调用过程</span><br><span class="line">* RPC与HTTP两者的区别与联系</span><br><span class="line">* Spring cloud为啥使用HTTP而不是RPC？</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;分布式事务&lt;/h3&gt;</span><br><span class="line">* 2PC</span><br><span class="line">* 3PC</span><br><span class="line">* TCC</span><br><span class="line">* 可靠消息最终一致性</span><br><span class="line">* 最终一致性：MQ实现流程</span><br><span class="line">* 实现框架（Seata）</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;分布式缓存&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;分布式锁&lt;/h3&gt;</span><br><span class="line">* Redis如何实现？命令？</span><br><span class="line">* Zookeeper如何实现？</span><br><span class="line">* 获取锁失败时如何处理？</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;分布式会话(Session)&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;分库分表&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">系统设计</span><br><span class="line">------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">海量数据处理</span><br><span class="line">------</span><br><span class="line">解决问题常用方法与策略</span><br><span class="line">&gt; <span class="number">1.</span>分治策略(常用哈希分割)    </span><br><span class="line">  <span class="number">2.</span>位图法     </span><br><span class="line">  <span class="number">3.</span>前缀树     </span><br><span class="line">  <span class="number">4.</span>HashMap统计频次     </span><br><span class="line">  <span class="number">5.</span>堆排序       </span><br><span class="line"></span><br><span class="line">* 如何从大量的 URL 中找出相同的 URL？ </span><br><span class="line">&lt;h5&gt;给定 a、b 两个文件，各存放 <span class="number">50</span> 亿个 URL，每个 URL 各占 64B，内存限制是 4G。请找出 a、b 两个文件共同的 URL。&lt;/h5&gt;</span><br><span class="line"><span class="number">1.</span> 分治策略     </span><br><span class="line">    分而治之，进行哈希取余；    </span><br><span class="line">    对每个子文件进行 HashSet 统计。</span><br><span class="line"><span class="number">2.</span> 前缀树</span><br><span class="line">    利用字符串的公共前缀来降低存储成本，提高查询效率。  </span><br><span class="line">     </span><br><span class="line">* 如何从大量数据中找出高频词？</span><br><span class="line">    分而治之，进行哈希取余；    </span><br><span class="line">    使用 HashMap 统计频数；    </span><br><span class="line">    求解最大的 TopN 个，用小顶堆；求解最小的 TopN 个，用大顶堆。    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">数据结构&amp;&amp;算法&amp;&amp;设计模式</span><br><span class="line">------</span><br><span class="line">排序： </span><br><span class="line">    * 冒泡</span><br><span class="line">```java</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><pre><code>* 快速排序</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line">    * 堆排序</span><br><span class="line">     </span><br><span class="line">查找：</span><br><span class="line">    * 二分查找</span><br><span class="line">```java</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>链表：<br>    * 链表反转</p><p>设计模式：<br>    * 单例 </p><pre><code class="java"></code></pre><h2 id="项目经验"><a href="#项目经验" class="headerlink" title="项目经验"></a>项目经验</h2>]]></content>
      
      
      <categories>
          
          <category> hexo教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Interview </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux安装字体</title>
      <link href="/2019/04/18/linux%E5%AE%89%E8%A3%85%E5%AD%97%E4%BD%93/"/>
      <url>/2019/04/18/linux%E5%AE%89%E8%A3%85%E5%AD%97%E4%BD%93/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="linux安装字体"><a href="#linux安装字体" class="headerlink" title="linux安装字体"></a>linux安装字体</h1><p>安装fontconfig</p><blockquote><p>yum -y install fontconfig</p></blockquote><p>将windows字库导入到linux  &#x2F;usr&#x2F;share&#x2F;fonts&#x2F;windows目录下</p><blockquote><p>cp -rf windows &#x2F;usr&#x2F;share&#x2F;fonts&#x2F;</p></blockquote><p>更改这些字体库的权限：</p><blockquote><p> chmod 755 &#x2F;usr&#x2F;share&#x2F;fonts&#x2F;windows&#x2F;* </p></blockquote><p>然后进入Linux字体库：</p><blockquote><p>cd &#x2F;usr&#x2F;share&#x2F;fonts&#x2F;windows&#x2F;   </p></blockquote><p>接着根据当前目录下的字体建立scale文件<br>(没有要安装 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mkfontscale </span><br></pre></td></tr></table></figure><p>)</p><blockquote><p>mkfontscale    </p></blockquote><p>接着建立dir文件</p><blockquote><p>mkfontdir    </p></blockquote><p>运行</p><blockquote><p>fc-cache  </p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Linux </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux常见命令</title>
      <link href="/2019/03/18/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2019/03/18/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="linux常见命令"><a href="#linux常见命令" class="headerlink" title="linux常见命令"></a>linux常见命令</h1><p>查看文件夹内存：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">du -ah --max-depth=1</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">a表示显示目录下所有的文件和文件夹（不含子目录），h表示以人类能看懂的方式，max-depth表示目录的深度</span>   </span><br></pre></td></tr></table></figure><!-- npm install chromedriver --chromedriver_cdnurl=http://cdn.npm.taobao.org/dist/chromedriver --><p>sed替换变量<br>今天在写脚本时用到了sed，我用sed替换xml文件中的变量。一般在sed 中替换都用单引号，如下边</p><blockquote><p>sed -i ‘s&#x2F;10&#x2F;1000&#x2F;g’ test.xml         </p></blockquote><p>但是如果需要把1000改成变量，如</p><blockquote><p>sed -i ’s&#x2F;10&#x2F;$num&#x2F;g‘ test.xml</p></blockquote><p>这样就不成功。</p><p>此时需要把单引号改成双引号,如下边例子</p><blockquote><p>$num&#x3D;1000<br>sed -i “s&#x2F;10&#x2F;$num&#x2F;g” test.xml</p></blockquote><p>CentOS或者linux 上的IP丢失问题<br>Linux renew ip command(<a href="https://blog.csdn.net/llziseweiqiu/article/details/79210396">https://blog.csdn.net/llziseweiqiu/article/details/79210396</a>)</p><blockquote><p>$ sudo dhclient -r &#x2F;&#x2F;release ip 释放IP<br> $ sudo dhclient &#x2F;&#x2F;获取IP</p></blockquote><h1 id="给用户添加sudo权限"><a href="#给用户添加sudo权限" class="headerlink" title="给用户添加sudo权限"></a>给用户添加sudo权限</h1><h2 id="1、切换到超级用户"><a href="#1、切换到超级用户" class="headerlink" title="1、切换到超级用户"></a>1、切换到超级用户</h2><h2 id="2、修改sudoers文件内容"><a href="#2、修改sudoers文件内容" class="headerlink" title="2、修改sudoers文件内容"></a>2、修改sudoers文件内容</h2><p>a) 给文件sudoers 增加write权限</p><blockquote><p>  命令：#chmod u+w &#x2F;etc&#x2F;sudoers </p></blockquote><p>b) 给用户添加sudo权限</p><blockquote><p> 命令：#vim &#x2F;etc&#x2F;sudoers<br> xxxx   ALL&#x3D;(ALL)      ALL</p></blockquote><p> 保存退出:wq<br>c) 修改完毕将sudoers文件的写权限去掉(也可以不去掉)</p><blockquote><p>命令：#chmod u-w &#x2F;etc&#x2F;sudoers</p></blockquote><p> cpu</p><blockquote><p>more &#x2F;proc&#x2F;cpuinfo | grep “model name”</p></blockquote><p> 查看linux版本</p><blockquote><p>more &#x2F;etc&#x2F;redhat-release</p></blockquote><p> shell语法：</p><ol><li>if elif else fi<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="variable">$1x</span> == <span class="string">&quot;ab&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;you had enter ab&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$1x</span> == <span class="string">&quot;cd&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;you had enter cd&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;you had enter unexpected word&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></li></ol><p>应用重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash -ile</span></span><br><span class="line">PROJECT_NAME=saas-xxx-sit</span><br><span class="line">pid=`ps -ef |grep <span class="variable">$PROJECT_NAME</span> |grep -v <span class="string">&quot;grep&quot;</span> |awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>`</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$pid</span> ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;App  is  running  and pid=<span class="variable">$pid</span>, restart it&quot;</span></span><br><span class="line"><span class="built_in">kill</span> -9 <span class="variable">$pid</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">nohup</span> java -jar /app/services/saas-xxx-sit/saas-xxx-0.0.1-SNAPSHOT.jar -Dorg.terracotta.quartz.skipUpdateCheck=<span class="literal">true</span> &gt; /app/logs/saas-xxx-sit/saas-xxx-sit.log 2&gt;&amp;1 &amp;</span><br><span class="line">ps -aux|grep saas-xxx-sit</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Linux </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深入理解java虚拟机总结</title>
      <link href="/2019/01/23/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3java%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%80%BB%E7%BB%93/"/>
      <url>/2019/01/23/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3java%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p><img src="/" alt="Mou_icon"></p><span id="more"></span><h2 id="一、运行时数据区域"><a href="#一、运行时数据区域" class="headerlink" title="一、运行时数据区域"></a>一、运行时数据区域</h2><p>Java虚拟机管理的内存包括几个运行时数据内存：方法区、虚拟机栈、本地方法栈、堆、程序计数器，其中方法区和堆是由线程共享的数据区，其他几个是线程隔离的数据区</p><p>1.1 程序计数器</p><p>程序计数器是一块较小的内存，他可以看做是当前线程所执行的行号指示器。字节码解释器工作的时候就是通过改变这个计数器的值来选取下一条需要执行的字节码的指令，分支、循环、跳转、异常处理、线程恢复等基础功能都需要依赖这个计数器来完成。如果线程正在执行的是一个Java方法，这个计数器记录的是正在执行的虚拟机字节码指令的地址；如果正在执行的是Native方法，这个计数器则为空。此内存区域是唯一一个在Java虚拟机规范中没有规定任何OutOfMemotyError情况的区域</p><p>1.2 Java虚拟机栈</p><p>虚拟机栈描述的是Java方法执行的内存模型：每个方法在执行的同时都会创建一个栈帧用于储存局部变量表、操作数栈、动态链接、方法出口等信息。每个方法从调用直至完成的过程，就对应着一个栈帧在虚拟机栈中入栈到出栈的过程。</p><p>栈内存就是虚拟机栈，或者说是虚拟机栈中局部变量表的部分</p><p>局部变量表存放了编辑期可知的各种基本数据类型（boolean、byte、char、short、int、float、long、double）、对象引用（refrence）类型和returnAddress类型（指向了一条字节码指令的地址）</p><p>其中64位长度的long和double类型的数据会占用两个局部变量空间，其余的数据类型只占用1个。</p><p>Java虚拟机规范对这个区域规定了两种异常状况：如果线程请求的栈深度大于虚拟机所允许的深度，将抛出StackOverflowError异常。如果虚拟机扩展时无法申请到足够的内存，就会跑出OutOfMemoryError异常</p><p>1.3 本地方法栈</p><p>本地方法栈和虚拟机栈发挥的作用是非常类似的，他们的区别是虚拟机栈为虚拟机执行Java方法（也就是字节码）服务，而本地方法栈则为虚拟机使用到的Native方法服务</p><p>本地方法栈区域也会抛出StackOverflowError和OutOfMemoryErroy异常</p><p>1.4 Java堆</p><p>堆是Java虚拟机所管理的内存中最大的一块。Java堆是被所有线程共享的一块内存区域，在虚拟机启动的时候创建，此内存区域的唯一目的是存放对象实例，几乎所有的对象实例都在这里分配内存。所有的对象实例和数组都在堆上分配</p><p>Java堆是垃圾收集器管理的主要区域。Java堆细分为新生代和老年代</p><p>不管怎样，划分的目的都是为了更好的回收内存，或者更快地分配内存</p><p>Java堆可以处于物理上不连续的内存空间中，只要逻辑上是连续的即可。如果在堆中没有完成实例分配，并且堆也无法在扩展时将会抛出OutOfMemoryError异常</p><p>1.5 方法区</p><p>方法区它用于储存已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据</p><p>除了Java堆一样不需要连续的内存和可以选择固定大小或者可扩展外，还可以选择不实现垃圾收集。这个区域的内存回收目标主要是针对常量池的回收和对类型的卸载</p><p>当方法区无法满足内存分配需求时，将抛出OutOfMemoryErroy异常</p><p>1.6 运行时常量池</p><p>它是方法区的一部分。Class文件中除了有关的版本、字段、方法、接口等描述信息外、还有一项信息是常量池，用于存放编辑期生成的各种字面量和符号引用，这部分内容将在类加载后进入方法区的运行时常量池中存放</p><p>Java语言并不要求常量一定只有编辑期才能产生，也就是可能将新的常量放入池中，这种特性被开发人员利用得比较多的便是String类的intern()方法</p><h2 id="当常量池无法再申请到内存时会抛出OutOfMemoryError异常二、hotspot虚拟机对象"><a href="#当常量池无法再申请到内存时会抛出OutOfMemoryError异常二、hotspot虚拟机对象" class="headerlink" title="当常量池无法再申请到内存时会抛出OutOfMemoryError异常二、hotspot虚拟机对象"></a>当常量池无法再申请到内存时会抛出OutOfMemoryError异常<br>二、hotspot虚拟机对象</h2><p>2.1 对象的创建</p><p>1）.检查 </p><p>虚拟机遇到一条new指令时，首先将去检查这个指令的参数是否能在常量池中定位到一个类的符号引用，并且检查这个符号引用代表的类是否已经被加载、解析和初始化过。如果没有，那必须先执行相应的类加载过程</p><p>2）.分配内存 </p><p>接下来将为新生对象分配内存，为对象分配内存空间的任务等同于把一块确定的大小的内存从Java堆中划分出来。</p><p>假设Java堆中内存是绝对规整的，所有用过的内存放在一遍，空闲的内存放在另一边，中间放着一个指针作为分界点的指示器，那所分配内存就仅仅是把那个指针指向空闲空间那边挪动一段与对象大小相等的距离，这个分配方式叫做“指针碰撞”</p><p>如果Java堆中的内存并不是规整的，已使用的内存和空闲的内存相互交错，那就没办法简单地进行指针碰撞了，虚拟机就必须维护一个列表，记录上哪些内存块是可用的，在分配的时候从列表中找到一块足够大的空间划分给对象实例，并更新列表上的记录，这种分配方式成为“空闲列表”</p><p>选择那种分配方式由Java堆是否规整决定，而Java堆是否规整又由所采用的垃圾收集器是否带有压缩整理功能决定。</p><p>3）. Init</p><p>执行new指令之后会接着执行Init方法，进行初始化，这样一个对象才算产生出来</p><p>2.2 对象的内存布局</p><p>在HotSpot虚拟机中，对象在内存中储存的布局可以分为3块区域：对象头、实例数据和对齐填充</p><p>对象头包括两部分：</p><p>1). 储存对象自身的运行时数据，如哈希码、GC分带年龄、锁状态标志、线程持有的锁、偏向线程ID、偏向时间戳</p><p>2). 另一部分是指类型指针，即对象指向它的类元数据的指针，虚拟机通过这个指针来确定这个对象是那个类的实例</p><p>2.3 对象的访问定位<br>1).使用句柄访问<br>Java堆中将会划分出一块内存来作为句柄池，reference中存储的就是对象的句柄地址，而句柄中包含了对象实例数据与类型数据各自的具体地址<br>优势:reference中存储的是稳点的句柄地址,在对象被移动(垃圾收集时移动对象是非常普遍的行为)时只会改变句柄中的实例数据指针，而reference本身不需要修改</p><p>2).使用直接指针访问<br>Java堆对象的布局就必须考虑如何访问类型数据的相关信息,而refreence中存储的直接就是对象的地址<br>优势：速度更快，节省了一次指针定位的时间开销，由于对象的访问在Java中非常频繁，因此这类开销积少成多后也是一项非常可观的执行成本</p><h2 id="三、OutOfMemoryError-异常"><a href="#三、OutOfMemoryError-异常" class="headerlink" title="三、OutOfMemoryError 异常"></a>三、OutOfMemoryError 异常</h2><p>3.1 Java堆溢出</p><p>Java堆用于存储对象实例，只要不断的创建对象，并且保证GCRoots到对象之间有可达路径来避免垃圾回收机制清除这些对象，那么在数量到达最大堆的容量限制后就会产生内存溢出异常</p><p>如果是内存泄漏，可进一步通过工具查看泄漏对象到GC Roots的引用链。于是就能找到泄露对象是通过怎样的路径与GC Roots相关联并导致垃圾收集器无法自动回收它们的。掌握了泄漏对象的类型信息及GC Roots引用链的信息，就可以比较准确地定位出泄漏代码的位置</p><p>如果不存在泄露，换句话说，就是内存中的对象确实都还必须存活着，那就应当检查虚拟机的堆参数（-Xmx与-Xms），与机器物理内存对比看是否还可以调大，从代码上检查是否存在某些对象生命周期过长、持有状态时间过长的情况，尝试减少程序运行期的内存消耗</p><p>3.2 虚拟机栈和本地方法栈溢出</p><p>对于HotSpot来说，虽然-Xoss参数（设置本地方法栈大小）存在，但实际上是无效的，栈容量只由-Xss参数设定。关于虚拟机栈和本地方法栈，在Java虚拟机规范中描述了两种异常：</p><p>如果线程请求的栈深度大于虚拟机所允许的最大深度，将抛出StackOverflowError</p><p>如果虚拟机在扩展栈时无法申请到足够的内存空间，则抛出OutOfMemoryError异常</p><p>在单线程下，无论由于栈帧太大还是虚拟机栈容量太小，当内存无法分配的时候，虚拟机抛出的都是StackOverflowError异常</p><p>如果是多线程导致的内存溢出，与栈空间是否足够大并不存在任何联系，这个时候每个线程的栈分配的内存越大，反而越容易产生内存溢出异常。解决的时候是在不能减少线程数或更换64为的虚拟机的情况下，就只能通过减少最大堆和减少栈容量来换取更多的线程</p><p>3.3 方法区和运行时常量池溢出</p><p>String.intern()是一个Native方法，它的作用是：如果字符串常量池中已经包含一个等于此String对象的字符串，则返回代表池中这个字符串的String对象；否则，将此String对象包含的字符串添加到常量池中，并且返回此String对象的引用</p><p>由于常量池分配在永久代中，可以通过-XX:PermSize和-XX:MaxPermSize限制方法区大小，从而间接限制其中常量池的容量。</p><p>Intern():</p><p>JDK1.6 intern方法会把首次遇到的字符串实例复制到永久代，返回的也是永久代中这个字符串实例的引用，而由StringBuilder创建的字符串实例在Java堆上，所以必然不是一个引用</p><p>JDK1.7 intern()方法的实现不会再复制实例，只是在常量池中记录首次出现的实例引用，因此intern()返回的引用和由StringBuilder创建的那个字符串实例是同一个</p><h2 id="四、垃圾收集"><a href="#四、垃圾收集" class="headerlink" title="四、垃圾收集"></a>四、垃圾收集</h2><p>程序计数器、虚拟机栈、本地方法栈3个区域随线程而生，随线程而灭，在这几个区域内就不需要过多考虑回收的问题，因为方法结束或者线程结束时，内存自然就跟随着回收了</p><p>1.判断对象存活</p><p>4.1.1 引用计数器法</p><p>给对象添加一个引用计数器，每当由一个地方引用它时，计数器值就加1；当引用失效时，计数器值就减1；任何时刻计数器为0的对象就是不可能再被使用的</p><p>4.1.2 可达性分析算法</p><p>通过一系列的成为“GC Roots”的对象作为起始点，从这些节点开始向下搜索，搜索所走过的路径成为引用链，当一个对象到GC ROOTS没有任何引用链相连时，则证明此对象时不可用的</p><p>Java语言中GC Roots的对象包括下面几种：</p><p>1.虚拟机栈（栈帧中的本地变量表）中引用的对象</p><p>2.方法区中类静态属性引用的对象</p><p>3.方法区中常量引用的对象</p><p>4.本地方法栈JNI（Native方法）引用的对象</p><p>2.引用</p><p>强引用就是在程序代码之中普遍存在的，类似Object obj &#x3D; new Object() 这类的引用，只要强引用还存在，垃圾收集器永远不会回收掉被引用的对象</p><p>软引用用来描述一些还有用但并非必须的元素。对于它在系统将要发生内存溢出异常之前，将会把这些对象列进回收范围之中进行第二次回收，如果这次回收还没有足够的内存才会抛出内存溢出异常</p><p>弱引用用来描述非必须对象的，但是它的强度比软引用更弱一些，被引用关联的对象只能生存到下一次垃圾收集发生之前，当垃圾收集器工作时，无论当前内存是否足够都会回收掉只被弱引用关联的对象</p><p>虚引用的唯一目的就是能在这个对象被收集器回收时收到一个系统通知</p><p>3.Finalize方法</p><p>任何一个对象的finalize()方法都只会被系统自动调用一次，如果对象面临下一次回收，它的finalize()方法不会被再次执行，因此第二段代码的自救行动失败了</p><p>4.3.1 回收方法区</p><p>永久代的垃圾收集主要回收两部分内容：废弃常量和无用的类</p><p>废弃常量：假如一个字符串abc已经进入了常量池中，如果当前系统没有任何一个String对象abc，也就是没有任何Stirng对象引用常量池的abc常量，也没有其他地方引用的这个字面量，这个时候发生内存回收这个常量就会被清理出常量池</p><p>无用的类：</p><p>1.该类所有的实例都已经被回收，就是Java堆中不存在该类的任何实例</p><p>2.加载该类的ClassLoader已经被回收</p><p>3.该类对用的java.lang.Class对象没有在任何地方被引用，无法再任何地方通过反射访问该类的方法</p><p>4.垃圾收集算法</p><p>4.4.1 标记—清除算法</p><p>算法分为标记和清除两个阶段：首先标记出所有需要回收的对象，在标记完成后统一回收所有被标记的对象、</p><p>不足:一个是效率问题，标记和清除两个过程的效率都不高；另一个是空间问题，标记清楚之后会产生大量不连续的内存碎片，空间碎片太多可能会导致以后再程序运行过程中需要分配较大的对象时，无法找到足够的连续内存而不得不提前触发另一次垃圾收集动作</p><p>4.4.2 复制算法</p><p>他将可用内存按照容量划分为大小相等的两块，每次只使用其中的一块。当这块的内存用完了，就将还存活着的对象复制到另外一块上面，然后再把已使用过的内存空间一次清理掉。这样使得每次都是对整个半区进行内存回收，内存分配时也就不用考虑内存碎片等复杂情况，只要移动堆顶指针，按顺序分配内存即可</p><p>不足：将内存缩小为了原来的一半</p><p>实际中我们并不需要按照1:1比例来划分内存空间，而是将内存分为一块较大的Eden空间和两块较小的Survivor空间，每次使用Eden和其中一块Survivor</p><p>当另一个Survivor空间没有足够空间存放上一次新生代收集下来的存活对象时，这些对象将直接通过分配担保机制进入老年代</p><p>4.4.3 标记整理算法</p><p>让所有存活的对象都向一端移动，然后直接清理掉端边界以外的内存</p><p>4.4.4 分代收集算法</p><p>只是根据对象存活周期的不同将内存划分为几块。一般是把java堆分为新生代和老年代，这样就可以根据各个年代的特点采用最适当的收集算法。在新生代中，每次垃圾收集时都发现有大批对象死去，只有少量存活，那就选用复制算法，只需要付出少量存活对象的复制成本就可以完成收集。而老年代中因为对象存活率高、没有额外空间对它进行分配担保，就必须使用标记清理或者标记整理算法来进行回收</p><h2 id="5-垃圾收集器"><a href="#5-垃圾收集器" class="headerlink" title="5.垃圾收集器"></a>5.垃圾收集器</h2><p>a)Serial收集器：</p><p>这个收集器是一个单线程的收集器，但它的单线程的意义不仅仅说明它会只使用一个COU或一条收集线程去完成垃圾收集工作，更重要的是它在进行垃圾收集时，必须暂停其他所有的工作线程，直到它手机结束</p><p>b)ParNew 收集器：</p><p>Serial收集器的多线程版本，除了使用了多线程进行收集之外，其余行为和Serial收集器一样</p><p>并行：指多条垃圾收集线程并行工作，但此时用户线程仍然处于等待状态</p><p>并发：指用户线程与垃圾收集线程同时执行（不一定是并行的，可能会交替执行），用户程序在继续执行，而垃圾收集程序运行于另一个CPU上</p><p>c)Parallel Scavenge </p><p>收集器是一个新生代收集器，它是使用复制算法的收集器，又是并行的多线程收集器。</p><p>吞吐量：就是CPU用于运行用户代码的时间与CPU总消耗时间的比值。即吞吐量&#x3D;运行用户代码时间&#x2F;（运行用户代码时间+垃圾收集时间）</p><p>d)Serial Old 收集器：</p><p>是Serial收集器的老年代版本,是一个单线程收集器，使用标记整理算法</p><p>e)Parallel Old 收集器：</p><p>Parallel Old是Paraller Seavenge收集器的老年代版本，使用多线程和标记整理算法</p><p>f)CMS收集器：</p><p>CMS收集器是基于标记清除算法实现的，整个过程分为4个步骤：</p><p>1.初始标记2.并发标记3.重新标记4.并发清除</p><p>优点：并发收集、低停顿</p><p>缺点：</p><p>1.CMS收集器对CPU资源非常敏感，CMS默认启动的回收线程数是（CPU数量+3）&#x2F;4，</p><p>2.CMS收集器无法处理浮动垃圾，可能出现Failure失败而导致一次Full G场地产生</p><p>3.CMS是基于标记清除算法实现的</p><p>g)G1收集器：</p><p>它是一款面向服务器应用的垃圾收集器</p><p>1.并行与并发：利用多CPU缩短STOP-The-World停顿的时间</p><p>2.分代收集</p><p>3.空间整合：不会产生内存碎片</p><p>4.可预测的停顿</p><p>运作方式：初始标记，并发标记，最终标记，筛选回收</p><p>6.内存分配与回收策略</p><p>4.6.1 对象优先在Eden分配：</p><p>大多数情况对象在新生代Eden区分配，当Eden区没有足够空间进行分配时，虚拟机将发起一次Minor GC</p><p>4.6.2 大对象直接进入老年代：</p><p>所谓大对象就是指需要大量连续内存空间的Java对象，最典型的大对象就是那种很长的字符串以及数组。这样做的目的是避免Eden区及两个Servivor之间发生大量的内存复制</p><p>4.6.3长期存活的对象将进入老年代</p><p>如果对象在Eden区出生并且尽力过一次Minor GC后仍然存活，并且能够被Servivor容纳，将被移动到Servivor空间中，并且把对象年龄设置成为1.对象在Servivor区中每熬过一次Minor GC，年龄就增加1岁，当它的年龄增加到一定程度（默认15岁），就将会被晋级到老年代中</p><p>4.6.4动态对象年龄判定</p><p>为了更好地适应不同程序的内存状况，虚拟机并不是永远地要求对象的年龄必须达到了MaxTenuringThreshold才能晋级到老年代，如果在Servivor空间中相同年龄所有对象的大小总和大于Survivor空间的一半，年龄大于或等于该年龄的对象就可以直接进入到老年代，无须登到MaxTenuringThreshold中要求的年龄</p><p>4.6.4 空间分配担保：</p><p>在发生Minor GC 之前，虚拟机会检查老年代最大可 用的连续空间是否大于新生代所有对象总空间，如果这个条件成立，那么Minor DC可以确保是安全的。如果不成立，则虚拟机会查看HandlePromotionFailure设置值是否允许担保失败。如果允许那么会继续检查老年代最大可用的连续空间是否大于晋级到老年代对象的平均大小，如果大于，将尝试进行一次Minor GC，尽管这次MinorGC 是有风险的：如果小于，或者HandlePromotionFailure设置不允许冒险，那这时也要改为进行一次Full GC</p><h2 id="五、虚拟机类加载机制"><a href="#五、虚拟机类加载机制" class="headerlink" title="五、虚拟机类加载机制"></a>五、虚拟机类加载机制</h2><p>虚拟机吧描述类的数据从Class文件加载到内存，并对数据进行校验、转换解析和初始化，最终形成可以被虚拟机直接使用的Java类型，这就是虚拟机的类加载机制</p><p>在Java语言里面，类型的加载。连接和初始化过程都是在程序运行期间完成的</p><p>5.1 类加载的时机</p><p>类被加载到虚拟机内存中开始，到卸载为止，整个生命周期包括：加载、验证、准备、解析、初始化、使用和卸载7个阶段</p><p>加载、验证、准备、初始化和卸载这5个阶段的顺序是确定的，类的加载过程必须按照这种顺序按部就班地开始，而解析阶段则不一定：它在某些情况下可以再初始化阶段之后再开始，这个是为了支持Java语言运行时绑定（也成为动态绑定或晚期绑定）</p><p>虚拟机规范规定有且只有5种情况必须立即对类进行初始化：</p><p>1.遇到new、getstatic、putstatic或invokestatic这4条字节码指令时，如果类没有进行过初始化，则需要触发其初始化。生成这4条指令的最常见的Java代码场景是：使用new关键字实例化对象的时候、读取或设置一个类的静态字段（被final修饰、已在编译期把结果放入常量池的静态字段除外）的时候，以及调用一个类的静态方法的时候</p><p>2.使用java.lang.reflect包的方法对类进行反射调用的时候，如果类没有进行过初始化，则需要先触发其初始化</p><p>3.当初始化一个类的时候，如果发现其父类还没有进行过初始化，则需要先触发其父类的初始化</p><p>4.当虚拟机启动时候，用户需要指定一个要执行的主类（包含main()方法的那个类），虚拟机会先初始化这个主类</p><p>5.当使用JDK1.7的动态语言支持时，如果一个java.lang.invoke.MethodHandle实例最后的解析结果REF_getStatic、REF_putStatic、REF_invokeStatic的方法句柄，并且这个方法句柄所对应的类没有进行过初始化，则需要先触发其初始化</p><p>被动引用：</p><p>1.通过子类引用父类的静态字段，不会导致子类初始化</p><pre><code>2.通过数组定义来引用类，不会触发此类的初始化</code></pre><p>3.常量在编译阶段会存入调用类的常量池中，本质上并没有直接引用到定义常量的类，因此不会触发定义常量的类的初始化</p><p>接口的初始化：接口在初始化时，并不要求其父接口全部完成类初始化，只有在正整使用到父接口的时候（如引用接口中定义的常量）才会初始化</p><p>5.2 类加载的过程</p><p>5.2.1 加载</p><p>1)通过一个类的全限定名类获取定义此类的二进制字节流</p><p>2)将这字节流所代表的静态存储结构转化为方法区运行时数据结构</p><p>3)在内存中生成一个代表这个类的java.lang.Class对象，作为方法区这个类的各种数据的访问入口</p><p>怎么获取二进制字节流？</p><p>1)从ZIP包中读取，这很常见，最终成为日后JAR、EAR、WAR格式的基础</p><p>2)从网络中获取，这种场景最典型的应用就是Applet</p><p>3)运行时计算生成，这种常见使用得最多的就是动态代理技术</p><p>4)由其他文件生成，典型场景就是JSP应用</p><p>5)从数据库中读取，这种场景相对少一些（中间件服务器）<br>数组类本身不通过类加载器创建，它是由Java虚拟机直接创建的</p><p>数组类的创建过程遵循以下规则：</p><p>1)如果数组的组件类型(指的是数组去掉一个维度的类型)是引用类型，那就递归采用上面的加载过程去加载这个组件类型，数组C将在加载该组件类型的类加载器的类名称空间上被标识</p><p>2)如果数组的组件类型不是引用类型(列如int[]组数)，Java虚拟机将会把数组C标识为与引导类加载器关联</p><p>3)数组类的可见性与它的组件类型的可见性一致，如果组件类型不是引用类型，那数组类的可见性将默认为public</p><p>5.2.2 验证</p><p>验证阶段会完成下面4个阶段的检验动作：文件格式验证，元数据验证，字节码验证，符号引用验证</p><p>1.文件格式验证</p><p>第一阶段要验证字节流是否符合Class文件格式的规范，并且能被当前版本的虚拟机处理。这一阶段可能包括：</p><p>1.是否以魔数oxCAFEBABE开头</p><p>2.主、次版本号是否在当前虚拟机处理范围之内</p><p>3.常量池的常量中是否有不被支持的常量类型(检查常量tag标志)</p><p>4.指向常量的各种索引值中是否有指向不存在的常量或不符合类型的常量</p><p>5.CONSTANT_Itf8_info 型的常量中是否有不符合UTF8编码的数据</p><p>6.Class文件中各个部分及文件本身是否有被删除的或附加的其他信息</p><p>这个阶段的验证时基于二进制字节流进行的，只有通过类这个阶段的验证后，字节流才会进入内存的方法区进行存储，所以后面的3个验证阶段全部是基于方法区的存储结构进行的，不会再直接操作字节流</p><p>2.元数据验证</p><p>1.这个类是否有父类(除了java.lang.Object之外,所有的类都应当有父类)</p><p>2.这个类的父类是否继承了不允许被继承的类（被final修饰的类）</p><p>3.如果这个类不是抽象类，是否实现类其父类或接口之中要求实现的所有方法</p><p>4.类中的字段、方法是否与父类产生矛盾(列如覆盖类父类的final字段,或者出现不符合规则的方法重载，列如方法参数都一致，但返回值类型却不同等)</p><p>第二阶段的主要目的是对类元数据信息进行语义校验，保证不存在不符合Java语言规范的元数据信息</p><p>3.字节码验证</p><p>第三阶段是整个验证过程中最复杂的一个阶段，主要目的似乎通过数据流和控制流分析，确定程序语言是合法的、符合逻辑的。在第二阶段对元数据信息中的数据类型做完校验后，这个阶段将对类的方法体进行校验分析，保证被校验类的方法在运行时不会做出危害虚拟机安全的事件。</p><p>1.保证任意时刻操作数栈的数据类型与指令代码序列都能配合工作，列如，列如在操作数栈放置类一个int类型的数据，使用时却按long类型来加载入本地变量表中</p><p>2.保证跳转指令不会跳转到方法体以外的字节码指令上</p><p>3.保证方法体中的类型转换时有效的，列如可以把一个子类对象赋值给父类数据类型，这个是安全的，但是吧父类对象赋值给子类数据类型，甚至把对象赋值给与它毫无继承关系、完全不相干的一个数据类型，则是危险和不合法的</p><p>4.符号引用验证</p><p>发生在虚拟机将符号引用转化为直接引用的时候，这个转化动作将在连接的第三阶段——解析阶段中发生。</p><p>1.符号引用中通过字符串描述的全限定名是否能找到相对应的类</p><p>2.在指定类中是否存在符合方法的字段描述符以及简单名称所描述的方法和字段</p><p>3.符号引用中的类、字段、方法的访问性是否可被当前类访问</p><p>对于虚拟机的类加载机制来说，验证阶段是非常重要的，但是不一定必要（因为对程序运行期没有影响）的阶段。如果全部代码都已经被反复使用和验证过，那么在实施阶段就可以考虑使用Xverify：none参数来关闭大部分的类验证措施，以缩短虚拟机类加载的时间</p><p>5.2.3 准备</p><p>准备阶段是正式为类变量分配内存并设置类变量初始值的阶段，这些变量都在方法区中进行分配。这个时候进行内存分配的仅包括类变量(被static修饰的变量)，而不包括实例变量，实例变量将会在对象实例化时随着对象一起分配在Java堆中。其次，这里说的初始值通常下是数据类型的零值。</p><p>假设public static int value &#x3D; 123；</p><p>那变量value在准备阶段过后的初始值为0而不是123，因为这时候尚未开始执行任何Java方法，而把value赋值为123的putstatic指令是程序被编译后，存放于类构造器<clinit>()方法之中，所以把value赋值为123的动作将在初始化阶段才会执行，但是如果使用final修饰，则在这个阶段其初始值设置为123</p><p>5.2.4解析</p><p>解析阶段是虚拟机将常量池内符号引用替换为直接引用的过</p><p>5.2.5 初始化</p><p>类的初始化阶段是类加载过程的最后一步，前面的类加载过程中，除了在加载阶段用户应用程序可以通过自定义类加载器参与之外，其余动作完全由虚拟机主导和控制。到了初始化阶段，才正真开始执行类中定义的Java程序代码(或者说是字节码)</p><p>5.3 类的加载器</p><p>5.3.1 双亲委派模型：</p><p>只存在两种不同的类加载器：启动类加载器（Bootstrap ClassLoader），使用C++实现，是虚拟机自身的一部分。另一种是所有其他的类加载器，使用JAVA实现，独立于JVM，并且全部继承自抽象类java.lang.ClassLoader.</p><p>启动类加载器（Bootstrap ClassLoader），负责将存放在&lt;JAVA+HOME&gt;\lib目录中的，或者被-Xbootclasspath参数所制定的路径中的，并且是JVM识别的（仅按照文件名识别，如rt.jar，如果名字不符合，即使放在lib目录中也不会被加载），加载到虚拟机内存中，启动类加载器无法被JAVA程序直接引用。</p><p>扩展类加载器，由sun.misc.Launcher$ExtClassLoader实现，负责加载<JAVA_HOME>\lib\ext目录中的，或者被java.ext.dirs系统变量所指定的路径中的所有类库，开发者可以直接使用扩展类加载器。</p><p>应用程序类加载器（Application ClassLoader），由sun.misc.Launcher$AppClassLoader来实现。由于这个类加载器是ClassLoader中的getSystemClassLoader()方法的返回值，所以一般称它为系统类加载器。负责加载用户类路径（ClassPath）上所指定的类库，开发者可以直接使用这个类加载器，如果应用程序中没有自定义过自己的类加载器，一般情况下这个就是程序中默认的类加载器。</p><p>这张图表示类加载器的双亲委派模型（Parents Delegation model）. 双亲委派模型要求除了顶层的启动加载类外，其余的类加载器都应当有自己的父类加载器。，这里类加载器之间的父子关系一般不会以继承的关系来实现，而是使用组合关系来复用父类加载器的代码。</p><p>5.3.2双亲委派模型的工作过程是：</p><p>如果一个类加载器收到了类加载的请求，它首先不会自己去尝试加载这个类，而是把这个请求委派给父类加载器去完成，每一个层次的类加载器都是如此，因此所有的加载请求最终都是应该传送到顶层的启动类加载器中，只有当父类加载器反馈自己无法完成这个加载请求（它的搜索范围中没有找到所需的类）时，子加载器才会尝试自己去加载。</p><p>5.3.3这样做的好处就是：</p><p>Java类随着它的类加载器一起具备了一种带有优先级的层次关系。例如类java.lang.Object,它存放在rt.jar中，无论哪一个类加载器要加载这个类，最终都是委派给处于模型最顶端的启动类加载器进行加载，因此Object类在程序的各种类加载器环境中都是同一个类。相反，如果没有使用双亲委派模型，由各个类加载器自行去加载的话，如果用户自己编写了一个称为java.lang.object的类，并放在程序的ClassPath中，那系统中将会出现多个不同的Object类，Java类型体系中最基础的行为也就无法保证，应用程序也将会变得一片混乱</p><p>就是保证某个范围的类一定是被某个类加载器所加载的，这就保证在程序中同一个类不会被不同的类加载器加载。这样做的一个主要的考量，就是从安全层面上，杜绝通过使用和JRE相同的类名冒充现有JRE的类达到替换的攻击方式</p><h2 id="六、Java内存模型与线程"><a href="#六、Java内存模型与线程" class="headerlink" title="六、Java内存模型与线程"></a>六、Java内存模型与线程</h2><p>6.1内存间的交互操作</p><p>关于主内存与工作内存之间的具体交互协议，即一个变量如何从主内存拷贝到工作内存、如何从工作内存同步到主内存之间的实现细节，Java内存模型定义了以下八种操作来完成：</p><p>lock（锁定）：作用于主内存的变量，把一个变量标识为一条线程独占状态。</p><p>unlock（解锁）：作用于主内存变量，把一个处于锁定状态的变量释放出来，释放后的变量才可以被其他线程锁定。</p><p>read（读取）：作用于主内存变量，把一个变量值从主内存传输到线程的工作内存中，以便随后的load动作使用</p><p>load（载入）：作用于工作内存的变量，它把read操作从主内存中得到的变量值放入工作内存的变量副本中。</p><p>use（使用）：作用于工作内存的变量，把工作内存中的一个变量值传递给执行引擎，每当虚拟机遇到一个需要使用变量的值的字节码指令时将会执行这个操作。</p><p>assign（赋值）：作用于工作内存的变量，它把一个从执行引擎接收到的值赋值给工作内存的变量，每当虚拟机遇到一个给变量赋值的字节码指令时执行这个操作。</p><p>store（存储）：作用于工作内存的变量，把工作内存中的一个变量的值传送到主内存中，以便随后的write的操作。</p><p>write（写入）：作用于主内存的变量，它把store操作从工作内存中一个变量的值传送到主内存的变量中。</p><p>　　如果要把一个变量从主内存中复制到工作内存，就需要按顺寻地执行read和load操作，如果把变量从工作内存中同步回主内存中，就要按顺序地执行store和write操作。Java内存模型只要求上述操作必须按顺序执行，而没有保证必须是连续执行。也就是read和load之间， store和write之间是可以插入其他指令的，如对主内存中的变量a、b进行访问时，可能的顺序是read a，read b，load b， load a。</p><p>Java内存模型还规定了在执行上述八种基本操作时，必须满足如下规则：</p><p>不允许read和load、store和write操作之一单独出现</p><p>不允许一个线程丢弃它的最近assign的操作，即变量在工作内存中改变了之后必须同步到主内存中。</p><p>不允许一个线程无原因地（没有发生过任何assign操作）把数据从工作内存同步回主内存中。</p><p>一个新的变量只能在主内存中诞生，不允许在工作内存中直接使用一个未被初始化（load或assign）的变量。即就是对一个变量实施use和store操作之前，必须先执行过了assign和load操作。</p><p>一个变量在同一时刻只允许一条线程对其进行lock操作，但lock操作可以被同一条线程重复执行多次，多次执行lock后，只有执行相同次数的unlock操作，变量才会被解锁。lock和unlock必须成对出现</p><p>如果对一个变量执行lock操作，将会清空工作内存中此变量的值，在执行引擎使用这个变量前需要重新执行load或assign操作初始化变量的值</p><p>如果一个变量事先没有被lock操作锁定，则不允许对它执行unlock操作；也不允许去unlock一个被其他线程锁定的变量。</p><p>对一个变量执行unlock操作之前，必须先把此变量同步到主内存中（执行store和write操作）。</p><p>6.2 重排序</p><p>在执行程序时为了提高性能，编译器和处理器经常会对指令进行重排序。重排序分成三种类型：</p><p>1.编译器优化的重排序。编译器在不改变单线程程序语义放入前提下，可以重新安排语句的执行顺序。</p><p>2.指令级并行的重排序。现代处理器采用了指令级并行技术来将多条指令重叠执行。如果不存在数据依赖性，处理器可以改变语句对应机器指令的执行顺序。</p><p>3.内存系统的重排序。由于处理器使用缓存和读写缓冲区，这使得加载和存储操作看上去可能是在乱序执行。</p><p>从Java源代码到最终实际执行的指令序列，会经过下面三种重排序：</p><p>为了保证内存的可见性，Java编译器在生成指令序列的适当位置会插入内存屏障指令来禁止特定类型的处理器重排序。Java内存模型把内存屏障分为LoadLoad、LoadStore、StoreLoad和StoreStore四种：</p><p>6.3 对于volatile型变量的特殊规则</p><p>当一个变量定义为volatile之后，它将具备两种特性：</p><p>第一：保证此变量对所有线程的可见性，这里的可见性是指当一条线程修改了这个变量的值，新值对于其他线程来说是可以立即得知的。普通变量的值在线程间传递需要通过主内存来完成</p><p>由于valatile只能保证可见性，在不符合一下两条规则的运算场景中，我们仍要通过加锁来保证原子性</p><p>1.运算结果并不依赖变量的当前值，或者能够确保只有单一的线程修改变量的值。</p><p>2.变量不需要与其他的状态变量共同参与不变约束</p><p>第二：禁止指令重排序，普通的变量仅仅会保证在该方法的执行过程中所有依赖赋值结果的地方都能获取到正确的结果，而不能保证变量赋值操作的顺序与程序代码中执行顺序一致，这个就是所谓的线程内表现为串行的语义</p><p>Java内存模型中对volatile变量定义的特殊规则。假定T表示一个线程，V和W分别表示两个volatile变量，那么在进行read、load、use、assign、store、write操作时需要满足如下的规则：</p><p>1.只有当线程T对变量V执行的前一个动作是load的时候，线程T才能对变量V执行use动作；并且，只有当线程T对变量V执行的后一个动作是use的时候，线程T才能对变量V执行load操作。线程T对变量V的use操作可以认为是与线程T对变量V的load和read操作相关联的，必须一起连续出现。这条规则要求在工作内存中，每次使用变量V之前都必须先从主内存刷新最新值，用于保证能看到其它线程对变量V所作的修改后的值。</p><p>2.只有当线程T对变量V执行的前一个动是assign的时候，线程T才能对变量V执行store操作；并且，只有当线程T对变量V执行的后一个动作是store操作的时候，线程T才能对变量V执行assign操作。线程T对变量V的assign操作可以认为是与线程T对变量V的store和write操作相关联的，必须一起连续出现。这一条规则要求在工作内存中，每次修改V后都必须立即同步回主内存中，用于保证其它线程可以看到自己对变量V的修改。</p><p>3.假定操作A是线程T对变量V实施的use或assign动作，假定操作F是操作A相关联的load或store操作，假定操作P是与操作F相应的对变量V的read或write操作；类型地，假定动作B是线程T对变量W实施的use或assign动作，假定操作G是操作B相关联的load或store操作，假定操作Q是与操作G相应的对变量V的read或write操作。如果A先于B，那么P先于Q。这条规则要求valitile修改的变量不会被指令重排序优化，保证代码的执行顺序与程序的顺序相同。</p><p>6.4 对于long和double型变量的特殊规则</p><p>Java模型要求lock、unlock、read、load、assign、use、store、write这8个操作都具有原子性，但是对于64为的数据类型（long和double），在模型中特别定义了一条相对宽松的规定：允许虚拟机将没有被volatile修饰的64位数据的读写操作分为两次32为的操作来进行，即允许虚拟机实现选择可以不保证64位数据类型的load、store、read和write这4个操作的原子性</p><p>6.5 原子性、可见性和有序性</p><p>原子性：即一个操作或者多个操作 要么全部执行并且执行的过程不会被任何因素打断，要么就都不执行。Java内存模型是通过在变量修改后将新值同步会主内存，在变量读取前从主内存刷新变量值这种依赖主内存作为传递媒介的方式来实现可见性，valatile特殊规则保障新值可以立即同步到祝内存中。Synchronized是在对一个变量执行unlock之前，必须把变量同步回主内存中（执行store、write操作）。被final修饰的字段在构造器中一旦初始化完成，并且构造器没有吧this的引用传递出去，那在其他线程中就能看见final字段的值</p><p>可见性：可见性是指当多个线程访问同一个变量时，一个线程修改了这个变量的值，其他线程能够立即看得到修改的值。</p><p>有序性：即程序执行的顺序按照代码的先后顺序执行。</p><p>6.6  先行发生原则</p><p>这些先行发生关系无须任何同步就已经存在，如果不再此列就不能保障顺序性，虚拟机就可以对它们任意地进行重排序</p><p>1.程序次序规则：在一个线程内，按照程序代码顺序，书写在前面的操作先行发生于书写在后面的操作。准确的说，应该是控制顺序而不是程序代码顺序，因为要考虑分支。循环等结构</p><p>2.管程锁定规则：一个unlock操作先行发生于后面对同一个锁的lock操作。这里必须强调的是同一个锁，而后面的是指时间上的先后顺序</p><p>3.Volatile变量规则：对一个volatile变量的写操作先行发生于后面对这个变量的读操作，这里的后面同样是指时间上的先后顺序</p><p>4.线程启动规则：Thread对象的start()方法先行发生于此线程的每一个动作</p><p>5.线程终止规则：线程中的所有操作都先行发生于对此线程的终止检测，我们可以通过Thread.join()方法结束、ThradisAlive()的返回值等手段检测到线程已经终止执行</p><p>6.线程中断规则：对线程interrupt()方法的调用先行发生于被中断线程的代码检测到中断时间的发生，可以通过Thread.interrupted()方法检测到是否有中断发生</p><p>7.对象终结规则：一个对象的初始化完成(构造函数执行结束)先行发生于它的finalize()方法的开始</p><p>8.传递性：如果操作A先行发生于操作B，操作B先行发生于操作C，那就可以得出操作A先行发生于操作C的结论</p><p>6.7  Java线程调度</p><p>协同式调度：线程的执行时间由线程本身控制</p><p>抢占式调度：线程的执行时间由系统来分配</p><p>6.8 状态转换</p><p>1.新建</p><p>2.运行：可能正在执行。可能正在等待CPU为它分配执行时间</p><p>3.无限期等待：不会被分配CUP执行时间，它们要等待被其他线程显式唤醒</p><p>4.限期等待：不会被分配CUP执行时间，它们无须等待被其他线程显式唤醒，一定时间会由系统自动唤醒</p><p>5.阻塞：阻塞状态在等待这获取到一个排他锁，这个时间将在另一个线程放弃这个锁的时候发生；等待状态就是在等待一段时间，或者唤醒动作的发生</p><p>6.结束：已终止线程的线程状态，线程已经结束执行</p><h2 id="七、线程安全"><a href="#七、线程安全" class="headerlink" title="七、线程安全"></a>七、线程安全</h2><p>1、不可变：不可变的对象一定是线程安全的、无论是对象的方法实现还是方法的调用者，都不需要再采取任何的线程安全保障。例如：把对象中带有状态的变量都声明为final，这样在构造函数结束之后，它就是不可变的。</p><p>2、绝对线程安全</p><p>3、相对线程安全：相对的线程安全就是我们通常意义上所讲的线程安全，它需要保证对这个对象单独的操作是线程安全的，我们在调用的时候不需要做额外的保障措施，但是对于一些特定顺序的连续调用，就可能需要在调用端使用额外的同步手段来保证调用的正确性</p><p>4、线程兼容：对象本身并不是线程安全的，但是可以通过在调用端正确地使用同步手段来保证对象在并发环境中可以安全使用</p><p>5、线程对立：是指无论调用端是否采取了同步措施，都无法在多线程环境中并发使用的代码</p><p>7.1 线程安全的实现方法</p><p>1.互斥同步：</p><p>同步是指在多个线程并发访问共享数据时，保证共享数据在同一个时刻只被一个（或者是一些，使用信号量的时候）线程使用。而互斥是实现同步的一种手段，临界区、互斥量和信号量都是主要的互斥实现方式。互斥是因，同步是果：互斥是方法，同步是目的</p><p>在Java中，最基本的互斥同步手段就是synchronized关键字，它经过编译之后，会在同步块的前后分别形成monitorenter和monitorexit这两个字节码指令，这两个字节码都需要一个reference类型的参数来指明要锁定和解锁的对象。如果Java程序中的synchronized明确指定了对象参数，那就是这个对象的reference；如果没有指明，那就根据synchronized修饰的是实例方法还是类方法，去取对应的对象实例或Class对象来作为锁对象。在执行monitorenter指令时，首先要尝试获取对象的锁。如果这个对象没有被锁定，或者当前线程已经拥有了那个对象的锁，把锁的计数器加1，对应的在执行monitorexit指令时会将锁计数器减1，当计数器为0时，锁就被释放。如果获取对象锁失败，哪当前线程就要阻塞等待，直到对象锁被另外一个线程释放为止</p><p>Synchronized，ReentrantLock增加了一些高级功能</p><p>1.等待可中断：是指当持有锁的线程长期不释放锁的时候，正在等待的线程可以选择放弃等待，改为处理其他事情，可中断特性对处理执行时间非常长的同步块很有帮助</p><p>2.公平锁：是指多个线程在等待同一个锁时，必须按照申请锁的时间顺序来依次获得锁；非公平锁则不能保证这一点，在锁被释放时，任何一个等待锁的线程都有机会获得锁。Synchronized中的锁是非公平的，ReentrantLock默认情况下也是非公平的，但可以通过带布尔值的构造函数要求使用公平锁</p><p>3.锁绑定多个条件是指一个ReentrantLock对象可以同时绑定多个Condition对象，而在synchronized中，锁对象的wait()和notify()或notifyAll()方法可以实现一个隐含的条件，如果要和多余一个的条件关联的时候，就不得不额外地添加一个锁，而ReentrantLock则无须这样做，只需要多次调用newCondition方法即可</p><p>2.非阻塞同步</p><p>3.无同步方案</p><p>可重入代码：也叫纯代码，可以在代码执行的任何时刻中断它，转而去执行另外一段代码（包括递归调用它本身）而在控制权返回后，原来的程序不会出现任何错误。所有的可重入代码都是线程安全的，但是并非所有的线程安全的代码都是可重入的。</p><p>判断一个代码是否具备可重入性：如果一个方法，它的返回结果是可预测的，只要输入了相同的数据，就都能返回相同的结果，那它就满足可重入性的要求，当然也就是线程安全的</p><p>线程本地存储：如果一段代码中所需要的数据必须与其他代码共享，那就看看这些共享数据的代码是否能保证在同一个线程中执行？如果能保障，我们就可以把共享数据的可见范围限制在同一个线程之内，这样，无须同步也能保证线程之间不出现数据争用的问题</p><p>7.2锁优化</p><p>适应性自旋、锁消除、锁粗化、轻量级锁和偏向锁</p><p>7.2.1 自旋锁与自适应自旋</p><p>自旋锁：如果物理机器上有一个以上的处理器，能让两个或以上的线程同时并行执行，我们就可以让后面请求锁的那个线程稍等一下，但不放弃处理器的执行时间，看看持有锁的线程是否很快就会释放锁。为了让线程等待，我们只需让线程执行一个忙循环（自旋），这项技术就是所谓的自旋锁</p><p>自适应自旋转：是由前一次在同一个锁对象上，自旋等待刚刚成功获得过锁，并且持有锁的线程正在运行中，那么虚拟机就会认为这次自旋也很有可能再次成功，进而它将允许自旋等待持续相对更长的时间。如果对于某个锁，自旋很少成功获得过，那在以后要获取这个锁时将可能省略掉自过程，以避免浪费处理器资源。</p><p>7.2.2 锁消除</p><p>锁消除是指虚拟机即时编辑器在运行时，对一些代码上要求同步，但是被检测到不可能存在共享数据竞争的锁进行消除。如果在一段代码中。推上的所有数据都不会逃逸出去从而被其他线程访问到，那就可以把它们当作栈上数据对待，认为它们是线程私有的，同步加锁自然就无须进行</p><p>7.2.3锁粗化</p><p>如果虚拟机检测到有一串零碎的操作都是对同一对象的加锁，将会把加锁同步的范围扩展（粗化）到整个操作序列的外部</p><p>7.2.4 轻量级锁</p><p>7.2.5 偏向锁</p><p>它的目的是消除无竞争情况下的同步原语，进一步提高程序的运行性能。如果轻量级锁是在无竞争的情况下使用CAS操作去消除同步使用的互斥量，那偏向锁就是在无竞争的情况下把这个同步都消除掉，CAS操作都不做了</p><p>如果在接下俩的执行过程中，该锁没有被其他线程获取，则持有偏向锁的线程将永远不需要在进行同步</p><p>八、逃逸分析</p><p>逃逸分析的基本行为就是分析对象动态作用域：当一个对象在方法中被定义后，它可能被外部方法所引用，例如作为调用参数传递到其他方法中，成为方法逃逸。甚至还可能被外部线程访问到，比如赋值给类变量或可以在其他线程中访问的实例变量，称为线程逃逸</p><p>如果一个对象不会逃逸到方法或线程之外，也就是别的方法或线程无法通过任何途径访问到这个对象，则可能为这个变量进行一些高效的优化</p><p>栈上分配：如果确定一个对象不会逃逸出方法外，那让这个对象在栈上分配内存将会是一个不错的注意，对象所占用的内存空间就可以随栈帧出栈而销毁。如果能使用栈上分配，那大量的对象就随着方法的结束而销毁了，垃圾收集系统的压力将会小很多</p><p>同步消除：如果确定一个变量不会逃逸出线程，无法被其他线程访问，那这个变量的读写肯定就不会有竞争，对这个变量实施的同步措施也就可以消除掉</p><p>标量替换：标量就是指一个数据无法在分解成更小的数据表示了，int、long等及refrence类型等都不能在进一步分解，它们称为标量。</p><p>如果一个数据可以继续分解，就称为聚合量，Java中的对象就是最典型的聚合量</p><p>如果一个对象不会被外部访问，并且这个对象可以被拆散的化，那程序正在执行的时候将可能不创建这个对象，而改为直接创建它的若干个被这个方法使用到的成员变量来代替。</p>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Book </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql总结</title>
      <link href="/2019/01/18/Mysql%E6%80%BB%E7%BB%93/"/>
      <url>/2019/01/18/Mysql%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fwww.todavianose.com%2Fwp-content%2Fgallery%2Fgaleria%2F423.jpg&refer=http%3A%2F%2Fwww.todavianose.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1623575405&t=f33dc415315194d090e8975f8c942c29" alt="Mou_icon"></p><span id="more"></span><h3 id="数据库三范式"><a href="#数据库三范式" class="headerlink" title="数据库三范式"></a>数据库三范式</h3><h6 id="第一范式"><a href="#第一范式" class="headerlink" title="第一范式"></a>第一范式</h6><blockquote><p>列的原子性</p></blockquote><h6 id="第二范式"><a href="#第二范式" class="headerlink" title="第二范式"></a>第二范式</h6><blockquote><p>每列与主键有关系</p></blockquote><h6 id="第三范式"><a href="#第三范式" class="headerlink" title="第三范式"></a>第三范式</h6><blockquote><p>所有列与主键有直接关系，而非间接关系</p></blockquote><h4 id="反范式"><a href="#反范式" class="headerlink" title="反范式"></a>反范式</h4><blockquote><p>冗余数据，从而增加减少关联</p></blockquote><h3 id="常用搜索引擎"><a href="#常用搜索引擎" class="headerlink" title="常用搜索引擎"></a>常用搜索引擎</h3><h6 id="InnoDB"><a href="#InnoDB" class="headerlink" title="InnoDB"></a>InnoDB</h6><h6 id="MYISAM"><a href="#MYISAM" class="headerlink" title="MYISAM"></a>MYISAM</h6><h4 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h4><h4 id="常用语句"><a href="#常用语句" class="headerlink" title="常用语句"></a>常用语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--查看引擎</span></span><br><span class="line"><span class="keyword">show</span> engines;</span><br><span class="line"><span class="comment">--设置表使用什么引擎</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_user engine <span class="operator">=</span> <span class="string">&#x27;InnoDB&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><h4 id="为什么要使用索引"><a href="#为什么要使用索引" class="headerlink" title="为什么要使用索引"></a>为什么要使用索引</h4><ul><li>避免全表扫描，提升查询效率</li><li>主键，普通键，唯一键都可以作为索引</li></ul><h4 id="索引分类"><a href="#索引分类" class="headerlink" title="索引分类"></a>索引分类</h4><h6 id="聚簇索引"><a href="#聚簇索引" class="headerlink" title="聚簇索引"></a>聚簇索引</h6><h6 id="非聚簇索引"><a href="#非聚簇索引" class="headerlink" title="非聚簇索引"></a>非聚簇索引</h6><h6 id="联合索引"><a href="#联合索引" class="headerlink" title="联合索引"></a>联合索引</h6><h6 id="覆盖索引"><a href="#覆盖索引" class="headerlink" title="覆盖索引"></a>覆盖索引</h6><h6 id="主键索引"><a href="#主键索引" class="headerlink" title="主键索引"></a>主键索引</h6><h4 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h4><h4 id="创建原则"><a href="#创建原则" class="headerlink" title="创建原则"></a>创建原则</h4><h4 id="索引失效"><a href="#索引失效" class="headerlink" title="索引失效"></a>索引失效</h4><h3 id="事务与锁"><a href="#事务与锁" class="headerlink" title="事务与锁"></a>事务与锁</h3><h4 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h4><h4 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h4><h4 id="隔离级别"><a href="#隔离级别" class="headerlink" title="隔离级别"></a>隔离级别</h4><h4 id="锁"><a href="#锁" class="headerlink" title="锁"></a>锁</h4><h3 id="调优"><a href="#调优" class="headerlink" title="调优"></a>调优</h3><h4 id="优化方式"><a href="#优化方式" class="headerlink" title="优化方式"></a>优化方式</h4><h4 id="分析技巧"><a href="#分析技巧" class="headerlink" title="分析技巧"></a>分析技巧</h4><h3 id="执行过程"><a href="#执行过程" class="headerlink" title="执行过程"></a>执行过程</h3><h3 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h3><h3 id="分库分表"><a href="#分库分表" class="headerlink" title="分库分表"></a>分库分表</h3><h3 id="读写分离"><a href="#读写分离" class="headerlink" title="读写分离"></a>读写分离</h3><h3 id="常见面试题"><a href="#常见面试题" class="headerlink" title="常见面试题"></a>常见面试题</h3>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis总结</title>
      <link href="/2019/01/18/Mybatis%E6%80%BB%E7%BB%93/"/>
      <url>/2019/01/18/Mybatis%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fyuchen-blog-image.oss-ap-southeast-1.aliyuncs.com%2F19-2-4%2F207e3b1c0d9daae22a29b5e4a7f6b2b1.png&refer=http%3A%2F%2Fyuchen-blog-image.oss-ap-southeast-1.aliyuncs.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1623575381&t=c810b99af8245f5b5fcf23d3ad643292" alt="Mou_icon"></p><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot总结</title>
      <link href="/2019/01/18/SpringBoot%E6%80%BB%E7%BB%93/"/>
      <url>/2019/01/18/SpringBoot%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p><img src="http://codeimages.lutao1726.top/springboot.jpg" alt="Mou_icon"></p><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringMVC总结</title>
      <link href="/2019/01/18/SpringMVC%E6%80%BB%E7%BB%93/"/>
      <url>/2019/01/18/SpringMVC%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p><img src="https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=3833687770,1236182247&fm=26&gp=0.jpg" alt="Mou_icon"></p><span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring总结</title>
      <link href="/2019/01/18/Spring%E6%80%BB%E7%BB%93/"/>
      <url>/2019/01/18/Spring%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="Spring-概述"><a href="#Spring-概述" class="headerlink" title="Spring 概述"></a><img src="https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=3833687770,1236182247&fm=26&gp=0.jpg" alt="Mou_icon"><br><span id="more"></span><br>Spring 概述</h2><blockquote><p>Spring 是个java企业级应用的开源开发框架。Spring主要用来开发Java应用，但是有些扩展是针对构建J2EE平台的web应用。Spring 框架目标是简化Java企业级应用开发，并通过POJO为基础的编程模型促进良好的编程习惯。</p></blockquote><p><img src="https://gss0.bdstatic.com/-4o3dSag_xI4khGkpoWK1HF6hhy/baike/w%3D268%3Bg%3D0/sign=a1a1f9579058d109c4e3aeb4e963ab82/8b13632762d0f703ed7a0ff50afa513d2797c5cb.jpg" alt="Mou_icon"></p><p>几个重要的模块：<br>Spring Core：核心类库，所有的功能都依赖该类库，提供IOC与DI服务<br>Spring AOP：AOP服务<br>Spring ORM：对现有的ORM框架的支持<br>Spring Web：为创建Web应用程序提供支持<br>Spring JDBC：Java数据库连接</p><h3>IOC</h3><p><img src="http://image.uc.cn/o/wemedia/s/upload/2021/fc83ea802e410d76b6713f81268a17be.png;,4,png;3,700x.png"><br>IOC 控制反转——————&gt;是依赖倒置原则的一种代码设计思路—-&gt;采用的方法是依赖注入<br>依赖注入的3种方式：</p><ul><li>构造方法传递</li><li>Setting传递</li><li>接口传递</li></ul><p>控制反转优点：</p><ul><li>降低重复代码</li><li>隐藏细节</li></ul><p>IOC实现原理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Fruit</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Apple</span> <span class="keyword">implements</span> <span class="title class_">Fruit</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Apple&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Orange</span> <span class="keyword">implements</span> <span class="title class_">Fruit</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Orange&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Factory</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Fruit <span class="title function_">getInstance</span><span class="params">(String ClassName)</span> &#123;</span><br><span class="line">        <span class="type">Fruit</span> <span class="variable">f</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            f = (Fruit) Class.forName(ClassName).newInstance();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> f;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Client</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] a)</span> &#123;</span><br><span class="line">        <span class="type">Fruit</span> <span class="variable">f</span> <span class="operator">=</span> Factory.getInstance(<span class="string">&quot;io.github.dunwu.spring.Apple&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (f != <span class="literal">null</span>) &#123;</span><br><span class="line">            f.eat();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3>AOP(面向切面编程)</h3>AOP的实现关键在代理模式，AOP代理分为静态代理（AspectJ基于字节码操作）与动态代理（Spring AOP基于代理）<h3>Spring中的Bean的生命周期</h3>实例化Instantiation--->属性赋值Populate--->初始化Initialization ---> 销毁Destruction![](http://image.uc.cn/o/wemedia/s/upload/2021/a097fd438caecc310acad94ac255155b.png;,4,png;3,700x.png)<p><a href="http://blog.lutao1726.top/Java%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8Beta5.0.pdf">Java面试宝典Beta5.0.pdf</a><br><a href="http://blog.lutao1726.top/%E7%BC%96%E7%A8%8B%E4%B9%8B%E7%BE%8E.pdf">编程之美.pdf</a></p>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot之使用Druid连接池以及SQL监控和spring监控</title>
      <link href="/2019/01/01/SpringBoot%E4%B9%8B%E4%BD%BF%E7%94%A8Druid%E8%BF%9E%E6%8E%A5%E6%B1%A0%E4%BB%A5%E5%8F%8ASQL%E7%9B%91%E6%8E%A7/"/>
      <url>/2019/01/01/SpringBoot%E4%B9%8B%E4%BD%BF%E7%94%A8Druid%E8%BF%9E%E6%8E%A5%E6%B1%A0%E4%BB%A5%E5%8F%8ASQL%E7%9B%91%E6%8E%A7/</url>
      
        <content type="html"><![CDATA[<p><img src="http://codeimages.lutao1726.top/springboot.jpg" alt="Mou_icon"></p><span id="more"></span><h2 id="引入maven依赖"><a href="#引入maven依赖" class="headerlink" title="引入maven依赖"></a>引入maven依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.18<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="在application-properties配置文件中加入druid配置"><a href="#在application-properties配置文件中加入druid配置" class="headerlink" title="在application.properties配置文件中加入druid配置"></a>在application.properties配置文件中加入druid配置</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##########################  mysql   ##########################</span></span><br><span class="line"><span class="attr">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost/db_boot?useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line"><span class="attr">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">spring.datasource.password</span>=<span class="string"></span></span><br><span class="line"><span class="attr">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging.level.com.shyroke.mapper</span>=<span class="string">debug</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">##########################  mybatis   ##########################</span></span><br><span class="line"><span class="attr">mybatis.mapper-locations</span>=<span class="string">classpath:mybatis/*.xml</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">##########################  druid配置   ##########################</span></span><br><span class="line"><span class="attr">spring.datasource.type</span>=<span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 初始化大小，最小，最大  </span></span><br><span class="line"><span class="attr">spring.datasource.initialSize</span>=<span class="string">5</span></span><br><span class="line"><span class="attr">spring.datasource.minIdle</span>=<span class="string">5</span></span><br><span class="line"><span class="attr">spring.datasource.maxActive</span>=<span class="string">20</span></span><br><span class="line"><span class="comment"># 配置获取连接等待超时的时间  </span></span><br><span class="line"><span class="attr">spring.datasource.maxWait</span>=<span class="string">60000</span></span><br><span class="line"><span class="comment"># 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  </span></span><br><span class="line"><span class="attr">spring.datasource.timeBetweenEvictionRunsMillis</span>=<span class="string">60000</span></span><br><span class="line"><span class="comment"># 配置一个连接在池中最小生存的时间，单位是毫秒  </span></span><br><span class="line"><span class="attr">spring.datasource.minEvictableIdleTimeMillis</span>=<span class="string">300000</span></span><br><span class="line"><span class="comment"># 校验SQL，Oracle配置 spring.datasource.validationQuery=SELECT 1 FROM DUAL，如果不配validationQuery项，则下面三项配置无用  </span></span><br><span class="line"><span class="attr">spring.datasource.validationQuery</span>=<span class="string">SELECT &#x27;x&#x27;</span></span><br><span class="line"><span class="attr">spring.datasource.testWhileIdle</span>=<span class="string">true</span></span><br><span class="line"><span class="attr">spring.datasource.testOnBorrow</span>=<span class="string">false</span></span><br><span class="line"><span class="attr">spring.datasource.testOnReturn</span>=<span class="string">false</span></span><br><span class="line"><span class="comment"># 打开PSCache，并且指定每个连接上PSCache的大小  </span></span><br><span class="line"><span class="attr">spring.datasource.poolPreparedStatements</span>=<span class="string">true</span></span><br><span class="line"><span class="attr">spring.datasource.maxPoolPreparedStatementPerConnectionSize</span>=<span class="string">20</span></span><br><span class="line"><span class="comment"># 配置监控统计拦截的filters，去掉后监控界面sql无法统计，&#x27;wall&#x27;用于防火墙  </span></span><br><span class="line"><span class="attr">spring.datasource.filters</span>=<span class="string">stat,wall,log4j</span></span><br><span class="line"><span class="comment"># 通过connectProperties属性来打开mergeSql功能；慢SQL记录  </span></span><br><span class="line"><span class="attr">spring.datasource.connectionProperties</span>=<span class="string">druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000</span></span><br><span class="line"><span class="comment"># 合并多个DruidDataSource的监控数据  </span></span><br><span class="line"><span class="attr">spring.datasource.useGlobalDataSourceStat</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure><h2 id="配置webServlet"><a href="#配置webServlet" class="headerlink" title="配置webServlet"></a>配置webServlet</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shyroke.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebInitParam;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.support.http.StatViewServlet;</span><br><span class="line"><span class="meta">@WebServlet(urlPatterns = &quot;/druid/*&quot;, </span></span><br><span class="line"><span class="meta">    initParams=&#123;</span></span><br><span class="line"><span class="meta">//            @WebInitParam(name=&quot;allow&quot;,value=&quot;192.168.16.110,127.0.0.1&quot;),// IP白名单 (没有配置或者为空，则允许所有访问)</span></span><br><span class="line"><span class="meta">//            @WebInitParam(name=&quot;deny&quot;,value=&quot;192.168.16.111&quot;),// IP黑名单 (存在共同时，deny优先于allow)</span></span><br><span class="line"><span class="meta">            @WebInitParam(name=&quot;loginUsername&quot;,value=&quot;admin&quot;),// 用户名</span></span><br><span class="line"><span class="meta">            @WebInitParam(name=&quot;loginPassword&quot;,value=&quot;admin&quot;),// 密码</span></span><br><span class="line"><span class="meta">            @WebInitParam(name=&quot;resetEnable&quot;,value=&quot;false&quot;)// 禁用HTML页面上的“Reset All”功能</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DruidServlet</span> <span class="keyword">extends</span> <span class="title class_">StatViewServlet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置webFitler"><a href="#配置webFitler" class="headerlink" title="配置webFitler"></a>配置webFitler</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shyroke.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebFilter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebInitParam;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.support.http.WebStatFilter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebFilter(filterName=&quot;druidWebStatFilter&quot;,urlPatterns=&quot;/*&quot;,</span></span><br><span class="line"><span class="meta">initParams=&#123;</span></span><br><span class="line"><span class="meta">    @WebInitParam(name=&quot;exclusions&quot;,value=&quot;*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*&quot;)// 忽略资源</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DruidFilter</span> <span class="keyword">extends</span> <span class="title class_">WebStatFilter</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="扫描filter和servlet"><a href="#扫描filter和servlet" class="headerlink" title="扫描filter和servlet"></a>扫描filter和servlet</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@ServletComponentScan</span></span><br><span class="line"><span class="meta">@ImportResource(locations = &#123; &quot;classpath:druid-bean.xml&quot; &#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringbootMybatisDruidApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(SpringbootMybatisDruidApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="不使用spring-boot自动配置功能，手动初始化DataSource"><a href="#不使用spring-boot自动配置功能，手动初始化DataSource" class="headerlink" title="不使用spring boot自动配置功能，手动初始化DataSource"></a>不使用spring boot自动配置功能，手动初始化DataSource</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shyroke.configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Primary;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DruidConfigration</span> &#123;  </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.url&#125;&quot;)</span>  </span><br><span class="line">    <span class="keyword">private</span> String dbUrl;  </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.username&#125;&quot;)</span>  </span><br><span class="line">    <span class="keyword">private</span> String username;  </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.password&#125;&quot;)</span>  </span><br><span class="line">    <span class="keyword">private</span> String password;  </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.driver-class-name&#125;&quot;)</span>  </span><br><span class="line">    <span class="keyword">private</span> String driverClassName;  </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.initialSize&#125;&quot;)</span>  </span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> initialSize;  </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.minIdle&#125;&quot;)</span>  </span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> minIdle;  </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.maxActive&#125;&quot;)</span>  </span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> maxActive;  </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.maxWait&#125;&quot;)</span>  </span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> maxWait;  </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.timeBetweenEvictionRunsMillis&#125;&quot;)</span>  </span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> timeBetweenEvictionRunsMillis;  </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.minEvictableIdleTimeMillis&#125;&quot;)</span>  </span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> minEvictableIdleTimeMillis;  </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.validationQuery&#125;&quot;)</span>  </span><br><span class="line">    <span class="keyword">private</span> String validationQuery;  </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.testWhileIdle&#125;&quot;)</span>  </span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> testWhileIdle;  </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.testOnBorrow&#125;&quot;)</span>  </span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> testOnBorrow;  </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.testOnReturn&#125;&quot;)</span>  </span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> testOnReturn;  </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.poolPreparedStatements&#125;&quot;)</span>  </span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> poolPreparedStatements;  </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.maxPoolPreparedStatementPerConnectionSize&#125;&quot;)</span>  </span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> maxPoolPreparedStatementPerConnectionSize;  </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.filters&#125;&quot;)</span>  </span><br><span class="line">    <span class="keyword">private</span> String filters;  </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.connectionProperties&#125;&quot;)</span>  </span><br><span class="line">    <span class="keyword">private</span> String connectionProperties;  </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;spring.datasource.useGlobalDataSourceStat&#125;&quot;)</span>  </span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> useGlobalDataSourceStat;  </span><br><span class="line">  </span><br><span class="line">    <span class="meta">@Bean</span>     <span class="comment">//声明其为Bean实例  </span></span><br><span class="line">    <span class="meta">@Primary</span>  <span class="comment">//在同样的DataSource中，首先使用被标注的DataSource  </span></span><br><span class="line">    <span class="keyword">public</span> DataSource <span class="title function_">dataSource</span><span class="params">()</span>&#123;  </span><br><span class="line">        <span class="type">DruidDataSource</span> <span class="variable">datasource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DruidDataSource</span>();  </span><br><span class="line">        datasource.setUrl(<span class="built_in">this</span>.dbUrl);  </span><br><span class="line">        datasource.setUsername(username);  </span><br><span class="line">        datasource.setPassword(password);  </span><br><span class="line">        datasource.setDriverClassName(driverClassName);  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">//configuration  </span></span><br><span class="line">        datasource.setInitialSize(initialSize);  </span><br><span class="line">        datasource.setMinIdle(minIdle);  </span><br><span class="line">        datasource.setMaxActive(maxActive);  </span><br><span class="line">        datasource.setMaxWait(maxWait);  </span><br><span class="line">        datasource.setTimeBetweenEvictionRunsMillis(timeBetweenEvictionRunsMillis);  </span><br><span class="line">        datasource.setMinEvictableIdleTimeMillis(minEvictableIdleTimeMillis);  </span><br><span class="line">        datasource.setValidationQuery(validationQuery);  </span><br><span class="line">        datasource.setTestWhileIdle(testWhileIdle);  </span><br><span class="line">        datasource.setTestOnBorrow(testOnBorrow);  </span><br><span class="line">        datasource.setTestOnReturn(testOnReturn);  </span><br><span class="line">        datasource.setPoolPreparedStatements(poolPreparedStatements);  </span><br><span class="line">        datasource.setMaxPoolPreparedStatementPerConnectionSize(maxPoolPreparedStatementPerConnectionSize);  </span><br><span class="line">        datasource.setUseGlobalDataSourceStat(useGlobalDataSourceStat);  </span><br><span class="line">        <span class="keyword">try</span> &#123;  </span><br><span class="line">            datasource.setFilters(filters);  </span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;  </span><br><span class="line">            System.err.println(<span class="string">&quot;druid configuration initialization filter: &quot;</span>+ e);  </span><br><span class="line">        &#125;  </span><br><span class="line">        datasource.setConnectionProperties(connectionProperties);  </span><br><span class="line">        <span class="keyword">return</span> datasource;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/shyroke/p/8045077.html">详情</a>                                          </p>]]></content>
      
      
      <categories>
          
          <category> SpringBoot教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Mysql </tag>
            
            <tag> Spring </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot项目配置阿里云ssl证书</title>
      <link href="/2019/01/01/springboot%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE%E9%98%BF%E9%87%8C%E4%BA%91ssl%E8%AF%81%E4%B9%A6/"/>
      <url>/2019/01/01/springboot%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE%E9%98%BF%E9%87%8C%E4%BA%91ssl%E8%AF%81%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<p><img src="http://codeimages.lutao1726.top/springboot.jpg" alt="Mou_icon"></p><span id="more"></span><h2 id="环境："><a href="#环境：" class="headerlink" title="环境："></a>环境：</h2><p>springboot项目 版本：1.5.8.realse<br>证书类型: .pfx<br>服务器：阿里云centos主机 </p><ul><li>申请阿里云ssl证书，免费和贵的都有（或者自己用工具生成的证书用法一致）</li><li>开放服务器443端口</li><li>下载证书，将证书放到resource目录下</li><li>application.properties配置<figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#证书配置</span></span><br><span class="line"><span class="attr">server.ssl.key-store</span>=<span class="string">classpath:xxxxx.pfx //配置证书路径</span></span><br><span class="line"><span class="attr">server.ssl.key-store-password</span>=<span class="string">xxxx //证书密码</span></span><br><span class="line"><span class="attr">server.ssl.keyStoreType</span>=<span class="string">PKCS12 //keyStoreType就填这个</span></span><br><span class="line"><span class="attr">server.port</span>=<span class="string">443</span></span><br></pre></td></tr></table></figure></li><li>项目的入口类Application.java注入两个bean<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">   <span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> EmbeddedServletContainerFactory <span class="title function_">servletContainer</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//springboot版本不同可能下面的类名会不同或者类的包路径会不同</span></span><br><span class="line"><span class="type">TomcatEmbeddedServletContainerFactory</span> <span class="variable">tomcat</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TomcatEmbeddedServletContainerFactory</span>() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">postProcessContext</span><span class="params">(Context context)</span> &#123;</span><br><span class="line"><span class="type">SecurityConstraint</span> <span class="variable">constraint</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecurityConstraint</span>();</span><br><span class="line">constraint.setUserConstraint(<span class="string">&quot;CONFIDENTIAL&quot;</span>);</span><br><span class="line"><span class="type">SecurityCollection</span> <span class="variable">collection</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SecurityCollection</span>();</span><br><span class="line">collection.addPattern(<span class="string">&quot;/*&quot;</span>);</span><br><span class="line">constraint.addCollection(collection);</span><br><span class="line">context.addConstraint(constraint);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">tomcat.addAdditionalTomcatConnectors(httpConnector());</span><br><span class="line"><span class="keyword">return</span> tomcat;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> Connector <span class="title function_">httpConnector</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">Connector</span> <span class="variable">connector</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Connector</span>(<span class="string">&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</span>);</span><br><span class="line">connector.setScheme(<span class="string">&quot;http&quot;</span>);</span><br><span class="line"><span class="comment">//监听http的端口号</span></span><br><span class="line">connector.setPort(<span class="number">80</span>);</span><br><span class="line">connector.setSecure(<span class="literal">false</span>);</span><br><span class="line"><span class="comment">//监听到http的端口号后转向到的https的端口号</span></span><br><span class="line">       System.out.println(<span class="string">&quot;监听到了80端口&quot;</span>);</span><br><span class="line">connector.setRedirectPort(<span class="number">443</span>);<span class="comment">//这里的端口写成和配置文件一样的端口就Ok</span></span><br><span class="line"><span class="keyword">return</span> connector;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> SpringBoot教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>完全卸载删除gitlab</title>
      <link href="/2018/09/27/%E5%AE%8C%E5%85%A8%E5%8D%B8%E8%BD%BD%E5%88%A0%E9%99%A4gitlab/"/>
      <url>/2018/09/27/%E5%AE%8C%E5%85%A8%E5%8D%B8%E8%BD%BD%E5%88%A0%E9%99%A4gitlab/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="完全卸载删除gitlab"><a href="#完全卸载删除gitlab" class="headerlink" title="完全卸载删除gitlab"></a>完全卸载删除gitlab</h2><p>1、停止gitlab</p><blockquote><p>gitlab-ctl stop</p></blockquote><p>2、卸载gitlab（注意这里写的是gitlab-ce）</p><blockquote><p>rpm -e gitlab-ce</p></blockquote><p>3、查看gitlab进程</p><blockquote><p>ps aux | grep gitlab</p></blockquote><p><img src="http://blog.whsir.com/wp-content/uploads/2017/05/gitlab.png"></p><p>4、杀掉第一个进程（就是带有好多………….的进程）</p><blockquote><p>kill -9 18777</p></blockquote><p>杀掉后，在ps aux | grep gitlab确认一遍，还有没有gitlab的进程</p><p>5、删除所有包含gitlab文件</p><blockquote><p>find &#x2F; -name gitlab | xargs rm -rf</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Linux </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins安装与配置</title>
      <link href="/2018/09/16/jenkins%E5%AE%89%E8%A3%85/"/>
      <url>/2018/09/16/jenkins%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="Jenkins安装与配置"><a href="#Jenkins安装与配置" class="headerlink" title="Jenkins安装与配置"></a>Jenkins安装与配置</h1><p>环境说明：<br>虚拟机 centos7 64位<br>内存：3GB<br>存储：20GB</p><p>版本：jenkins 2.107.3<br>      JDK 8u171<br>      maven 3.5.3</p><h2 id="配置基础环境"><a href="#配置基础环境" class="headerlink" title="配置基础环境"></a>配置基础环境</h2><p>先用root用户创建新用户DevOps</p><blockquote><p>adduser DevOps</p></blockquote><p>给用户设置新密码</p><blockquote><p>passwd DevOps</p></blockquote><p>root用户创建规范化根目录</p><blockquote><p>mkdir app</p></blockquote><p>目录权限</p><blockquote><p>chmod 777 app</p></blockquote><p>将目录赋给DevOps用户</p><blockquote><p>chown DevOps:DevOps app</p></blockquote><p>创建功能目录</p><blockquote><p>cd app<br> mkdir data log service runtime</p></blockquote><p>各个目录作用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data：存储数据</span><br><span class="line">log：日志文件</span><br><span class="line">runtime：软件运行环境</span><br><span class="line">service： 应用目录</span><br></pre></td></tr></table></figure><p>卸载OpenJDK</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">java -version    <span class="comment">#查看当前jdk版本</span></span><br><span class="line">rpm -qa | grep -E <span class="string">&#x27;java|jdk&#x27;</span>    <span class="comment">#查看OpenJDK相关包</span></span><br><span class="line">yum remove -y java-1.7.0-openjdk-1.7.0.99-2.6.5.1.el6.x86_64 java-1.6.0-openjdk-1.6.0.38-1.13.10.4.el6.x86_64    <span class="comment">#卸载OpenJDK</span></span><br></pre></td></tr></table></figure><p>jdk安装：<br>    jdk下载地址：<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a><br>    解压</p><blockquote><p>tar -zxvf jdk-8u171-linux-x64.tar.gz</p></blockquote><p>配置jdk</p><blockquote><p>vi ~&#x2F;profile</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=/app/runtime/jdk1.8.0_171</span><br><span class="line">JRE_HOME=/app/runtime/jdk1.8.0_171/jre</span><br><span class="line">CLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib</span><br><span class="line">PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin</span><br><span class="line">export JAVA_HOME JRE_HOME CLASS_PATH PATH</span><br></pre></td></tr></table></figure><blockquote><p>source ~&#x2F;profile</p></blockquote><p>验证是否安装成功</p><blockquote><p>java -version</p></blockquote><p>maven安装：<br> maven下载地址:<br> 解压</p><blockquote><p>tar -zxvf apache-maven-3.5.3-bin.tar.gz</p></blockquote><p>配置maven</p><blockquote><p>vi ~&#x2F;profile</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MAVEN_HOME=/app/runtime/apache-maven-3.5.3</span><br><span class="line">PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin;$MAVEN_HOME/bin</span><br><span class="line">export MAVEN_HOME;$PATH</span><br></pre></td></tr></table></figure><blockquote><p>source ~&#x2F;profile</p></blockquote><p>settings.xml配置添加阿里的镜像</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>jdk18<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">jdk</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">jdk</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maven.compiler.compilerVersion</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.compilerVersion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven-central<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/repositories/central/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>jboss-public-repository-group<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>JBoss Public Repository Group<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://repository.jboss.org/nexus/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>/app/runtime/apache-maven-3.5.3/repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="jenkins安装运行"><a href="#jenkins安装运行" class="headerlink" title="jenkins安装运行"></a>jenkins安装运行</h2><h2 id="编写shell脚本：start-sh编写shell脚本：stop-shjenkins持续构建Demo配置详情"><a href="#编写shell脚本：start-sh编写shell脚本：stop-shjenkins持续构建Demo配置详情" class="headerlink" title="编写shell脚本：start.sh编写shell脚本：stop.shjenkins持续构建Demo配置详情"></a>编写shell脚本：start.sh<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">nohup java -jar jenkins.war --httpPort=8080 &gt; /app/log/jenkins/jenkins.log 2&gt;&amp;1 &amp;</span><br><span class="line">echo $! &gt; /app/data/data-jenkins.pid</span><br><span class="line">ps -aux|grep jenkins</span><br></pre></td></tr></table></figure><br>编写shell脚本：stop.sh<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">kill -9 $(cat /app/data/data-jenkins.pid)</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>jenkins持续构建Demo配置详情</h2><p>第一次访问时会出现这个页面</p><p><img src="/../images/jenkins-01.png"><br>通过cat该路径的文件获取初始密码，填入文本框中，稍等一分钟之后会进入以下页面</p><p><img src="/../images/jenkins-02.png"><br>点击第一幅图安装插件。</p><p><img src="/../images/jenkins-03.png"><br>等待十分钟左右插件安装完成，插件安装完成之后出现如下图</p><p><img src="/../images/jenkins-04.png"><br>创建jenkins的第一个用户，然后点击 save and finish</p><p><img src="/../images/jenkins-05.png"><br>点击开始使用jenkins</p><p><img src="/../images/jenkins-06.png"><br>这就是jenkins的主界面，接下来开始jenkins之旅</p><p>1.首先我们需要配置jenkins的全局配置，包括(jdk、maven等)<br>点击系统管理—–global tool configuration</p><p><img src="/../images/jenkins-07.png"><br>进去之后如下图配jdk</p><p><img src="/../images/jenkins-08.png"><br>配git</p><p><img src="/../images/jenkins-09.png"><br>配maven</p><p><img src="/../images/jenkins-10.png"></p><p>以上这些配置全都在global tool configuration里边，配置完点击保存</p><p>2.接下来配置ssh连接信息，首先先安装ssh插件：publish over ssh<br>点击系统管理—-管理插件</p><p><img src="/../images/jenkins-11.png"><br>点击进来之后如下图，点击可选插件，然后在过滤文本框处输入publish over ssh ，把前面的复选框选中之后点击直接安装</p><p><img src="/../images/jenkins-12.png"><br> 安装完成后如下图，勾选安装完后重启jenkins，这个插件就会生效</p><p><img src="/../images/jenkins-13.png"></p><p>在jenkins服务器上执行ssh-keygen -t rsa，一路回车就可以  一路回车的话密码为空，这样就在&#x2F;root&#x2F;.ssh&#x2F;下生成的两个文件id.rsa(私钥)和id.rsa.pub(公钥)，我们需要把公钥的内容写到测试服务器（tomcat服务器上）的&#x2F;root&#x2F;.ssh&#x2F;authorized_keys文件中  如果没有就新建一个，接下来我们开始配置<br>点击系统管理—系统设置</p><p><img src="/../images/jenkins-14.png"><br>进去之后找到Publish over SSH项，如下图<br><img src="/../images/jenkins-15.png"></p><p>点第一张图左下角的高级可以修改端口，点击test  configuration可以测试连接  ，如下图就是测试成功，说明我们现在已经可以使用jenkins连接服务器了</p><p><img src="/../images/jenkins-16.png"><br>现在jenkins已经可以和远程服务器通信了</p><p>接下来我们新建一个job</p><p><img src="/../images/jenkins-17.png"><br>点击完之后如下图，描述这块记得写上，最开始这块没写，在构建项目的时候会有报错，报不能配置name[ ]，这里写上就好了</p><p><img src="/../images/jenkins-18.png"><br>然后点击源码管理如下图，我们选择git，repository url  写gitlab仓库的地址，credentials是指信任，我们需要在gitlab中添加jenkins的公钥 ，在下图的key中填写jenkins服务器的公钥，title处填写jenkins，然后在到jenkins上就可以看到credentials处可以选择jenkins了，然后点击构建触发器选项卡</p><p><img src="/../images/jenkins-19.png"><br>点击构建选项卡之后如下图：maven version处选择我们在global tool configuration处配置的maven名称  goals处填写maven命令，因为我们要打包，所以填写clean package</p><p><img src="/../images/jenkins-20.png"><br>点击构建后选项卡之后如下图</p><p><img src="/../images/jenkins-21.png"></p><p>到此，jenkins自动打包，上传就配置完成了，接下来我们验证一下<br><img src="/../images/jenkins-22.png"></p><p>到测试服务器的webapps下验证，jar包已经传到tomcat下了</p>]]></content>
      
      
      <categories>
          
          <category> Linux教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Linux </tag>
            
            <tag> 运维 </tag>
            
            <tag> Jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PostgreSQL 实现按月按年，按日统计 分组统计</title>
      <link href="/2018/08/27/PostgreSQL%20%E5%AE%9E%E7%8E%B0%E6%8C%89%E6%9C%88%E6%8C%89%E5%B9%B4%EF%BC%8C%E6%8C%89%E6%97%A5%E7%BB%9F%E8%AE%A1%20%E5%88%86%E7%BB%84%E7%BB%9F%E8%AE%A1/"/>
      <url>/2018/08/27/PostgreSQL%20%E5%AE%9E%E7%8E%B0%E6%8C%89%E6%9C%88%E6%8C%89%E5%B9%B4%EF%BC%8C%E6%8C%89%E6%97%A5%E7%BB%9F%E8%AE%A1%20%E5%88%86%E7%BB%84%E7%BB%9F%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p>–按年分组查看</p><blockquote><pre><code>select     to_char(to_timestamp(start_time_of_date::bigint), &#39;YYYY&#39;) as d ,  count(cdr_id)  as  total_call,sum (call_duration::integer /60 +1)   as  total_duration  from  cdr   where  to_timestamp(start_time_of_date::bigint)  between  &#39;2010-01-01&#39;   and    &#39;2010-12-12&#39;   group by d</code></pre></blockquote><p>–按月分组查看</p><blockquote><pre><code>select     to_char(to_timestamp(start_time_of_date::bigint), &#39;YYYY-MM&#39;) as d ,  count(cdr_id)  as  total_call,sum (call_duration::integer /60 +1)   as  total_duration  from  cdr   where  to_timestamp(start_time_of_date::bigint)  between  &#39;2010-01-01&#39;   and    &#39;2010-12-12&#39;   group by d</code></pre></blockquote><p>–按天分组查看</p><blockquote><pre><code>select     to_char(to_timestamp(start_time_of_date::bigint), &#39;YYYY-MM-DD&#39;) as d ,  count(cdr_id)  as  total_call,sum (call_duration::integer /60 +1)   as  total_duration  from  cdr   where  to_timestamp(start_time_of_date::bigint)  between  &#39;2010-01-01&#39;   and    &#39;2010-12-12&#39;   group by d</code></pre></blockquote><p>–按小时分组查看</p><blockquote><pre><code>select     to_char(to_timestamp(start_time_of_date::bigint), &#39;YYYY-MM-DD  HH24 &#39; ) as d ,  count(cdr_id)  as  total_call,sum (call_duration::integer /60 +1)   as  total_duration  from  cdr  where  to_timestamp(start_time_of_date::bigint)  between  &#39;2010-01-01&#39;   and    &#39;2010-12-12&#39;   group by d  order  by  d</code></pre></blockquote><p>–按秒分组查看</p><blockquote><pre><code>select     to_char(to_timestamp(start_time_of_date::bigint), &#39;YYYY-MM-DD  HH24:MI:SS &#39; ) as d ,  count(cdr_id)  as  total_call,sum (call_duration::integer /60 +1)   as  total_duration  from  cdr   where  to_timestamp(start_time_of_date::bigint)  between  &#39;2010-01-01&#39;   and    &#39;2010-12-12&#39;   group by d</code></pre></blockquote>]]></content>
      
      
      <categories>
          
          <category> SQL教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Mysql </tag>
            
            <tag> PostgreSql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建ELK日志分析平台</title>
      <link href="/2018/08/20/%E6%90%AD%E5%BB%BAELK%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90%E5%B9%B3%E5%8F%B0/"/>
      <url>/2018/08/20/%E6%90%AD%E5%BB%BAELK%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90%E5%B9%B3%E5%8F%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="搭建ELK日志分析平台"><a href="#搭建ELK日志分析平台" class="headerlink" title="搭建ELK日志分析平台"></a>搭建ELK日志分析平台</h1><h2 id="ELK介绍"><a href="#ELK介绍" class="headerlink" title="ELK介绍"></a>ELK介绍</h2><p>需求背景</p><ul><li>业务发展越来越庞大，服务器越来越多</li><li>各种访问日志、应用日志、错误日志量越来越多，导致运维人员无法很好的去管理日志</li><li>开发人员排查问题，需要到服务器上查日志，不方便</li><li>运营人员需要一些数据，需要我们运维到服务器上分析日志</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Linux </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工作中常用到的sql</title>
      <link href="/2018/08/16/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E5%B8%B8%E7%94%A8sql%E6%95%B4%E7%90%86/"/>
      <url>/2018/08/16/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E5%B8%B8%E7%94%A8sql%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="工作整理-常用到的sql"><a href="#工作整理-常用到的sql" class="headerlink" title="工作整理-常用到的sql"></a>工作整理-常用到的sql</h1><h2 id="去重"><a href="#去重" class="headerlink" title="去重"></a>去重</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--去重并插入新表中</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">into</span> 表<span class="number">1</span>_dist</span><br><span class="line"><span class="keyword">from</span> 表<span class="number">1</span> pa </span><br><span class="line"><span class="keyword">where</span> pa.字段<span class="number">1</span><span class="operator">=</span>(<span class="keyword">select</span> pal.字段<span class="number">1</span> <span class="keyword">from</span> 表<span class="number">1</span> pal <span class="keyword">where</span> pal.字段<span class="number">2</span><span class="operator">=</span>pa.字段<span class="number">2</span> <span class="keyword">and</span> pal.字段<span class="number">3</span><span class="operator">=</span>pa.字段<span class="number">3</span> limit <span class="number">1</span> )</span><br></pre></td></tr></table></figure><h2 id="数据表迁移"><a href="#数据表迁移" class="headerlink" title="数据表迁移"></a>数据表迁移</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>货品明细规格详情</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> REPLACE <span class="keyword">FUNCTION</span> &quot;test&quot;.&quot;transfer_goods_value_spec_data&quot;()</span><br><span class="line">  <span class="keyword">RETURNS</span> &quot;pg_catalog&quot;.&quot;void&quot; <span class="keyword">AS</span> $BODY$</span><br><span class="line"><span class="keyword">declare</span> </span><br><span class="line">goods_id <span class="type">integer</span>;</span><br><span class="line"><span class="comment">--value_id integer;</span></span><br><span class="line">prod_attr_id <span class="type">integer</span>;</span><br><span class="line"><span class="keyword">value</span> <span class="type">varchar</span>(<span class="number">144</span>);</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">for</span> goods_id,  prod_attr_id,<span class="keyword">value</span></span><br><span class="line"><span class="keyword">in</span>(<span class="keyword">select</span> t.goods_id <span class="keyword">as</span> &quot;goods_id&quot;,  t.prod_attr_id <span class="keyword">as</span> &quot;prod_attr_id&quot; ,t.value <span class="keyword">as</span> &quot;value&quot;</span><br><span class="line"><span class="keyword">from</span> </span><br><span class="line">dblink(<span class="string">&#x27;host=120.76.214.182  port=5432 dbname=lzy201808 user=odoo password=odoo&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;SELECT pp.id as goods_id,pal.id as prod_attr_id,pav.name as value FROM product_attribute_value_product_product_rel pavpp left join product_product pp on pp.id =pavpp.prod_id left join product_attribute_value pav on pav.id = pavpp.att_id left join product_attribute pa on pa.id = pav.attribute_id left join product_attribute_line pal on pal.product_tmpl_id =pp.product_tmpl_id and pal.attribute_id = pav.attribute_id where pa.type = 1 ORDER BY pp.id asc</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;</span>) <span class="keyword">as</span> t (goods_id <span class="type">int</span>,prod_attr_id <span class="type">int</span> ,<span class="keyword">value</span> <span class="type">VARCHAR</span> ))</span><br><span class="line">loop</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> &quot;test&quot;.&quot;prod_goods_value&quot; (&quot;goods_id&quot;, &quot;prod_attr_id&quot;,&quot;attr_value&quot;,&quot;attr_type&quot;) </span><br><span class="line"><span class="keyword">VALUES</span> (goods_id, prod_attr_id,<span class="keyword">value</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">END</span> loop;</span><br><span class="line"><span class="keyword">END</span>;  </span><br><span class="line">$BODY$</span><br><span class="line">  <span class="keyword">LANGUAGE</span> plpgsql VOLATILE</span><br><span class="line">  COST <span class="number">100</span></span><br></pre></td></tr></table></figure><h2 id="postgresql"><a href="#postgresql" class="headerlink" title="postgresql"></a>postgresql</h2><h2 id="mysql使用GROUP-CONCAT子查询多字符返回需求描述"><a href="#mysql使用GROUP-CONCAT子查询多字符返回需求描述" class="headerlink" title="mysql使用GROUP_CONCAT子查询多字符返回需求描述"></a>mysql使用GROUP_CONCAT子查询多字符返回<br>需求描述</h2><p>一个订单有多个类型，数据库保存type_ids字段为多个id用，隔开，查询某个订单所属类型详情时，返回类型对应的名称，即返回type_names为多个名称用，隔开。<br>解决方案</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> i.id, order_id,type_ids,</span><br><span class="line">(<span class="keyword">SELECT</span> GROUP_CONCAT(t.`name`) <span class="keyword">FROM</span> t_gas_type t <span class="keyword">WHERE</span> FIND_IN_SET(t.id,type_ids)) <span class="keyword">AS</span> type_names</span><br><span class="line"><span class="keyword">FROM</span> t_inspect i</span><br></pre></td></tr></table></figure><p>在一开始的应用中，使用了如下的解决方案，但是结果返回不正确。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">SELECT</span> i.id, order_id,gas_type_ids,</span><br><span class="line">(<span class="keyword">SELECT</span> GROUP_CONCAT(t.`name`) <span class="keyword">FROM</span> t_gas_type t <span class="keyword">WHERE</span> t.id <span class="keyword">in</span>(gas_type_ids)) <span class="keyword">AS</span> gas_type_names</span><br><span class="line"><span class="keyword">FROM</span> t_inspect i</span><br></pre></td></tr></table></figure><h2 id="mysql转换表类型为utf8mb4生成语句"><a href="#mysql转换表类型为utf8mb4生成语句" class="headerlink" title="mysql转换表类型为utf8mb4生成语句"></a>mysql转换表类型为utf8mb4生成语句</h2><p>SELECT CONCAT(‘ALTER TABLE ‘,TABLE_NAME,’ CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;’) from information_schema.TABLES WHERE TABLE_SCHEMA &#x3D; ‘dms_huizhou’;</p><h2 id="获取表结构字段"><a href="#获取表结构字段" class="headerlink" title="获取表结构字段"></a>获取表结构字段</h2><p>select * from INFORMATION_SCHEMA.COLUMNS<br>where table_schema &#x3D;’ums_ecology’</p><h2 id="mysql分页查询优化"><a href="#mysql分页查询优化" class="headerlink" title="mysql分页查询优化"></a>mysql分页查询优化</h2><p>原sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span>  <span class="keyword">from</span>  test <span class="keyword">order</span> <span class="keyword">by</span> id limit <span class="number">5</span>,<span class="number">10</span>;</span><br></pre></td></tr></table></figure><p>优化后sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> test <span class="keyword">where</span> id <span class="operator">&gt;=</span>(<span class="keyword">select</span> id <span class="keyword">from</span> test <span class="keyword">order</span> <span class="keyword">by</span> id <span class="keyword">desc</span> limit <span class="number">40</span>,<span class="number">1</span>) </span><br><span class="line">limit <span class="number">10</span></span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> test</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> id <span class="keyword">FROM</span> test <span class="keyword">ORDER</span> <span class="keyword">BY</span> id LIMIT <span class="number">50</span>, <span class="number">5</span>)</span><br><span class="line"><span class="keyword">USING</span> (id)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工作整理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 运维 </tag>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swagger注解释义与SpringBoot的集成</title>
      <link href="/2018/07/28/Swagger%E6%B3%A8%E8%A7%A3%E9%87%8A%E4%B9%89%E4%B8%8ESpringBoot%E7%9A%84%E9%9B%86%E6%88%90/"/>
      <url>/2018/07/28/Swagger%E6%B3%A8%E8%A7%A3%E9%87%8A%E4%B9%89%E4%B8%8ESpringBoot%E7%9A%84%E9%9B%86%E6%88%90/</url>
      
        <content type="html"><![CDATA[<!-- 展示图片 --><p><img src="http://blog.lutao1726.top/swagger-001.png" alt="Mou_icon"></p><span id="more"></span><h4 id="一、Swagger基础介绍"><a href="#一、Swagger基础介绍" class="headerlink" title="一、Swagger基础介绍"></a>一、Swagger基础介绍</h4><h5 id="1-什么是Swagger"><a href="#1-什么是Swagger" class="headerlink" title="1.什么是Swagger"></a>1.什么是Swagger</h5><p>描述REST API格式的一组规则（规范），OpenAPI（几十个知名互联网公司定制的API文档规范，Swagger就是其实现之一）的前身。Swagger让测试人员和开发人员之间文档共享。用于前后端分离，接口管理和测试工具集。 </p><h5 id="2-能做什么"><a href="#2-能做什么" class="headerlink" title="2.能做什么"></a>2.能做什么</h5><p>2.1.接口的文档在线自动生成<br>2.2.功能测试    </p><h5 id="3-版本"><a href="#3-版本" class="headerlink" title="3.版本"></a>3.版本</h5><p>3.1.Swagger1(很少用）<br>3.2.Swagger2（常用）<br>3.3.springfox-swagger2（用的最多）</p><h6 id="三者关系："><a href="#三者关系：" class="headerlink" title="三者关系："></a>三者关系：</h6><p>Swagger2是Swagger1的升级版。spring公司把swagger集成到自己的项目里，整了一个spring-swagger，后来便演变成springfox。springfox本身只是利用自身的aop的特点，通过plug的方式把swagger集成了进来，它本身对业务api的生成，还是依靠swagger来实现。</p><h5 id="4-Swagger主要工具"><a href="#4-Swagger主要工具" class="headerlink" title="4.Swagger主要工具"></a>4.Swagger主要工具</h5><p><img src="http://blog.lutao1726.top/swagger-002.png" alt="Mou_icon"><br><strong>Swagger编辑器</strong>：一个基于浏览器的编辑器，您可以在其中编写OpenAPI规范。<br><strong>Swagger-core</strong>: 用于Java&#x2F;Scala的的Swagger实现。与JAX-RS(Jersey、Resteasy、CXF…)、Servlets和Play框架进行集成。<br><strong>Swagger-ui</strong>：一个无依赖的HTML、JS和CSS集合，可以为Swagger兼容API动态生成优雅文档。<br><strong>Swagger-codegen</strong>：一个模板驱动引擎，通过分析用户Swagger资源声明以各种语言生成客户端代码。    </p><h4 id="二、注解说明"><a href="#二、注解说明" class="headerlink" title="二、注解说明"></a>二、注解说明</h4><table><thead><tr><th>注解</th><th align="left">使用位置</th><th align="center">取值</th><th align="left">说明</th></tr></thead><tbody><tr><td>@Api</td><td align="left">用于Controller类上</td><td align="center"></td><td align="left">协议集描述</td></tr><tr><td>@ApiModel</td><td align="left">用在返回对象类上</td><td align="center"></td><td align="left">对返回对象的描述</td></tr><tr><td>@ApiModelProperty</td><td align="left">用在出入参数对象的字段上</td><td align="center"></td><td align="left">描述对象属性</td></tr><tr><td>@ApiImplicitParam</td><td align="left">用在controller的方法上</td><td align="center"></td><td align="left">对API操作中的单个参数进行定义</td></tr><tr><td>@ApiImplicitParams</td><td align="left">用在@ApiImplicitParams的方法里边</td><td align="center"></td><td align="left">允许多个ApiImplicitParam对象列表的包装器，参看@ApiImplicitParam注解</td></tr><tr><td>@ApiOperation</td><td align="left">用在controller的方法上</td><td align="center"></td><td align="left">用来描述请求参数的作用</td></tr><tr><td>@ApiParam</td><td align="left">用在Controller类的方法上</td><td align="center"></td><td align="left">用来描述方法的作用</td></tr><tr><td>@ApiResponse</td><td align="left">用在@ApiResponses里边</td><td align="center"></td><td align="left">返回单个结果集(类)说明</td></tr><tr><td>@ApiResponses</td><td align="left">用在controller的方法上</td><td align="center"></td><td align="left">返回结果集说明，参考@ApiResponse</td></tr><tr><td>@Authorization</td><td align="left">用在controller的方法上</td><td align="center"></td><td align="left">定义用于资源或操作的授权方案</td></tr><tr><td>@AuthorizationScope</td><td align="left">用在controller的方法上</td><td align="center"></td><td align="left">用于定义为已定义授权方案的操作所使用的授权范围</td></tr><tr><td>@ResponseHeader</td><td align="left">用在controller的方法上</td><td align="center"></td><td align="left">响应可能提供的响应头列表</td></tr></tbody></table><p><strong>@Api</strong></p><table><thead><tr><th>属性</th><th align="left">说明</th></tr></thead><tbody><tr><td>value</td><td align="left">url的路径位置</td></tr><tr><td>tags</td><td align="left">设置该值，value值被覆盖</td></tr><tr><td>description</td><td align="left">对api资源的描述(过时)</td></tr><tr><td>basePath</td><td align="left">基本路径可以不配置(过时)</td></tr><tr><td>position</td><td align="left">如果配置了多个Api，可用该注解改变显示顺序(过时)</td></tr><tr><td>produces</td><td align="left">For example, “application&#x2F;json, application&#x2F;xml”</td></tr><tr><td>consumes</td><td align="left">For example, “application&#x2F;json, application&#x2F;xml”</td></tr><tr><td>protocols</td><td align="left">Possible values: http, https, ws, wss</td></tr><tr><td>authorizations</td><td align="left">高级特性认证时配置</td></tr><tr><td>hidden</td><td align="left">配置为true 将在文档中隐藏</td></tr><tr><td><strong>@ApiModel</strong></td><td align="left"></td></tr></tbody></table><table><thead><tr><th>属性</th><th align="left">说明</th></tr></thead><tbody><tr><td>value</td><td align="left">为模型提供一个替代名称，默认使用类名</td></tr><tr><td>description</td><td align="left">提供一个更长的类描述</td></tr><tr><td>parent</td><td align="left">为模型提供一个超类以允许描述继承</td></tr><tr><td>discriminator</td><td align="left">支持模型继承和多态性，这是用作鉴别器的字段的名称，基于这个字段，可以断言需要使用哪个子类型</td></tr><tr><td>subTypes</td><td align="left">继承自此模型的子类型的数组</td></tr><tr><td>reference</td><td align="left">指定对相应类型定义的引用，覆盖指定的任何其他元数据</td></tr><tr><td><strong>@ApiModelProperty</strong></td><td align="left"></td></tr></tbody></table><table><thead><tr><th>属性</th><th align="left">说明</th></tr></thead><tbody><tr><td>value</td><td align="left">属性的简要描述</td></tr><tr><td>name</td><td align="left">允许重写属性的名称</td></tr><tr><td>access</td><td align="left">允许从API文档中过滤参数</td></tr><tr><td>allowableValues</td><td align="left">限制此属性的可接受值</td></tr><tr><td>notes</td><td align="left">目前未使用</td></tr><tr><td>dataType</td><td align="left">参数的数据类型，这可以是类名或基元。该值将覆盖从类属性读取的数据类型</td></tr><tr><td>required</td><td align="left">指定是否需要参数，默认false</td></tr><tr><td>position</td><td align="left">允许显式地对模型中的属性进行排序</td></tr><tr><td>hidden</td><td align="left">允许模型属性隐藏在Swagger模型定义中</td></tr><tr><td>example</td><td align="left">属性的示例值</td></tr><tr><td>readOnly</td><td align="left">允许模型属性被指定为只读</td></tr><tr><td>reference</td><td align="left">指定对相应类型定义的引用，覆盖指定的任何其他元数据</td></tr><tr><td>allowEmptyValue</td><td align="left">允许传递空值</td></tr><tr><td><strong>@ApiImplicitParam</strong></td><td align="left"></td></tr></tbody></table><table><thead><tr><th>属性</th><th align="left">说明</th></tr></thead><tbody><tr><td>name</td><td align="left">参数的名称</td></tr><tr><td>value</td><td align="left">参数的简要描述</td></tr><tr><td>defaultValue</td><td align="left">描述参数的默认值</td></tr><tr><td>allowableValues</td><td align="left">限制此参数的可接受值</td></tr><tr><td>required</td><td align="left">指定是否需要参数，默认false</td></tr><tr><td>access</td><td align="left">允许从API文档中过滤参数</td></tr><tr><td>allowMultiple</td><td align="left">指定参数是否可以接受多个逗号分隔的值</td></tr><tr><td>dataType</td><td align="left">参数的数据类型，可以是类名或基元</td></tr><tr><td>dataTypeClass</td><td align="left">url的路径位置</td></tr><tr><td>paramType</td><td align="left">参数的参数类型，有效值是路径、查询、正文、标题或表单</td></tr><tr><td>example</td><td align="left">非主体类型参数的一个示例</td></tr><tr><td>examples</td><td align="left">参数示例。仅适用于body参数</td></tr><tr><td>type</td><td align="left">添加覆盖检测到的类型的能力</td></tr><tr><td>format</td><td align="left">添加提供自定义格式的功能</td></tr><tr><td>format</td><td align="left">添加提供自定义格式的功能</td></tr><tr><td>allowEmptyValue</td><td align="left">添加将格式设置为空的功能</td></tr><tr><td>collectionFormat</td><td align="left">添加使用’ array ‘类型覆盖collectionFormat的功能</td></tr></tbody></table><p><strong>@ApiOperation</strong></p><table><thead><tr><th>属性</th><th align="left">说明</th></tr></thead><tbody><tr><td>value</td><td align="left">操作的简要描述</td></tr><tr><td>notes</td><td align="left">操作的详细描述</td></tr><tr><td>tags</td><td align="left">标记可用于根据资源或任何其他限定符对操作进行逻辑分组，会覆盖value值</td></tr><tr><td>response</td><td align="left">操作的响应类型</td></tr><tr><td>responseContainer</td><td align="left">声明一个容器，有效值是“List”、“Set”或“Map”。其他任何值都将被忽略</td></tr><tr><td>responseReference</td><td align="left">指定对响应类型的引用，覆盖任何指定的response()类</td></tr><tr><td>httpMethod</td><td align="left">指定一种请求方式</td></tr><tr><td>position</td><td align="left">(过时)</td></tr><tr><td>nickname</td><td align="left">第三方工具使用operationId来惟一地标识该操作</td></tr><tr><td>produces</td><td align="left">对应于操作的“生成”字段，接受内容类型的逗号分隔值。例如，“application&#x2F;json, application&#x2F;xml”将建议此操作生成json和xml输出。</td></tr><tr><td>consumes</td><td align="left">接受内容类型的逗号分隔值。例如，“application&#x2F;json, application&#x2F;xml”将建议此API资源接受json和xml输入</td></tr><tr><td>protocols</td><td align="left">为该操作设置特定的协议(方案)，可用协议的逗号分隔值。可能的值:http、https、ws、wss。</td></tr><tr><td>authorizations</td><td align="left">获取此操作的授权(安全需求)列表</td></tr><tr><td>hidden</td><td align="left">从操作列表中隐藏操作</td></tr><tr><td>responseHeaders</td><td align="left">响应可能提供的响应头列表</td></tr><tr><td>code</td><td align="left">响应状态码，默认200</td></tr><tr><td>extensions</td><td align="left">可选的扩展数组</td></tr><tr><td><strong>@ApiParam</strong></td><td align="left"></td></tr></tbody></table><table><thead><tr><th>属性</th><th align="left">说明</th></tr></thead><tbody><tr><td>name</td><td align="left">参数名称</td></tr><tr><td>value</td><td align="left">参数简要描述</td></tr><tr><td>defaultValue</td><td align="left">参数的默认值</td></tr><tr><td>allowableValues</td><td align="left">限制可接受参数</td></tr><tr><td>required</td><td align="left">指定是否需要参数，默认false</td></tr><tr><td>access</td><td align="left">允许从API文档中过滤参数</td></tr><tr><td>allowMultiple</td><td align="left">指定参数是否可以通过多次出现来接受多个值</td></tr><tr><td>hidden</td><td align="left">从参数列表中隐藏参数</td></tr><tr><td>example</td><td align="left">非主体类型参数的一个示例</td></tr><tr><td>examples</td><td align="left">参数示例。仅适用于body参数</td></tr><tr><td>type</td><td align="left">添加覆盖检测到的类型的能力</td></tr><tr><td>format</td><td align="left">添加提供自定义格式的功能</td></tr><tr><td>allowEmptyValue</td><td align="left">添加将格式设置为empty的功能</td></tr><tr><td>readOnly</td><td align="left">增加被指定为只读的能力</td></tr><tr><td>collectionFormat</td><td align="left">添加使用’ array ‘类型覆盖collectionFormat的功能</td></tr><tr><td><strong>@ApiResponse</strong></td><td align="left"></td></tr></tbody></table><table><thead><tr><th>属性</th><th align="left">说明</th></tr></thead><tbody><tr><td>code</td><td align="left">状态码，默认200</td></tr><tr><td>message</td><td align="left">返回响应信息</td></tr><tr><td>response</td><td align="left">可选的响应类来描述消息的有效负载</td></tr><tr><td>reference</td><td align="left">指定对响应类型的引用，覆盖任何指定的response()类</td></tr><tr><td>responseHeaders</td><td align="left">响应可能提供的响应头列表</td></tr><tr><td>responseContainer</td><td align="left">声明一个响应容器，有效值是“List”、“Set”或“Map”。其他任何值都将被忽略</td></tr></tbody></table><p><strong>@Authorization</strong></p><table><thead><tr><th>属性</th><th align="left">说明</th></tr></thead><tbody><tr><td>value</td><td align="left">用于此资源&#x2F;操作的授权方案的名称</td></tr><tr><td>scopes</td><td align="left">如果授权模式是OAuth2，则使用的作用域</td></tr><tr><td><strong>@AuthorizationScope</strong></td><td align="left"></td></tr></tbody></table><table><thead><tr><th>属性</th><th align="left">说明</th></tr></thead><tbody><tr><td>scope</td><td align="left">使用OAuth2授权方案的范围，作用域应该在Swagger对象的securityDefinition部分中预先声明</td></tr><tr><td>description</td><td align="left">用于遗留支持</td></tr><tr><td><strong>@ResponseHeader</strong></td><td align="left"></td></tr></tbody></table><table><thead><tr><th>属性</th><th align="left">说明</th></tr></thead><tbody><tr><td>name</td><td align="left">响应头的名字</td></tr><tr><td>description</td><td align="left">响应头的长描述</td></tr><tr><td>response</td><td align="left">响应头的数据类型</td></tr><tr><td>responseContainer</td><td align="left">声明一个响应容器，有效值是“List”、“Set”或“Map”。其他任何值都将被忽略</td></tr></tbody></table><h4 id="三、与springBoot的集成"><a href="#三、与springBoot的集成" class="headerlink" title="三、与springBoot的集成"></a>三、与springBoot的集成</h4><h5 id="3-1-引入jar包"><a href="#3-1-引入jar包" class="headerlink" title="3.1.引入jar包"></a>3.1.引入jar包</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-2-创建Swagger配置类"><a href="#3-2-创建Swagger配置类" class="headerlink" title="3.2.创建Swagger配置类"></a>3.2.创建Swagger配置类</h5><pre><code class="java">@Configuration//配置类@EnableSwagger2//启用Swaggerpublic class SwaggerConfig &#123;    @Bean//加入到spring的容器中    public Docket createRestApi() &#123;        return new Docket(DocumentationType.SWAGGER_2)                .pathMapping(&quot;/&quot;)                .select()                .apis(RequestHandlerSelectors.basePackage(&quot;com.ergou.springswagger.controller&quot;))//需要扫描的包路径                .paths(PathSelectors.any())                .build()                .apiInfo(testApiInfo());    &#125;    private ApiInfo testApiInfo() &#123;        return new ApiInfoBuilder()                .title(&quot;springBoot集成swagger构建api文档&quot;)//标题                .description(&quot;详细描述&quot;)//详细描述                .version(&quot;1.0&quot;)//版本                .termsOfServiceUrl(&quot;服务地址&quot;)                .contact(new Contact(&quot;123&quot;,&quot;https://www.jianshu.com/&quot;,&quot;123@163.com&quot;))//作者的一些信息                .license(&quot;The Apache License, Version 2.0&quot;)//发布遵循协议                .licenseUrl(&quot;http://www.apache.org/licenses/LICENSE-2.0.html&quot;)//协议地址                .build();    &#125;&#125;</code></pre><h5 id="3-3-测试"><a href="#3-3-测试" class="headerlink" title="3.3.测试"></a>3.3.测试</h5><p>在浏览器中输入：<a href="http://localhost:8080/swagger-ui.html%EF%BC%8C%E7%AB%AF%E5%8F%A3%E5%8F%B7%E6%94%B9%E6%88%90%E8%87%AA%E5%B7%B1%E9%85%8D%E7%BD%AE%E7%9A%84%E3%80%82">http://localhost:8080/swagger-ui.html，端口号改成自己配置的。</a><br><img src="http://blog.lutao1726.top/swagger-003.png" alt="Mou_icon"></p><p><a href="https://doc.xiaominfo.com/guide/">详情</a></p>]]></content>
      
      
      <categories>
          
          <category> Java教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gitlab安装与汉化</title>
      <link href="/2018/07/05/gitLab%E5%AE%89%E8%A3%85/"/>
      <url>/2018/07/05/gitLab%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="gitlab安装与汉化相关资料"><a href="#gitlab安装与汉化相关资料" class="headerlink" title="gitlab安装与汉化相关资料"></a>gitlab安装与汉化相关资料</h1><p>环境说明：<br>虚拟机 centos7 64位<br>内存：3GB<br>存储：20GB</p><p>版本：gitlab 10.0.3</p><h2 id="配置基础环境"><a href="#配置基础环境" class="headerlink" title="配置基础环境"></a>配置基础环境</h2><p>安装wget</p><blockquote><p>sudo yum -y install wget</p></blockquote><p>配置阿里巴巴 yum 源</p><blockquote><p>wget -O &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo <a href="http://mirrors.aliyun.com/repo/Centos-7.repo">http://mirrors.aliyun.com/repo/Centos-7.repo</a></p></blockquote><p>重建yum 的缓存</p><blockquote><p>  yum clean all<br>    yum makecache</p></blockquote><p>安装 git</p><blockquote><p>yum install -y git</p></blockquote><p>创建 gitlab汉化版的源码目录，等一下使用git clone 一份新的代码</p><blockquote><p>mkdir gitlab_zh<br> cd gitlab_zh<br> git clone <a href="https://gitlab.com/xhang/gitlab.git">https://gitlab.com/xhang/gitlab.git</a></p></blockquote><p>安装 gitlab 的依赖包</p><blockquote><p>  yum install curl openssh-server openssh-clients postfix cronie policycoreutils-python –y<br>    yum install -y patch</p></blockquote><p>启动 postfix，并且设置为开机启动</p><blockquote><p>  systemctl start postfix<br> systemctl enable postfix</p></blockquote><p> 设置防火墙</p><blockquote><p>firewall-cmd –add-service&#x3D;http –permanent<br>firewall-cmd –reload</p></blockquote><h2 id="gitlab安装"><a href="#gitlab安装" class="headerlink" title="gitlab安装"></a>gitlab安装</h2><p>大家从网上下载好 gitlab 的rpm 包后，就可以安装了<br>gitlab 下载地址：</p><blockquote><p><a href="https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/">https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/yum/el7/</a></p></blockquote><p>安装：</p><blockquote><p>rpm -i gitlab-ce-10.0.3-ce.0.el7.x86_64.rpm</p></blockquote><p>当 shell 中出现以下内容，则证明 gitlab 的程序安装完了</p><p><img src="/../images/gitlab-01.png"></p><p>继续安装提示执行配置 gitlab 的命令</p><blockquote><p>gitlab-ctl reconfigure</p></blockquote><p>修改 gitlab 的配置文件</p><blockquote><p>vi &#x2F;etc&#x2F;gitlab&#x2F;gitlab.rb</p></blockquote><p>修改里面的 external_url 参数，例如我的机器的IP地址为 192.168.1.4</p><blockquote><p>external_url&#x3D;’<a href="http://192.168.1.4/">http://192.168.1.4</a>‘</p></blockquote><p>重新加载配置文件</p><blockquote><p>gitlab-ctl reconfigure</p></blockquote><h2 id="gitlab汉化"><a href="#gitlab汉化" class="headerlink" title="gitlab汉化"></a>gitlab汉化</h2><p>停止 gitlab 服务</p><blockquote><p>gitlab-ctl stop</p></blockquote><p>切换到刚才下载的汉化包目录</p><blockquote><p>cd &#x2F;root&#x2F;source&#x2F;gitlab_zh&#x2F;gitlab&#x2F;</p></blockquote><p>找出安装的 10.0.3 版本和 汉化版本10.0.4 中的不同点</p><blockquote><p>git diff v10.0.3 v10.0.4-zh &gt; ..&#x2F;10.0.3-zh.diff</p></blockquote><p>目录倒退一层</p><blockquote><p>cd ..&#x2F;</p></blockquote><p>将 10.0.3-zh.diff 的补丁添加到 gitlab 中</p><blockquote><p>patch -d &#x2F;opt&#x2F;gitlab&#x2F;embedded&#x2F;service&#x2F;gitlab-rails -p1 &lt; 10.0.3-zh.diff</p></blockquote><p>重新配置 gitlab</p><blockquote><p>gitlab-ctl reconfigure</p></blockquote><p>重新启动 gitlab 服务</p><blockquote><p>gitlab-ctl restart</p></blockquote><p>浏览器访问gitlab</p><blockquote><p><a href="http://192.168.1.4/">http://192.168.1.4:80</a></p></blockquote><p><img src="/../images/gitlab-02.png"></p><h2 id="gitlab报错处理"><a href="#gitlab报错处理" class="headerlink" title="gitlab报错处理"></a>gitlab报错处理</h2><p>1.登录502报错<br>一般是权限问题，解决方法：</p><blockquote><p>chmod -R 755 &#x2F;var&#x2F;log&#x2F;gitlab</p></blockquote><p>如果还不行，请检查你的内存，安装使用GitLab需要至少4GB可用内存,少于4GB内存会出现各种诡异的问题, 而且在使用过程中也经常会出现500错误.</p><p>参考资料：<br>    <a href="https://www.cnblogs.com/wenwei-blog/p/5861450.html">https://www.cnblogs.com/wenwei-blog/p/5861450.html</a><br>    <a href="http://www.cnblogs.com/lt1726/">http://www.cnblogs.com/lt1726/</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Linux </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shipyard安装</title>
      <link href="/2018/06/30/Docker%E7%AE%A1%E7%90%86%E5%AE%B9%E5%99%A8/"/>
      <url>/2018/06/30/Docker%E7%AE%A1%E7%90%86%E5%AE%B9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="CentOS-Docker-Shipyard安装"><a href="#CentOS-Docker-Shipyard安装" class="headerlink" title="CentOS Docker Shipyard安装"></a>CentOS Docker Shipyard安装</h1><h2 id="Shipyard介绍"><a href="#Shipyard介绍" class="headerlink" title="Shipyard介绍"></a>Shipyard介绍</h2><p>Shipyard（github）是建立在docker集群管理工具Citadel之上的可以管理容器、主机等资源的web图形化工具,包括core和extension两个版本，core即shipyard主要是把多个 Docker host上的 containers 统一管理（支持跨越多个host），extension即shipyard-extensions添加了应用路由和负载均衡、集中化日志、部署等;Shipyard是在Docker Swarm实现对容器、镜像、docker集群、仓库、节点进行管理的web系统。</p><h2 id="了解Shipyard几个概念"><a href="#了解Shipyard几个概念" class="headerlink" title="了解Shipyard几个概念"></a>了解Shipyard几个概念</h2><blockquote><p> 1）engine<br>   一个shipyard管理的docker集群可以包含一个或多个engine（引擎），一个engine就是监听tcp端口的docker daemon。<br>   shipyard管理docker daemon、images、containers完全基于Docker API，不需要做其他的修改。<br>   另外，shipyard可以对每个engine做资源限制，包括CPU和内存；因为TCP监听相比Unix socket方式会有一定的安全隐患，<br>   所以shipyard还支持通过SSL证书与docker后台进程安全通信。</p></blockquote><blockquote><p>  2）rethinkdb<br>   RethinkDB是一个shipyard项目的一个docker镜像，用来存放账号（account）、引擎（engine）、服务密钥（service key）、<br>   扩展元数据（extension metadata）等信息，但不会存储任何有关容器或镜像的内容。</p></blockquote><h2 id="Shipyard生态"><a href="#Shipyard生态" class="headerlink" title="Shipyard生态"></a>Shipyard生态</h2><p>shipyard是由shipyard控制器以及周围生态系统构成，以下按照deploy启动顺序进行介绍（下面几个就是shipyard使用脚本安装后，启动的几个容器名）</p><blockquote><p>1）RethinkDB<br> deploy首先启动的就是RethinkDB容器，shipyard采用RethinkDB作为数据库来保存用户等信息</p></blockquote><blockquote><p>2）Discovery<br> 为了使用Swarm，我们需要一个外部的密钥值存储群容器，shipyard默认是采用了etcd。</p></blockquote><blockquote><p>3）shipyard_certs<br> 证书管理容器，实现证书验证功能</p></blockquote><blockquote><p>4）Proxy<br> 默认情况下，Docker引擎只监听Socket，我们可以重新配置引擎使用TLS或者使用一个代理容器，转发请求从TCP到Docker监听的UNIX Socket。</p></blockquote><blockquote><p>5）Swarm Manager<br> Swarm管理器</p></blockquote><blockquote><p>6）Swarm Agent<br> Swarm代理，运行在每个节点上。</p></blockquote><blockquote><p>7）Controller<br> shipyard控制器，Remote API的实现和web的实现。</p></blockquote><h2 id="Shipyard部署过程"><a href="#Shipyard部署过程" class="headerlink" title="Shipyard部署过程"></a>Shipyard部署过程</h2><p>部署脚本链接：<br><a href="http://ou38qmztk.bkt.clouddn.com/deploy.sh">http://ou38qmztk.bkt.clouddn.com/deploy.sh</a></p><p>在linux下直接执行命令安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -s http://codeimages.lutao1726.top/deploy.sh | bash -s</span><br></pre></td></tr></table></figure><h2 id="Shipyard汉化"><a href="#Shipyard汉化" class="headerlink" title="Shipyard汉化"></a>Shipyard汉化</h2><p>汉化脚本链接：<br><a href="http://codeimages.lutao1726.top/shipyard_cn.sh">http://codeimages.lutao1726.top/shipyard_cn.sh</a></p><h2 id="在linux下直接执行脚本Shipyard节点添加"><a href="#在linux下直接执行脚本Shipyard节点添加" class="headerlink" title="在linux下直接执行脚本Shipyard节点添加"></a>在linux下直接执行脚本<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -s http://codeimages.lutao1726.top/shipyard_cn.sh | bash -s</span><br></pre></td></tr></table></figure><br>Shipyard节点添加</h2><p>在linux下直接执行脚本(192.168.1.237为manager节点ip，替换成自己Shipyard相应的ip)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -s  http://codeimages.lutao1726.top/deploy.sh  | ACTION=node DISCOVERY=etcd://://192.168.1.237:4001 bash -s</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Linux </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker相关整理</title>
      <link href="/2018/06/25/Docker%E7%9B%B8%E5%85%B3%E6%95%B4%E7%90%86/"/>
      <url>/2018/06/25/Docker%E7%9B%B8%E5%85%B3%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="CentOS-Docker-安装"><a href="#CentOS-Docker-安装" class="headerlink" title="CentOS Docker 安装"></a>CentOS Docker 安装</h1><h2 id="使用-yum-安装"><a href="#使用-yum-安装" class="headerlink" title="使用 yum 安装"></a>使用 yum 安装</h2><p>Docker 要求 CentOS 系统的内核版本高于 3.10 ，查看本页面的前提条件来验证你的CentOS 版本是否支持 Docker 。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br></pre></td></tr></table></figure><p><img src="http://www.runoob.com/wp-content/uploads/2016/05/docker08.png"></p><h2 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h2><h1 id="从-2017-年-3-月开始-docker-在原来的基础上分为两个分支版本-Docker-CE-和-Docker-EE。Docker-CE-即社区免费版，Docker-EE-即企业版，强调安全，但需付费使用。本文介绍-Docker-CE-的安装使用。移除旧的版本：安装一些必要的系统工具：添加软件源信息：更新-yum-缓存：安装docker-ce启动-Docker-后台服务解决非root用户使用docker的办法"><a href="#从-2017-年-3-月开始-docker-在原来的基础上分为两个分支版本-Docker-CE-和-Docker-EE。Docker-CE-即社区免费版，Docker-EE-即企业版，强调安全，但需付费使用。本文介绍-Docker-CE-的安装使用。移除旧的版本：安装一些必要的系统工具：添加软件源信息：更新-yum-缓存：安装docker-ce启动-Docker-后台服务解决非root用户使用docker的办法" class="headerlink" title="从 2017 年 3 月开始 docker 在原来的基础上分为两个分支版本: Docker CE 和 Docker EE。Docker CE 即社区免费版，Docker EE 即企业版，强调安全，但需付费使用。本文介绍 Docker CE 的安装使用。移除旧的版本：安装一些必要的系统工具：添加软件源信息：更新 yum 缓存：安装docker-ce启动 Docker 后台服务解决非root用户使用docker的办法"></a>从 2017 年 3 月开始 docker 在原来的基础上分为两个分支版本: Docker CE 和 Docker EE。<br>Docker CE 即社区免费版，Docker EE 即企业版，强调安全，但需付费使用。<br>本文介绍 Docker CE 的安装使用。<br>移除旧的版本：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove docker \</span><br><span class="line">              docker-client \</span><br><span class="line">              docker-client-latest \</span><br><span class="line">              docker-common \</span><br><span class="line">              docker-latest \</span><br><span class="line">              docker-latest-logrotate \</span><br><span class="line">              docker-logrotate \</span><br><span class="line">              docker-selinux \</span><br><span class="line">              docker-engine-selinux \</span><br><span class="line">              docker-engine</span><br></pre></td></tr></table></figure><br>安装一些必要的系统工具：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><br>添加软件源信息：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><br>更新 yum 缓存：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum makecache fast</span><br></pre></td></tr></table></figure><br>安装docker-ce<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y install docker-ce</span><br></pre></td></tr></table></figure><br>启动 Docker 后台服务<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><br>解决非root用户使用docker的办法</h1><p>创建docker组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo groupadd docker</span><br></pre></td></tr></table></figure><p>将当前用户加入docker组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gpasswd -a $&#123;USER&#125; docker</span><br></pre></td></tr></table></figure><p>重新启动docker服务（下面是CentOS7的命令）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service docker restart或sudo systemctl restart docker</span><br></pre></td></tr></table></figure><p>当前用户退出系统重新登陆即可</p><p>dockerexec不同用户登入<br>docker exec -it –user root &lt;容器ID&gt; &#x2F;bin&#x2F;bash<br><img src="https://www.2cto.com/uploadfile/Collfiles/20180403/201804030931161219.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Linux </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos修改主机名的正确方法</title>
      <link href="/2018/06/19/centos%E4%BF%AE%E6%94%B9%E4%B8%BB%E6%9C%BA%E5%90%8D%E7%9A%84%E6%AD%A3%E7%A1%AE%E6%96%B9%E6%B3%95/"/>
      <url>/2018/06/19/centos%E4%BF%AE%E6%94%B9%E4%B8%BB%E6%9C%BA%E5%90%8D%E7%9A%84%E6%AD%A3%E7%A1%AE%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="1-centos6下修改hostname"><a href="#1-centos6下修改hostname" class="headerlink" title="1.centos6下修改hostname"></a>1.centos6下修改hostname</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@centos6 ~]$ hostname                                              <span class="comment"># 查看当前的hostnmae</span></span><br><span class="line">centos6.magedu.com</span><br><span class="line">[root@centos6 ~]$ vim /etc/sysconfig/network                            <span class="comment"># 编辑network文件修改hostname行（重启生效）</span></span><br><span class="line">[root@centos6 ~]$ <span class="built_in">cat</span> /etc/sysconfig/network                            <span class="comment"># 检查修改</span></span><br><span class="line">NETWORKING=<span class="built_in">yes</span></span><br><span class="line">HOSTNAME=lutao1726.top</span><br><span class="line">[root@centos6 ~]$ hostname lutao1726.top                                <span class="comment"># 设置当前的hostname(立即生效）</span></span><br><span class="line">[root@centos6 ~]$ vim /etc/hosts                                        <span class="comment"># 编辑hosts文件，给127.0.0.1添加hostname</span></span><br><span class="line">[root@centos6 ~]$ <span class="built_in">cat</span> /etc/hosts                                        <span class="comment"># 检查</span></span><br><span class="line">127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4 lutao1726.top</span><br><span class="line">::1 localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br></pre></td></tr></table></figure><h2 id="2-centos7下修改hostname"><a href="#2-centos7下修改hostname" class="headerlink" title="2.centos7下修改hostname"></a>2.centos7下修改hostname</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]$ hostnamectl set-hostname lutao1726.top                   <span class="comment"># 使用这个命令会立即生效且重启也生效</span></span><br><span class="line">[root@centos7 ~]$ hostname                                                 <span class="comment"># 查看下</span></span><br><span class="line">lutao1726.top</span><br><span class="line">[root@centos7 ~]$ vim /etc/hosts                                           <span class="comment"># 编辑下hosts文件， 给127.0.0.1添加hostname</span></span><br><span class="line">[root@centos7 ~]$ <span class="built_in">cat</span> /etc/hosts                                           <span class="comment"># 检查</span></span><br><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4 lutao1726.top</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud 服务冲突和实例乱窜</title>
      <link href="/2018/06/11/SpringCloud%20%E6%9C%8D%E5%8A%A1%E5%86%B2%E7%AA%81%E5%92%8C%E5%AE%9E%E4%BE%8B%E4%B9%B1%E7%AA%9C/"/>
      <url>/2018/06/11/SpringCloud%20%E6%9C%8D%E5%8A%A1%E5%86%B2%E7%AA%81%E5%92%8C%E5%AE%9E%E4%BE%8B%E4%B9%B1%E7%AA%9C/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式(4)-单例模式</title>
      <link href="/2018/06/05/DesignPatterns(4)/"/>
      <url>/2018/06/05/DesignPatterns(4)/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="单例模式（Singleton）"><a href="#单例模式（Singleton）" class="headerlink" title="单例模式（Singleton）"></a>单例模式（Singleton）</h2><p><code>单例对象（Singleton）是一种常用的设计模式。在Java应用中，单例对象能保证在一个JVM中，该对象只有一个实例存在。这样的模式有几个好处：</code></p><blockquote><p>1.某些类创建比较频繁，对于一些大型的对象，这是一笔很大的系统开销。<br>2.省去了new操作符，降低了系统内存的使用频率，减轻GC压力。<br>3.有些类如交易所的核心交易引擎，控制着交易流程，如果该类可以创建多个的话，系统完全乱了。（比如一个军队出现了多个司令员同时指挥，肯定会乱成一团），所以只有使用单例模式，才能保证核心交易服务器独立控制整个流程。</p></blockquote><p><code>饿汉式</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Singleton</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Singleton</span> <span class="variable">singleton</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Singleton</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Singleton</span><span class="params">()</span>&#123;&#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton <span class="title function_">getInstance</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>懒汉式</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Singleton</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Singleton</span> <span class="variable">singleton</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Singleton</span><span class="params">()</span>&#123;&#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton <span class="title function_">getInstance</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(singleton==<span class="literal">null</span>)</span><br><span class="line">            singleton= <span class="keyword">new</span> <span class="title class_">Single</span>();</span><br><span class="line">        <span class="keyword">return</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> 设计模式教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式(3)-抽象工厂模式</title>
      <link href="/2018/05/30/DesignPatterns(3)/"/>
      <url>/2018/05/30/DesignPatterns(3)/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="抽象工厂模式（Abstract-Factory）"><a href="#抽象工厂模式（Abstract-Factory）" class="headerlink" title="抽象工厂模式（Abstract Factory）"></a>抽象工厂模式（Abstract Factory）</h2><blockquote><p>工厂方法模式有一个问题就是，类的创建依赖工厂类，也就是说，如果想要拓展程序，必须对工厂类进行修改，这违背了闭包原则，所以，从设计角度考虑，有一定的问题，如何解决？就用到抽象工厂模式，创建多个工厂类，这样一旦需要增加新的功能，直接增加新的工厂类就可以了，不需要修改之前的代码。因为抽象工厂不太好理解，我们先看看图，然后就和代码，就比较容易理解。</p></blockquote><p><img src="http://dl2.iteye.com/upload/attachment/0083/1185/34a0f8de-16e0-3cd5-9f69-257fcb2be742.jpg?_=3023236" alt="Mou icon"></p><p>Sender代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Sender</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Send</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MailSender代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MailSender</span> <span class="keyword">implements</span> <span class="title class_">Sender</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Send</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;this is MailSender&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SmsSender代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SmsSender</span> <span class="keyword">implements</span> <span class="title class_">Sender</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Send</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;this is SmsSender&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Provider代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Provider</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> Sender <span class="title function_">produce</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SendMailFactory代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SendMailFactory</span> <span class="keyword">implements</span> <span class="title class_">Provider</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Sender <span class="title function_">produce</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MailSender</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SendSmsFactory代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SendSmsFactory</span> <span class="keyword">implements</span> <span class="title class_">Provider</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Sender <span class="title function_">produce</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SmsSender</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Test代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">Provider</span> <span class="variable">provider</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SendMailFactory</span>();</span><br><span class="line">        <span class="type">Sender</span> <span class="variable">sender</span> <span class="operator">=</span> provider.produce();</span><br><span class="line">        sender.Send();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>其实这个模式的好处就是，如果你现在想增加一个功能：发及时信息，则只需做一个实现类，实现Sender接口，同时做一个工厂类，实现Provider接口，就OK了，无需去改动现成的代码。这样做，拓展性较好！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 设计模式教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式(2)-工厂模式</title>
      <link href="/2018/05/25/DesignPatterns(2)/"/>
      <url>/2018/05/25/DesignPatterns(2)/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="工厂方法模式（Factory-Method）"><a href="#工厂方法模式（Factory-Method）" class="headerlink" title="工厂方法模式（Factory Method）"></a>工厂方法模式（Factory Method）</h2><p>工厂方法模式分为三种：</p><ul><li><code>普通工厂模式</code><blockquote><p>就是建立一个工厂类，对实现了同一接口的一些类进行实例的创建。首先看下关系图：</p></blockquote></li></ul><p><img src="http://dl2.iteye.com/upload/attachment/0083/1180/421a1a3f-6777-3bca-85d7-00fc60c1ae8b.png?_=3023236" alt="Mou icon"><br>Sender代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Sender</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Send</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MailSender代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MailSender</span> <span class="keyword">implements</span> <span class="title class_">Sender</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Send</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;this is MailSender&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SmsSender代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SmsSender</span> <span class="keyword">implements</span> <span class="title class_">Sender</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Send</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;this is SmsSender&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SendFactory代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SendFactory</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> Sender <span class="title function_">produce</span><span class="params">(String type)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;mail&quot;</span>.equals(type))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MailSender</span>();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&quot;sms&quot;</span>.equals(type))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SmsSender</span>();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入正确的类型!&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>  <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>FactoryTest代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FactoryTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span>  <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">SendFactory</span> <span class="variable">factory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SendFactory</span>();</span><br><span class="line">        <span class="type">Sender</span> <span class="variable">sender</span> <span class="operator">=</span> factory.produce(<span class="string">&quot;sms&quot;</span>);</span><br><span class="line">        sender.Send();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>多个工厂方法模式</code><blockquote><p>是对普通工厂方法模式的改进，在普通工厂方法模式中，如果传递的字符串出错，则不能正确创建对象，而多个工厂方法模式是提供多个工厂方法，分别创建对象。关系图：</p></blockquote></li></ul><p><img src="http://dl2.iteye.com/upload/attachment/0083/1181/84673ccf-ef89-3774-b5cf-6d2523cd03e5.jpg?_=3023236" alt="Mou icon"><br>Sender代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Sender</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Send</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MailSender代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MailSender</span> <span class="keyword">implements</span> <span class="title class_">Sender</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Send</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;this is MailSender&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SmsSender代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SmsSender</span> <span class="keyword">implements</span> <span class="title class_">Sender</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Send</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;this is SmsSender&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SendFactory代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SendFactory</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> Sender <span class="title function_">produceMail</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MailSender</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Sender <span class="title function_">produceSms</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SmsSender</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>FactoryTest代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FactoryTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span>  <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">SendFactory</span> <span class="variable">factory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SendFactory</span>();</span><br><span class="line">        <span class="type">Sender</span> <span class="variable">sender</span> <span class="operator">=</span> factory.produceMail();</span><br><span class="line">        sender.Send();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>静态工厂模式</code><blockquote><p>将上面的多个工厂方法模式里的方法置为静态的，不需要创建实例，直接调用即可。</p></blockquote></li></ul><h2 id="Sender代码-MailSender代码-SmsSender代码-SendFactory代码-FactoryTest代码-总结"><a href="#Sender代码-MailSender代码-SmsSender代码-SendFactory代码-FactoryTest代码-总结" class="headerlink" title="Sender代码:MailSender代码:SmsSender代码:SendFactory代码:FactoryTest代码:总结"></a>Sender代码:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Sender</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Send</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>MailSender代码:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MailSender</span> <span class="keyword">implements</span> <span class="title class_">Sender</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Send</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;this is MailSender&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>SmsSender代码:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SmsSender</span> <span class="keyword">implements</span> <span class="title class_">Sender</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Send</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;this is SmsSender&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>SendFactory代码:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SendFactory</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Sender <span class="title function_">produceMail</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MailSender</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Sender <span class="title function_">produceSms</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SmsSender</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>FactoryTest代码:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FactoryTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span>  <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">Sender</span> <span class="variable">sender</span> <span class="operator">=</span> SendFactory.produceMail();</span><br><span class="line">        sender.Send();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>总结</h2><blockquote><p>总体来说，工厂模式适合：凡是出现了大量的产品需要创建，并且具有共同的接口时，可以通过工厂方法模式进行创建。在以上的三种模式中，第一种如果传入的字符串有误，不能正确创建对象，第三种相对于第二种，不需要实例化工厂类，所以，大多数情况下，我们会选用第三种——静态工厂方法模式。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 设计模式教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dubbo使用总结</title>
      <link href="/2018/05/19/Dubbo%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/"/>
      <url>/2018/05/19/Dubbo%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<!-- 展示图片 --><p><img src="http://justyy.com/wp-content/uploads/2016/01/markdown-syntax-language.png" alt="Mou_icon"></p>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 微服务 </tag>
            
            <tag> 分布式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式(1)-总览</title>
      <link href="/2018/05/19/DesignPatterns(1)/"/>
      <url>/2018/05/19/DesignPatterns(1)/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h1><blockquote><p>设计模式（Design pattern）代表了最佳的实践，通常被有经验的面向对象的软件开发人员所采用。设计模式是软件开发人员在软件开发过程中面临的一般问题的解决方案。这些解决方案是众多软件开发人员经过相当长的一段时间的试验和错误总结出来的。<br>设计模式是一套被反复使用的、多数人知晓的、经过分类编目的、代码设计经验的总结。使用设计模式是为了重用代码、让代码更容易被他人理解、保证代码可靠性。 毫无疑问，设计模式于己于他人于系统都是多赢的，设计模式使代码编制真正工程化，设计模式是软件工程的基石，如同大厦的一块块砖石一样。项目中合理地运用设计模式可以完美地解决很多问题，每种模式在现实中都有相应的原理来与之对应，每种模式都描述了一个在我们周围不断重复发生的问题，以及该问题的核心解决方案，这也是设计模式能被广泛应用的原因。</p></blockquote><p><img src="http://www.runoob.com/wp-content/uploads/2014/08/the-relationship-between-design-patterns.jpg" alt="Mou icon"></p><table><thead><tr><th>序号</th><th align="left">模式&amp;描述</th><th align="center">包括</th></tr></thead><tbody><tr><td>1</td><td align="left"><strong>创建型模式</strong><br/><code>这些设计模式提供了一种在创建对象的同时隐藏创建逻辑的方式，</code><br/><code>而不是使用 new 运算符直接实例化对象。这使得程序在判断针对某个</code><br/><code>给定实例需要创建哪些对象时更加灵活。</code></td><td align="center"><a href="https://gitee.com/lutao1726/DesignPatterns/tree/master/src/cn/com/lutao/factoryMethod">工厂方法模式（Factory Method）</a><br/> <a href="https://gitee.com/lutao1726/DesignPatterns/tree/master/src/cn/com/lutao/abstractFactory">抽象工厂模式（Abstract Factory）</a><br/><a href="https://gitee.com/lutao1726/DesignPatterns/tree/master/src/cn/com/lutao/singleton">单例模式（Singleton）</a><br/><a href="https://gitee.com/lutao1726/DesignPatterns/tree/master/src/cn/com/lutao/builder">建造者模式</a><br/>原型模式（Prototype Pattern）</td></tr><tr><td>2</td><td align="left"><strong>结构型模式</strong> <br/><code>这些设计模式关注类和对象的组合。继承的概念被用来组合接口和定义</code><br/><code>组合对象获得新功能的方式。</code></td><td align="center"><a href="https://gitee.com/lutao1726/DesignPatterns/tree/master/src/cn/com/lutao/adapter">适配器模式</a><br/> 桥接模式（Bridge Pattern）<br/>过滤器模式（Filter、Criteria Pattern）<br/>组合模式（Composite Pattern）<br/>装饰器模式（Decorator Pattern）<br/>外观模式（Facade Pattern）<br/>享元模式（Flyweight Pattern）<br/>代理模式（Proxy Pattern）</td></tr><tr><td>3</td><td align="left"><strong>行为型模式</strong><br/><code> 这些设计模式特别关注对象之间的通信。</code></td><td align="center">责任链模式（Chain of Responsibility Pattern）<br/>命令模式（Command Pattern）<br/>解释器模式（Interpreter Pattern）<br/>迭代器模式（Iterator Pattern）<br/>中介者模式（Mediator Pattern） <br/>备忘录模式（Memento Pattern） <br/>观察者模式（Observer Pattern） <br/>状态模式（State Pattern）<br/>空对象模式（Null Object Pattern）<br/> 策略模式（Strategy Pattern）<br/>模板模式（Template Pattern）<br/> 访问者模式（Visitor Pattern）</td></tr></tbody></table><h2 id="设计模式的六大原则"><a href="#设计模式的六大原则" class="headerlink" title="设计模式的六大原则"></a>设计模式的六大原则</h2><p><strong>1、开闭原则（Open Close Principle）</strong></p><blockquote><p>开闭原则的意思是：对扩展开放，对修改关闭。在程序需要进行拓展的时候，不能去修改原有的代码，实现一个热插拔的效果。简言之，是为了使程序的扩展性好，易于维护和升级。想要达到这样的效果，我们需要使用接口和抽象类，后面的具体设计中我们会提到这点。</p></blockquote><p><strong>2、里氏代换原则（Liskov Substitution Principle）</strong></p><blockquote><p>里氏代换原则是面向对象设计的基本原则之一。 里氏代换原则中说，任何基类可以出现的地方，子类一定可以出现。LSP 是继承复用的基石，只有当派生类可以替换掉基类，且软件单位的功能不受到影响时，基类才能真正被复用，而派生类也能够在基类的基础上增加新的行为。里氏代换原则是对开闭原则的补充。实现开闭原则的关键步骤就是抽象化，而基类与子类的继承关系就是抽象化的具体实现，所以里氏代换原则是对实现抽象化的具体步骤的规范。</p></blockquote><p><strong>3、依赖倒转原则（Dependence Inversion Principle）</strong></p><blockquote><p>这个原则是开闭原则的基础，具体内容：针对接口编程，依赖于抽象而不依赖于具体。</p></blockquote><p><strong>4、接口隔离原则（Interface Segregation Principle）</strong></p><blockquote><p>这个原则的意思是：使用多个隔离的接口，比使用单个接口要好。它还有另外一个意思是：降低类之间的耦合度。由此可见，其实设计模式就是从大型软件架构出发、便于升级和维护的软件设计思想，它强调降低依赖，降低耦合。</p></blockquote><p><strong>5、迪米特法则，又称最少知道原则（Demeter Principle）</strong></p><blockquote><p>最少知道原则是指：一个实体应当尽量少地与其他实体之间发生相互作用，使得系统功能模块相对独立。</p></blockquote><p><strong>6、合成复用原则（Composite Reuse Principle）</strong></p><blockquote><p>合成复用原则是指：尽量使用合成&#x2F;聚合的方式，而不是使用继承。</p></blockquote><p><strong>总结小记</strong></p><p>开闭原则：实现热插拔，提高扩展性。</p><p>里氏代换原则：实现抽象的规范，实现子父类互相替换；</p><p>依赖倒转原则：针对接口编程，实现开闭原则的基础；</p><p>接口隔离原则：降低耦合度，接口单独设计，互相隔离；</p><p>迪米特法则，又称不知道原则：功能模块尽量独立；</p><p>合成复用原则：尽量使用聚合，组合，而不是继承；</p>]]></content>
      
      
      <categories>
          
          <category> 设计模式教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MQ相关总结</title>
      <link href="/2018/05/18/MQ%E7%9B%B8%E5%85%B3%E6%80%BB%E7%BB%93/"/>
      <url>/2018/05/18/MQ%E7%9B%B8%E5%85%B3%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<!-- 展示图片 --><p><img src="http://blog.lutao1726.top/MQ-001.jpg" alt="Mou_icon"></p><p>1.为什么使用消息队列？<br>通用回答是：我们公司有个什么业务场景，这个业务场景有什么技术挑战，如果不使用MQ可能会很麻烦，使用MQ之后带来了什么好处.<br>比较核心的有3个业务场景：解耦，异步，削峰<br>解耦场景：用户下单后，订单系统需要通知库存系统。<br>异步场景：用户注册后，需要发注册邮件和注册短信。<br>削峰场景：（秒杀或团抢活动）</p>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 微服务 </tag>
            
            <tag> 分布式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis使用总结</title>
      <link href="/2018/05/17/redis%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/"/>
      <url>/2018/05/17/redis%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<!-- 展示图片 --><p><img src="http://blog.lutao1726.top/redis-01.jpg" alt="Mou_icon"></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote><p>Redis是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。它支持存储的value类型相对更多，包括string(字符串)、list(链表)、set(集合)、zset(sorted set –有序集合)和hash（哈希类型）。这些数据类型都支持push&#x2F;pop、add&#x2F;remove及取交集并集和差集及更丰富的操作，而且这些操作都是原子性的。在此基础上，redis支持各种不同方式的排序。与memcached一样，为了保证效率，数据都是缓存在内存中。区别的是redis会周期性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件，并且在此基础上实现了master-slave(主从)同步。</p></blockquote><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><h4 id="String（字符串）"><a href="#String（字符串）" class="headerlink" title="String（字符串）"></a>String（字符串）</h4><h6 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h6><h6 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h6><h4 id="List-列表"><a href="#List-列表" class="headerlink" title="List(列表)"></a>List(列表)</h4><h6 id="常用命令-1"><a href="#常用命令-1" class="headerlink" title="常用命令"></a>常用命令</h6><h6 id="使用场景-1"><a href="#使用场景-1" class="headerlink" title="使用场景"></a>使用场景</h6><h4 id="Hash-哈希"><a href="#Hash-哈希" class="headerlink" title="Hash(哈希)"></a>Hash(哈希)</h4><h6 id="常用命令-2"><a href="#常用命令-2" class="headerlink" title="常用命令"></a>常用命令</h6><h6 id="使用场景-2"><a href="#使用场景-2" class="headerlink" title="使用场景"></a>使用场景</h6><h4 id="Set-集合"><a href="#Set-集合" class="headerlink" title="Set(集合)"></a>Set(集合)</h4><h6 id="常用命令-3"><a href="#常用命令-3" class="headerlink" title="常用命令"></a>常用命令</h6><h6 id="使用场景-3"><a href="#使用场景-3" class="headerlink" title="使用场景"></a>使用场景</h6><h4 id="ZSet-有序集合"><a href="#ZSet-有序集合" class="headerlink" title="ZSet(有序集合)"></a>ZSet(有序集合)</h4><h6 id="常用命令-4"><a href="#常用命令-4" class="headerlink" title="常用命令"></a>常用命令</h6><h6 id="使用场景-4"><a href="#使用场景-4" class="headerlink" title="使用场景"></a>使用场景</h6>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 微服务 </tag>
            
            <tag> 分布式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java分布式事务总结</title>
      <link href="/2018/05/16/Java%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E6%80%BB%E7%BB%93/"/>
      <url>/2018/05/16/Java%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<!-- 展示图片 --><p><img src="http://justyy.com/wp-content/uploads/2016/01/markdown-syntax-language.png" alt="Mou_icon"></p>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 微服务 </tag>
            
            <tag> 分布式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java常用算法汇总</title>
      <link href="/2018/05/16/Java%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/"/>
      <url>/2018/05/16/Java%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<!-- 展示图片 --><h4 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h4><h6 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h6><blockquote><p>冒泡排序（Bubble Sort）也是一种简单直观的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢”浮”到数列的顶端。</p></blockquote><ol><li>算法步骤<br>比较相邻的元素。如果第一个比第二个大，就交换他们两个。<br>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。这步做完后，最后的元素会是最大的数。<br>针对所有的元素重复以上的步骤，除了最后一个。<br>持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</li><li>动图演示<br><img src="http://blog.lutao1726.top/bubbleSort.gif" alt="Mou_icon"></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BubbleSort</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">       <span class="type">int</span>[] arr = &#123;<span class="number">88</span>,<span class="number">44</span>,<span class="number">66</span>,<span class="number">22</span>,<span class="number">99</span>,<span class="number">33</span>,<span class="number">55</span>,<span class="number">11</span>,<span class="number">77</span>,<span class="number">10</span>&#125;;</span><br><span class="line">       arr = <span class="keyword">new</span> <span class="title class_">BubbleSort</span>().bubbleSort(arr);</span><br><span class="line">       System.out.println(<span class="string">&quot;排序结果：&quot;</span>);</span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> i: arr) &#123;</span><br><span class="line">          System.out.print(i+<span class="string">&quot;    &quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] bubbleSort(<span class="type">int</span>[] arr)&#123;</span><br><span class="line">        <span class="keyword">if</span>(arr.length&lt;<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> arr;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> arr.length;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">0</span> ;i&lt;arr.length;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i+<span class="number">1</span>;j&lt;arr.length;j++ )&#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[i]&gt;arr[j])&#123;</span><br><span class="line">                    swap(arr,i,j);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> i,<span class="type">int</span> j)</span>&#123;</span><br><span class="line">        arr[i]=arr[i]^arr[j];</span><br><span class="line">        arr[j]=arr[i]^arr[j];</span><br><span class="line">        arr[i]=arr[i]^arr[j];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h6><blockquote><p>快速排序是由东尼·霍尔所发展的一种排序算法。在平均状况下，排序 n 个项目要 Ο(nlogn) 次比较。在最坏状况下则需要 Ο(n2) 次比较，但这种状况并不常见。事实上，快速排序通常明显比其他 Ο(nlogn) 算法更快，因为它的内部循环（inner loop）可以在大部分的架构上很有效率地被实现出来。<br> 快速排序使用分治法（Divide and conquer）策略来把一个串行（list）分为两个子串行（sub-lists）。<br> 快速排序又是一种分而治之思想在排序算法上的典型应用。本质上来看，快速排序应该算是在冒泡排序基础上的递归分治法。<br> 快速排序的名字起的是简单粗暴，因为一听到这个名字你就知道它存在的意义，就是快，而且效率高！它是处理大数据最快的排序算法之一了。</p></blockquote><ol><li>算法步骤<br>从数列中挑出一个元素，称为 “基准”（pivot）;<br>重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。在这个分区退出之后，该基准就处于数列的中间位置。这个称为分区（partition）操作；<br>递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序；       </li><li>动图演示<br><img src="http://blog.lutao1726.top/quickSort.gif" alt="Mou_icon"></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">QuickSort</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">      <span class="type">int</span>[] arr = &#123;<span class="number">88</span>,<span class="number">44</span>,<span class="number">66</span>,<span class="number">22</span>,<span class="number">99</span>,<span class="number">33</span>,<span class="number">55</span>,<span class="number">11</span>,<span class="number">77</span>,<span class="number">10</span>&#125;;</span><br><span class="line">      arr = <span class="keyword">new</span> <span class="title class_">QuickSort</span>().quickSort(arr,<span class="number">0</span>,arr.length-<span class="number">1</span>);</span><br><span class="line">      System.out.println(<span class="string">&quot;排序结果：&quot;</span>);</span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> i: arr) &#123;</span><br><span class="line">          System.out.print(i+<span class="string">&quot;    &quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] quickSort(<span class="type">int</span>[] arr,<span class="type">int</span> left,<span class="type">int</span> right)&#123;</span><br><span class="line">        <span class="keyword">if</span>(left&gt;=right)&#123;</span><br><span class="line">            <span class="keyword">return</span> arr;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> getIndex(arr,left,right);</span><br><span class="line">        quickSort(arr,left,index-<span class="number">1</span>);</span><br><span class="line">        quickSort(arr,index+<span class="number">1</span>,right);</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getIndex</span><span class="params">(<span class="type">int</span>[] arr ,<span class="type">int</span> left,<span class="type">int</span> right)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[left];</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> left;</span><br><span class="line">        <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> right;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;j)&#123;</span><br><span class="line">            <span class="keyword">while</span> (arr[j]&gt;=temp&amp;&amp;i&lt;j)&#123;</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (arr[i]&lt;=temp&amp;&amp;i&lt;j)&#123;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(i&lt;j)&#123;</span><br><span class="line">                swap(arr,i,j);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        swap(arr,left,i);</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> i,<span class="type">int</span> j)</span>&#123;</span><br><span class="line">        arr[i]=arr[i]^arr[j];</span><br><span class="line">        arr[j]=arr[i]^arr[j];</span><br><span class="line">        arr[i]=arr[i]^arr[j];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h6><blockquote><p>堆排序（Heapsort）是指利用堆这种数据结构所设计的一种排序算法。堆积是一个近似完全二叉树的结构，并同时满足堆积的性质：即子结点的键值或索引总是小于（或者大于）它的父节点。堆排序可以说是一种利用堆的概念来排序的选择排序。分为两种方法：<br> 大顶堆：每个节点的值都大于或等于其子节点的值，在堆排序算法中用于升序排列；<br> 小顶堆：每个节点的值都小于或等于其子节点的值，在堆排序算法中用于降序排列；<br> 堆排序的平均时间复杂度为 Ο(nlogn)。</p></blockquote><ol><li>算法步骤<br>创建一个堆 H[0……n-1]；</li></ol><p>把堆首（最大值）和堆尾互换；</p><p>把堆的尺寸缩小 1，并调用 shift_down(0)，目的是把新的数组顶端数据调整到相应位置；</p><p>重复步骤 2，直到堆的尺寸为 1。<br>2. 动图演示<br><img src="http://blog.lutao1726.top/heapSort.gif" alt="Mou_icon"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HeapSort</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">      <span class="type">int</span>[] arr = &#123;<span class="number">88</span>,<span class="number">44</span>,<span class="number">66</span>,<span class="number">22</span>,<span class="number">99</span>,<span class="number">33</span>,<span class="number">55</span>,<span class="number">11</span>,<span class="number">77</span>,<span class="number">10</span>&#125;;</span><br><span class="line">      <span class="keyword">new</span> <span class="title class_">HeapSort</span>().heapSort(arr);</span><br><span class="line">      System.out.println(<span class="string">&quot;排序结果：&quot;</span>);</span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> i: arr) &#123;</span><br><span class="line">          System.out.print(i+<span class="string">&quot;    &quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">heapSort</span><span class="params">(<span class="type">int</span>[] arr)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> arr.length;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> n/<span class="number">2</span> -<span class="number">1</span> ;i&gt;=<span class="number">0</span> ;i--)&#123;</span><br><span class="line">            heapify(arr,n,i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> n -<span class="number">1</span> ;i&gt;<span class="number">0</span> ; i--)&#123;</span><br><span class="line">            swap(arr,i,<span class="number">0</span>);</span><br><span class="line">            heapify(arr,i,<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">heapify</span><span class="params">(<span class="type">int</span>[] arr,<span class="type">int</span> n,<span class="type">int</span> i)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">largest</span> <span class="operator">=</span> i;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> i*<span class="number">2</span> +<span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> i*<span class="number">2</span> +<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(left&lt;n&amp;&amp;arr[left]&gt;arr[largest])&#123;</span><br><span class="line">            largest = left;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(right&lt;n&amp;&amp;arr[right]&gt;arr[largest])&#123;</span><br><span class="line">            largest = right;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(largest!=i)&#123;</span><br><span class="line">            swap(arr,largest,i);</span><br><span class="line">            heapify(arr,n,largest);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> i,<span class="type">int</span> j)</span>&#123;</span><br><span class="line">        arr[i]=arr[i]^arr[j];</span><br><span class="line">        arr[j]=arr[i]^arr[j];</span><br><span class="line">        arr[i]=arr[i]^arr[j];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h4><h6 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h6><blockquote><p>二分查找也称折半查找（Binary Search），它是一种效率较高的查找方法。但是，折半查找要求线性表必须采用顺序存储结构，而且表中元素按关键字有序排列。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BinarySearch</span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">binarySearch</span><span class="params">(Integer[] srcArray, <span class="type">int</span> des)</span> &#123;</span><br><span class="line">      <span class="comment">//定义初始最小、最大索引</span></span><br><span class="line">      <span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">      <span class="type">int</span> <span class="variable">end</span> <span class="operator">=</span> srcArray.length - <span class="number">1</span>;</span><br><span class="line">      <span class="comment">//确保不会出现重复查找，越界</span></span><br><span class="line">      <span class="keyword">while</span> (start &lt;= end) &#123;</span><br><span class="line">          <span class="comment">//计算出中间索引值</span></span><br><span class="line">          <span class="type">int</span> <span class="variable">middle</span> <span class="operator">=</span> (end + start)&gt;&gt;&gt;<span class="number">1</span> ;<span class="comment">//防止溢出</span></span><br><span class="line">          <span class="keyword">if</span> (des == srcArray[middle]) &#123;</span><br><span class="line">              <span class="keyword">return</span> middle;</span><br><span class="line">          <span class="comment">//判断下限</span></span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (des &lt; srcArray[middle]) &#123;</span><br><span class="line">              end = middle - <span class="number">1</span>;</span><br><span class="line">          <span class="comment">//判断上限</span></span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              start = middle + <span class="number">1</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//若没有，则返回-1</span></span><br><span class="line">      <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java基础 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zookeeper使用总结</title>
      <link href="/2018/05/16/zookeeper%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/"/>
      <url>/2018/05/16/zookeeper%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<!-- 展示图片 --><p><img src="http://justyy.com/wp-content/uploads/2016/01/markdown-syntax-language.png" alt="Mou_icon"></p>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 微服务 </tag>
            
            <tag> 分布式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java分布式事务总结</title>
      <link href="/2018/05/15/Java%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E6%80%BB%E7%BB%93/"/>
      <url>/2018/05/15/Java%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<!-- 展示图片 --><p><img src="http://justyy.com/wp-content/uploads/2016/01/markdown-syntax-language.png" alt="Mou_icon"></p>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 微服务 </tag>
            
            <tag> 分布式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7安装</title>
      <link href="/2018/04/15/linux_centos7%E5%AE%89%E8%A3%85/"/>
      <url>/2018/04/15/linux_centos7%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="CentOS7安装"><a href="#CentOS7安装" class="headerlink" title="CentOS7安装"></a>CentOS7安装</h1>]]></content>
      
      
      <categories>
          
          <category> Linux教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Linux </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>非技术相关面试</title>
      <link href="/2018/01/18/%E9%9D%9E%E6%8A%80%E6%9C%AF%E7%9B%B8%E5%85%B3%E9%9D%A2%E8%AF%95/"/>
      <url>/2018/01/18/%E9%9D%9E%E6%8A%80%E6%9C%AF%E7%9B%B8%E5%85%B3%E9%9D%A2%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h2 id="非技术相关面试"><a href="#非技术相关面试" class="headerlink" title="非技术相关面试"></a><img src="/" alt="Mou_icon"><br><span id="more"></span><br>非技术相关面试</h2><p>第一题 #请你自我介绍一下你自己？#</p><blockquote><p>这道面试题是大家在以后面试过程中会常被问到的，那么我们被问到之后，该如果回答呢？是说姓名？年龄？还是其他什么？<br> <br>一般人回答这个问题往往会进入误区，回答的过于平常，只说姓名、年龄、爱好、工作经验等，但是你们想到没有，其实这些信息你的个人简历上都有，那么面试官还问你干什么？<br> <br>其实，面试官最希望知道的是求职者能否胜任这份工作，包括：最强的技能、最深入研究的知识领域、个性中最积极的部分、做过的最成功的事，主要的成就等，这些都可以和学习无关，也可以和学习有关，但一定要突出积极的个性和做事的能力，说得合情合理企业的面试官才会相信。<br> <br>企业很重视一个人的礼貌，求职者要尊重面试官，在回答每个问题之后还可以加一句“谢谢”，企业喜欢有礼貌的求职者。切记：回答面试官问题的时候一定要回答的自然，有底气，否则你给面试官留下一个“假”的印象。</p></blockquote><p>第二题#你最大的优点和缺点是什么？#</p><blockquote><p>这个问题是企业面试过程中被问到的概率很大的，因为一个人如果不能认清自己或者了解自己的话，那么他做任何事情都不能端正自己的态度，这样自然而然的无法给企业带来价值，企业还会聘用你吗？<br><br>通常面试官不希望听到直接回答的优缺点是什么等，例如：我优点很多、我最大的优点就是追求完美，最大的缺点就是优点太多，有的人以为这样回答会显得自己比较出色，但事实上，已经岌岌可危了，或者求职者说自己的缺点是小心眼、爱忌妒人、非常懒、脾气大、工作效率低，这些回答之后，企业是肯定不会录用你的！怎么才能回答出企业面试官想要的答案呢？大家可以结合自己的性格，这么说：沉着冷静、条理清楚、立场坚定、顽强向上、乐于助人和关心他人、适应能力和幽默感、乐观和友爱。我在××单位经过一到两年的项目实战，使我更适合这份工作，企业喜欢求职者从自己的优点说起，中间加一些小缺点，最后再把问题转回到优点上，突出优点的部分，企业喜欢聪明的求职者。</p></blockquote><p>第三题#谈谈你对公司加班的看法？#</p><p>哈哈，被面试官问到这题，你就“中大奖”了！为什么呢？因为十有八九这家公司将来会让你加班哦！不过话又说回来，现在的IT行业又有哪个程序员可以朝九晚五上下班而不加班的呢？所以被问到这题，求职者一定要把分寸自己拿捏好了。</p><blockquote><p>实际上好多公司会问这个问题，并不证明一定要加班，只是有时候项目多了要加班，想提前测试你是否愿意为公司奉献。被面试官问到这道题，千千万万不要幼稚地反问面试官：“加班是否有加班费”？这样你是不会被公司录用的，因为我之前说过面试官想提前测试你是否愿意为公司奉献，更何况加班费在如今的IT行业的私企中已经不复存在，只有为数不多的公司现在还有。<br>  看到这里，肯定有人就说了，既然这样，那我就回答愿意加班了，你这样回答如果你入职了，公司可能让你往死里加班，谁让你当初愿意加班了，那么回答不愿意加班的话，相信大家已经能猜到后果了，这里我就不多说了。既然这样我们回答愿意不行，不愿意更不行，叫我们如何是好，接下来我就告诉大家在问到这到面试题该如何的回答：如果是工作需要我会义不容辞加班，我现在单身，没有任何家庭负担，可以全身心的投入工作。但同时，我也会提高工作效率，减少不必要的加班；或者说如果是工作需要我会义不容辞加班，我现在已经成家，生活上已经稳定，这样更能全身心的投入工作。但同时，我也会提高工作效率，减少不必要的加班。这么回答之后，这道题你就顺利的过关了，我说过公司喜欢录用聪明的人！</p></blockquote><p>第四题#你对薪资的要求？#</p><p>在这里我提醒大家一下，在大家投递简历的时候，千万别再简历上体现“期望薪资”、“原来薪资”等一些关于薪资明确的数字，如果用一些招聘网站的简历模板时，该项必须要填写的时候，大家可以写“面议”。真正的薪资要是不是你写出来的，是你在面试的时候自己的价值体现，下面就让播妞告诉大家如何在面试的时候如何把自己的价值最大化！</p><blockquote><p>说实话，大家找工作，都希望找个高薪的，那我们如何和公司去谈薪酬呢？如果你对薪酬的要求太低，那显然贬低自己的能力；如果你对薪酬的要求太高，那又会显得你分量过重，公司受用不起。一些公司通常都事先对求聘的职位定下开支预算，因而他们第一次提出的价钱往往是他们所能给予的最高价钱，他们问你只不过想证实一下这笔钱是否足以引起你对该工作的兴趣。如果你自己必须说出具体数目，请不要说一个宽泛的范围，那样你将只能得到最低限度的数字。最好给出一个具体的数字，这样表明你已经对当今的人才市场作了调查，知道像自己这样学历的雇员有什么样的价值。只要你之前技术测试都很顺利，那么谈薪酬的时候就会更有底气，我们可以这么回答：我对工资没有硬性要求，我相信贵公司在处理我的问题上会友善合理。我注重的是找对工作机会，所以只要条件公平，我则不会计较太多或者说：我受过系统的软件编程的训练，不需要进行大量的培训，而且我本人也对编程特别感兴趣。因此，我希望公司能根据我的情况和市场标准的水平，给我合理的薪水</p></blockquote><p>第五题#在未来的五年的时间内，你的职业规划是什么？#</p><blockquote><p>这是每一个应聘者都不希望被问到的问题，但是几乎每个人都会被问到，比较多的答案是“管理者”。但是近几年来，许多公司都已经建立了专门的技术途径。这些工作地位往往被称作“顾问”、“参议技师”或“高级软件工程师”等等。当然，说出其他一些你感兴趣的职位也是可以的，比如产品销售部经理，生产部经理等一些与你的专业有相关背景的工作。要知道，考官总是喜欢有进取心的应聘者，此时如果说“不知道”，所以你在回答这道题的时候，一定要符合自己实际情况，千万不要大而空，这样面试官会觉得你是一个好高骛远之人，就会使你丧失一个好机会。最普通的回答应该是“我准备在技术领域有所作为，比如**技术上有所突破”或“我希望能按照公司的管理思路发展”。</p></blockquote><p>第六题#谈谈你的朋友对你的评价是什么？#</p><blockquote><p>回答这道题时要注意的事项和第二天的面试题一样（下面往期回顾里面有链接），大家可以这么回答面试官，“我的朋友都说我是一个可以信赖的人。因为，我一旦答应别人的事情，就一定会做到。如果我做不到，我就不会轻易许诺；或者说“我觉的我是一个比较随和的人，与不同的人都可以友好相处。在我与人相处时，我总是能站在别人的角度考虑问题。”</p></blockquote><p>第七题#你还有什么问题要问吗？#</p><blockquote><p>企业面试官问的这个问题看上去可有可无，其实很关键，企业不喜欢说“没问题”的人，因为其很注重员工的个性和创新能力。企业不喜欢求职者问个人福利之类的问题，如果有人这样问：贵公司对新入公司的员工有没有什么培训项目，我可以参加吗？或者说贵公司的晋升机制是什么样的？企业将很欢迎，因为体现出你对学习的热情和对公司的忠诚度以及你的上进心。</p></blockquote><p>第八题#如果我们公司录用了你，但你却在工作后发现根本不适合这个职位，你怎么办？#</p><p>这个现象在实际工作中很常见，为什么呢？有句老话：“不当家不知柴米油盐贵”，在你向往这份工作的时候，你往往看到的是这份工作比较好的那一面，而看不到它相反的一面，当你真正投入这份工作的时候，你会感觉理想与现实的差别，会造成你心里极大的落差，从而你会有离职的思想，所以选择一份工作的同时，你一定要明确知道你要在这份工作中得到什么，是否在你的人生规划当中，如果你在面试过程中真的被问到这道题，播妞告诉大家该如何去回答！</p><blockquote><p>在公司工作一段时间之后发现工作不适合自己，一般会有两种情况：<br> 1.如果你确实热爱这个职业，那你就要不断学习，虚心向领导和同事学习业务知识和处事经验，了解这个职业的精神内涵和职业要求，力争减少差距；<br> 2.如果你自己觉得这个职业对你来说可有可无，那还是趁早换个职业，去发现适合你的，你热爱的职业，那样你的发展前途也会大点，对公司和个人都有好处</p></blockquote><p>第九题#在完成某项工作时，你认为自己的方式比领导要求的更好，你应该怎么做？#</p><p>实际工作中，自己和领导有不同的意见很常见，这个是好事，面试官问这道题是想知道你遇到这种情况你怎么处理，因为如果处理好了，会给公司带来更大的价值，所以你回答好了，面试官这官你应该可以轻松的过了。            </p><blockquote><p>1.原则上我会尊重和服从领导的工作安排，同时私底下找机会以请教的口吻，婉转地表达自己的想法，看看领导是否能改变想法。<br>2.如果领导没有采纳我的建议，我也同样会按领导的要求认真地去完成这项工作，并私下找领导分析下我的想法有哪些考虑是不周到的，这样也可以去提高自己。<br>3.还有一种情况，假如领导要求的方式违背原则，我会坚决提出反对意见，如领导仍固执己见，我会毫不犹豫地再向上级领导反映。（注：这个你可以在面试的时候这么说，但一定要明确是面试官不是你将来的直接主管，而且实际中你也不要这么干！）        </p></blockquote><p>第十题#如果你出现工作失误，给公司造成经济损失，你认为该怎么办？#</p><blockquote><p>1.我本意是为公司努力工作，如果造成经济损失，我认为首要的问题是想方设法去弥补或挽回经济损失。如果我无能力负责，希望公司帮助解决。<br>2.分清责任，各负其责，如果是我的责任，我甘愿受罚；如果是一个我负责的团队中的人失误，也不能幸灾乐祸，作为一个团队，需要互相提携共同完成工作，安慰同事并且帮助同事查找原因总结经验。<br>3.总结经验教训，一个人的一生不可能不犯错误，重要的是能从自己的或者是别人的错误中吸取经验教训，并在今后的工作中避免发生同类的错误。检讨自己的工作方法、分析问题的深度和力度是否不够，以致出现了本可以避免的错误。       </p></blockquote><p>第十一题#如果你做的一项工作受到上级表扬，主管却说是他做的，你该怎样？#</p><p>不要觉得不公平，这样的不公平的事以后你们会遇见有的多，在你不能改变环境的时候，就该适应环境，但是这些虽说是实际情况，面试的时候你千万不能这么去回答，那我们该如何回答呢？</p><blockquote><p>我首先不会找那位上级领导说明这件事，我会主动找我的主管领导来沟通，因为沟通是解决人际关系的最好办法，但结果会有两种：<br> 1.我的主管领导认识到自己的错误，我想我会视具体情况决定是否原谅他。<br> 2.他更加变本加厉的来威胁我，那我会毫不犹豫地找我的上级领导反映此事，因为他这样做会造成负面影响，对今后的工作不利。     </p></blockquote><p>第十二题#谈谈你对跳槽的看法？#</p><blockquote><p>1.正常的“跳槽”能促进人才合理流动，应该支持。<br>2.频繁的跳槽对单位和个人双方都不利，应该反对。</p></blockquote><p>第十三题#谈谈工作中你难以和同事、上级相处，你该怎么办？#</p><blockquote><p>1.我会服从领导的指挥，配合同事的工作。<br>2.我会从自身找原因，仔细分析是不是自己工作做得不好让领导不满意，同事看不惯。还要看看是不是为人处世方面做得不好，如果是这样的话我会努力改正。<br>3.如果我找不到原因，我会找机会跟他们沟通，请他们指出我的不足，有问题就及时改正。<br>4.作为优秀的员工，应该时刻以大局为重，即使在一段时间内，领导和同事对我不理解，我也会做好本职工作，虚心向他们学习，我相信，他们会看见我在努力，总有一天会对我微笑的。</p></blockquote><p>第十四题#你因工作比较突出，虽说得到领导肯定，但同事越来越孤立你，你该怎么办？#</p><blockquote><p>1.成绩比较突出，得到领导的肯定是件好事情，以后更加努力。<br>2.检讨一下自己是不是对工作的热心度超过同事间交往的热心了，加强同事间的交往及共同的兴趣爱好。<br>3.工作中，切勿伤害别人的自尊心。<br>4.不再领导前拨弄是非。    </p></blockquote><p>第十五题#说说你选择这份工作的动机#</p><p>其实这道面试题是面试官想知道面试者对这份工作的热忱及理解度，并筛选因一时兴起而来应试的人，那么，我们该怎么回答呢？</p><blockquote><p>如果你是在这个领域是无经验者，也可以强调“就算职种不同，也希望有机会发挥之前的经验”,所以你在面试时候一定要对该公司做好备课，往往公司不希望自己的公司成为别人的职业跳板。</p></blockquote><p>第十六题#你能为我们公司带来什么呢？#</p><p>面试官往往想知道，你比其他面试者能多带给公司什么，播妞接下来就告诉大家该如何去回答这道题</p><blockquote><p>企业很想知道未来的员工能为企业做什么，求职者应再次重复自己的优势，然后说：“就我的能力，我可以做一个优秀的员工在组织中发挥能力，给组织带来高效率和更多的收益”。<br> <br> 企业喜欢求职者就申请的职位表明自己的能力，比如申请营销之类的职位，可以说：“我可以开发大量的新客户，同时，对老客户做更全面周到的服务，开发老客户的新需求和消费。”</p></blockquote><p>第十七题#说说喜欢这份工作的哪一点？#</p><p>相信其实大家心中一定都有答案了吧！那我们就畅所欲言吧！如果你没有喜欢的，说明你对企业的忠诚度不高，企业自然不会聘用你！</p><blockquote><p>每个人的价值观不同，自然评断的标准也会不同，但是，在回答面试官这个问题时可不能太直接就把自己心理的话说出来，尤其是薪资方面的问题，不过一些无伤大雅的回答是不错的考虑，如交通方便，工作性质及内容颇能符合自己的兴趣等等都是不错的答案，不过如果这时自己能仔细思考出这份工作的与众不同之处，相信在面试上会大大加分。</p></blockquote><p>第十八题#你是怎样看待学历和能力的？#</p><p>学历和能力在当今的社会都不可或缺，学历往往是你面试的敲门砖，敲完门用途就不大了，后面才是证明你能力价值的，那我们被问到：“你是怎样看待学历和能力的？”该如何回答呢？</p><blockquote><p>学历我想只要是大学专科的学历，就表明觉得我具备了根本的学习能力。剩下的，你是学士也好，还是博士也好，对于这一点的讨论，不是看你学了多少知识，而是看你在这个领域上发挥了什么，也就是所说的能力问题。一个人工作能力的高低直接决定其职场命运，而学历的高低只是进入一个企业的敲门砖，如果贵公司把学历卡在博士上，我就无法进入贵公司，当然这不一定只是我个人的损失，如果一个专科生都能完成的工作，您又何必非要招聘一位博士生呢？</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Interview </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础回顾-多线程(1)</title>
      <link href="/2017/09/25/Java%E5%9F%BA%E7%A1%80%E5%9B%9E%E9%A1%BE-%E5%A4%9A%E7%BA%BF%E7%A8%8B(1)/"/>
      <url>/2017/09/25/Java%E5%9F%BA%E7%A1%80%E5%9B%9E%E9%A1%BE-%E5%A4%9A%E7%BA%BF%E7%A8%8B(1)/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="Java-实现多线程的3种方法-继承Thread类-实现Runnable接口-实现Callable接口"><a href="#Java-实现多线程的3种方法-继承Thread类-实现Runnable接口-实现Callable接口" class="headerlink" title=" Java 实现多线程的3种方法:继承Thread类;实现Runnable接口;实现Callable接口"></a> Java 实现多线程的3种方法:继承Thread类;实现Runnable接口;实现Callable接口</h1><p> 众所周知实现线程的方法具体有2种,但是还有一种,不是所有的人都知道。</p><blockquote><p>(1).继承Thread类，重写run()方法；<br>(2).实现Runnable接口，重写run()方法；<br>(3).实现Callable接口，重写call方法；</p></blockquote><h2 id="第一种实现方式：继承Thread类，重写run方法"><a href="#第一种实现方式：继承Thread类，重写run方法" class="headerlink" title="第一种实现方式：继承Thread类，重写run方法"></a>第一种实现方式：继承Thread类，重写run方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadWay</span> <span class="keyword">extends</span> <span class="title class_">Thread</span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(;;)&#123;</span><br><span class="line">      <span class="keyword">try</span>&#123;</span><br><span class="line">        Thread.sleep(<span class="number">1000</span>);<span class="comment">//毫秒  </span></span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;...extends way&quot;</span>);</span><br><span class="line">      &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">        e.printStackTrace();  </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第二种实现方式：实现Runnable接口，重写run-方法；"><a href="#第二种实现方式：实现Runnable接口，重写run-方法；" class="headerlink" title="第二种实现方式：实现Runnable接口，重写run()方法；   "></a>第二种实现方式：实现Runnable接口，重写run()方法；   </h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RunnableWay</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">  <span class="meta">@Override</span>  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;  </span><br><span class="line">        <span class="keyword">for</span> (; ; ) &#123;  </span><br><span class="line">            <span class="keyword">try</span> &#123;  </span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);<span class="comment">//毫秒  </span></span><br><span class="line">                System.out.println(Thread.currentThread().getName() + <span class="string">&quot;...implements Runnable way&quot;</span>);  </span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;  </span><br><span class="line">                e.printStackTrace();  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第三种实现方式：实现Callable接口，重写call方法；"><a href="#第三种实现方式：实现Callable接口，重写call方法；" class="headerlink" title="第三种实现方式：实现Callable接口，重写call方法；"></a>第三种实现方式：实现Callable接口，重写call方法；</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Callable和Runnable有几点不同：</span></span><br><span class="line"><span class="comment"> * （1）Callable规定的方法是call()，而Runnable规定的方法是run().</span></span><br><span class="line"><span class="comment"> * （2）Callable的任务执行后可返回值，而Runnable的任务是不能返回值的。</span></span><br><span class="line"><span class="comment"> * （3）call()方法可抛出异常，而run()方法是不能抛出异常的。</span></span><br><span class="line"><span class="comment"> * （4）运行Callable任务可拿到一个Future对象，</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> */</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CallableWay</span> <span class="keyword">implements</span> <span class="title class_">Callable</span>&lt;Integer&gt; &#123;  </span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span>  </span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;  </span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;  </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;  </span><br><span class="line">            <span class="keyword">try</span> &#123;  </span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);<span class="comment">//毫秒  </span></span><br><span class="line">                sum += <span class="number">1</span>;  </span><br><span class="line">                System.out.println(Thread.currentThread().getName() + <span class="string">&quot;...implements Callable&lt;T&gt;...&quot;</span> + sum);  </span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;  </span><br><span class="line">                e.printStackTrace();  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">return</span> sum;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>当然第三种并不常见，目前只是简单的记录下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 线程测试（实现多线程的几种方式）</span></span><br><span class="line"><span class="comment"> * &lt;p&gt; </span></span><br><span class="line"><span class="comment"> */</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;  </span><br><span class="line">        newThreadWay1();<span class="comment">//实现Runnable接口  </span></span><br><span class="line">        <span class="comment">//newThreadWay2();//继承Thread类  </span></span><br><span class="line">        <span class="comment">//newThreadWay3();//实现Callable接口  </span></span><br><span class="line">        <span class="comment">//newThreadWay1_();//也就是个简单的匿名对象，直接实现Runnable接口，省去了新建个类的步骤  </span></span><br><span class="line">        <span class="comment">//newThreadWay1__();//一样也是实现Runnable接口，省去了新建个类的步骤，不过不是匿名对象而已  </span></span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建线程方式1实现</span></span><br><span class="line"><span class="comment">     * 实现Runnable接口，重写run方法</span></span><br><span class="line"><span class="comment">     * 实现接口的优点：可以方便扩展</span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">newThreadWay1</span><span class="params">()</span> &#123;  </span><br><span class="line">        <span class="type">ThreadWay1</span> <span class="variable">threadWay1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThreadWay1</span>();  </span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(threadWay1).start();  </span><br><span class="line">        <span class="comment">//new Thread(new ThreadWay1()).start();//等于上面的2行代码  </span></span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;...implements Runnable way&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建线程方式2实现</span></span><br><span class="line"><span class="comment">     * 继承Thread类，重写run函数</span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">newThreadWay2</span><span class="params">()</span> &#123;  </span><br><span class="line">        <span class="type">ThreadWay2</span> <span class="variable">threadWay2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThreadWay2</span>();  </span><br><span class="line">        threadWay2.start();  </span><br><span class="line">        <span class="comment">//new ThreadWay2().start();//等于上面的2行代码  </span></span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;...extends way&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建线程方式3实现</span></span><br><span class="line"><span class="comment">     * 实现Callable接口，重写call方法</span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">newThreadWay3</span><span class="params">()</span> &#123;  </span><br><span class="line">        <span class="type">int</span> resultFromThread;  </span><br><span class="line">        <span class="keyword">try</span> &#123;  </span><br><span class="line">            <span class="type">ThreadWay3</span> <span class="variable">threadWay3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThreadWay3</span>();  </span><br><span class="line">            FutureTask&lt;Integer&gt; future = <span class="keyword">new</span> <span class="title class_">FutureTask</span>&lt;&gt;(threadWay3);  </span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Thread</span>(future).start();  </span><br><span class="line">            Thread.sleep(<span class="number">5000</span>);<span class="comment">// 可能做一些事情  </span></span><br><span class="line">            <span class="comment">//注意：  </span></span><br><span class="line">            <span class="comment">// 这个有个问题：主线程必须等子线程执行完，才可以继续执行，变成了同步啦，这就不太好啦。失去了多线程的意义啦。  </span></span><br><span class="line">            resultFromThread = future.get();  </span><br><span class="line">            System.out.println(Thread.currentThread().getName() + <span class="string">&quot;...implements Callable&lt;T&gt;...&quot;</span> + resultFromThread);  </span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;  </span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建线程方式1实现</span></span><br><span class="line"><span class="comment">     * 实现Runnable接口，重写run方法</span></span><br><span class="line"><span class="comment">     * (匿名对象：new个线程对象直接开启)</span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">newThreadWay1_</span><span class="params">()</span> &#123;  </span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;  </span><br><span class="line">            <span class="meta">@Override</span>  </span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;  </span><br><span class="line">                <span class="keyword">for</span> (; ; ) &#123;<span class="comment">//死循环  </span></span><br><span class="line">                    <span class="keyword">try</span> &#123;  </span><br><span class="line">                        Thread.sleep(<span class="number">1000</span>);<span class="comment">//毫秒  </span></span><br><span class="line">                        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;...new Runnable()匿名对象&quot;</span>);  </span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;  </span><br><span class="line">                        e.printStackTrace();  </span><br><span class="line">                    &#125;  </span><br><span class="line">                &#125;  </span><br><span class="line"></span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;).start();  </span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;......new Runnable()匿名对象&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建线程方式1实现</span></span><br><span class="line"><span class="comment">     * 实现Runnable接口，重写run方法</span></span><br><span class="line"><span class="comment">     * (实例化一个线程对象，然后调用start方法开启线程)</span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">newThreadWay1__</span><span class="params">()</span> &#123;  </span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;  </span><br><span class="line">            <span class="meta">@Override</span>  </span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;  </span><br><span class="line">                <span class="keyword">for</span> (; ; ) &#123;  </span><br><span class="line">                    <span class="keyword">try</span> &#123;  </span><br><span class="line">                        Thread.sleep(<span class="number">1000</span>);<span class="comment">//毫秒  </span></span><br><span class="line">                        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;...new Runnable()非匿名对象&quot;</span>);  </span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;  </span><br><span class="line">                        e.printStackTrace();  </span><br><span class="line">                    &#125;  </span><br><span class="line">                &#125;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;);  </span><br><span class="line">        thread.start();  </span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;...new Runnable()非匿名对象&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础回顾-集合(1)</title>
      <link href="/2017/09/25/Java%E5%9F%BA%E7%A1%80%E5%9B%9E%E9%A1%BE-%E9%9B%86%E5%90%88/"/>
      <url>/2017/09/25/Java%E5%9F%BA%E7%A1%80%E5%9B%9E%E9%A1%BE-%E9%9B%86%E5%90%88/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="Java集合"><a href="#Java集合" class="headerlink" title=" Java集合"></a> Java集合</h2><h3 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h3><ul><li>Collection<br>TreeSet:基于红黑树<br>HashSet:基于哈希表<br>LinkedHashSet:基于链表</li><li>Map</li></ul><p>ArrayList<br>CopeOnWriteArrayList<br>HashMap<br>ConcurrentHashMap</p><p>HashMap JDK1.7 1.8 的底层数据结构<br>ConcurrentHashMap JDK1.7 1.8 的底层数据结构</p>]]></content>
      
      
      <categories>
          
          <category> Java教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础回顾(2)-基础语法</title>
      <link href="/2017/09/20/Java%E5%9F%BA%E7%A1%80%E5%9B%9E%E9%A1%BE(2)/"/>
      <url>/2017/09/20/Java%E5%9F%BA%E7%A1%80%E5%9B%9E%E9%A1%BE(2)/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="1-关键字"><a href="#1-关键字" class="headerlink" title="1:关键字"></a>1:关键字</h2><ul><li>被Java语言赋予特定含义的单词</li><li>特点：全部小写</li><li>注意事项：<ol><li>goto和const作为保留字存在。<ol start="2"><li>类似于Notepad++这样的高级记事本会对关键字有特殊颜色标记</li></ol></li></ol></li></ul><table><thead><tr><th align="center">关键字</th><th align="left">含义</th></tr></thead><tbody><tr><td align="center">abstract</td><td align="left">表明类或者成员方法具有抽象属性</td></tr><tr><td align="center">assert</td><td align="left">用来进行程序调试</td></tr><tr><td align="center">boolean</td><td align="left">基本数据类型之一，布尔类型</td></tr><tr><td align="center">break</td><td align="left">提前跳出一个块</td></tr><tr><td align="center">byte</td><td align="left">基本数据类型之一，字节类型</td></tr><tr><td align="center">case</td><td align="left">用在switch语句之中，表示其中的一个分支</td></tr><tr><td align="center">catch</td><td align="left">用在异常处理中，用来捕捉异常</td></tr><tr><td align="center">char</td><td align="left">基本数据类型之一，字符类型</td></tr><tr><td align="center">class</td><td align="left">类</td></tr><tr><td align="center">const</td><td align="left">保留关键字，没有具体含义</td></tr><tr><td align="center">continue</td><td align="left">回到一个块的开始处</td></tr><tr><td align="center">default</td><td align="left">默认，例如，用在switch语句中，表明一个默认的分支</td></tr><tr><td align="center">do</td><td align="left">用在do-while循环结构中</td></tr><tr><td align="center">double</td><td align="left">基本数据类型之一，双精度浮点数类型</td></tr><tr><td align="center">else</td><td align="left">用在条件语句中，表明当条件不成立时的分支</td></tr><tr><td align="center">enum</td><td align="left">枚举</td></tr><tr><td align="center">extends</td><td align="left">表明一个类型是另一个类型的子类型，这里常见的类型有类和接口</td></tr><tr><td align="center">final</td><td align="left">用来说明最终属性，表明一个类不能派生出子类，或者成员方法不能被覆盖，或者成员域的值不能被改变，用来定义常量</td></tr><tr><td align="center">finally</td><td align="left">用于处理异常情况，用来声明一个基本肯定会被执行到的语句块</td></tr><tr><td align="center">float</td><td align="left">基本数据类型之一，单精度浮点数类型</td></tr><tr><td align="center">for</td><td align="left">一种循环结构的引导词</td></tr><tr><td align="center">goto</td><td align="left">保留关键字，没有具体含义</td></tr><tr><td align="center">if</td><td align="left">条件语句的引导词</td></tr><tr><td align="center">implements</td><td align="left">表明一个类实现了给定的接口</td></tr><tr><td align="center">import</td><td align="left">表明要访问指定的类或包</td></tr><tr><td align="center">instanceof</td><td align="left">用来测试一个对象是否是指定类型的实例对象</td></tr><tr><td align="center">int</td><td align="left">基本数据类型之一，整数类型</td></tr><tr><td align="center">interface</td><td align="left">接口</td></tr><tr><td align="center">long</td><td align="left">基本数据类型之一，长整数类型</td></tr><tr><td align="center">native</td><td align="left">用来声明一个方法是由与计算机相关的语言（如C&#x2F;C++&#x2F;FORTRAN语言）实现的</td></tr><tr><td align="center">new</td><td align="left">用来创建新实例对象</td></tr><tr><td align="center">package</td><td align="left">包</td></tr><tr><td align="center">private</td><td align="left">一种访问控制方式：私用模式</td></tr><tr><td align="center">protected</td><td align="left">一种访问控制方式：保护模式</td></tr><tr><td align="center">public</td><td align="left">一种访问控制方式：共用模式</td></tr><tr><td align="center">return</td><td align="left">从成员方法中返回数据</td></tr><tr><td align="center">short</td><td align="left">基本数据类型之一,短整数类型</td></tr><tr><td align="center">static</td><td align="left">表明具有静态属性</td></tr><tr><td align="center">strictfp</td><td align="left">用来声明FP_strict（单精度或双精度浮点数）表达式遵循IEEE 754算术规范</td></tr><tr><td align="center">super</td><td align="left">表明当前对象的父类型的引用或者父类型的构造方法</td></tr><tr><td align="center">switch</td><td align="left">分支语句结构的引导词</td></tr><tr><td align="center">synchronized</td><td align="left">表明一段代码需要同步执行</td></tr><tr><td align="center">this</td><td align="left">指向当前实例对象的引用</td></tr><tr><td align="center">throw</td><td align="left">抛出一个异常</td></tr><tr><td align="center">throws</td><td align="left">声明在当前定义的成员方法中所有需要抛出的异常</td></tr><tr><td align="center">transient</td><td align="left">声明不用序列化的成员域</td></tr><tr><td align="center">try</td><td align="left">尝试一个可能抛出异常的程序块</td></tr><tr><td align="center">void</td><td align="left">声明当前成员方法没有返回值</td></tr><tr><td align="center">volatile</td><td align="left">表明两个或者多个变量必须同步地发生变化</td></tr><tr><td align="center">while</td><td align="left">用在循环结构中</td></tr></tbody></table><blockquote><p>几个重要的关键字研究</p><ul><li>static ：</li><li>abstract ：</li><li>final ：</li><li>synchronized ：</li><li>volatile ：</li><li>instanceof ：</li><li>throw与throws ：</li></ul></blockquote><h2 id="2-标识符"><a href="#2-标识符" class="headerlink" title="2:标识符"></a>2:标识符</h2><h2 id="3-注释"><a href="#3-注释" class="headerlink" title="3:注释"></a>3:注释</h2><h2 id="4-常量"><a href="#4-常量" class="headerlink" title="4:常量"></a>4:常量</h2><h2 id="5-进制转换"><a href="#5-进制转换" class="headerlink" title="5:进制转换"></a>5:进制转换</h2><h2 id="6-变量-掌握"><a href="#6-变量-掌握" class="headerlink" title="6:变量(掌握)"></a>6:变量(掌握)</h2><h2 id="7-数据类型"><a href="#7-数据类型" class="headerlink" title="7:数据类型"></a>7:数据类型</h2><h2 id="8-数据类型转换"><a href="#8-数据类型转换" class="headerlink" title="8:数据类型转换"></a>8:数据类型转换</h2>]]></content>
      
      
      <categories>
          
          <category> Java教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础回顾(1)-开篇</title>
      <link href="/2017/09/16/Java%E5%9F%BA%E7%A1%80%E5%9B%9E%E9%A1%BE(1)/"/>
      <url>/2017/09/16/Java%E5%9F%BA%E7%A1%80%E5%9B%9E%E9%A1%BE(1)/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="Java简介"><a href="#Java简介" class="headerlink" title="Java简介"></a>Java简介</h1><p>Java是由Sun Microsystems公司于1995年5月推出的Java面向对象程序设计语言和Java平台的总称。由James Gosling和同事们共同研发，并在1995年正式推出。<br>Java分为三个体系：</p><ul><li>JavaSE（J2SE）（Java2 Platform Standard Edition，java平台标准版）</li><li>JavaEE(J2EE)(Java 2 Platform,Enterprise Edition，java平台企业版)</li><li>JavaME(J2ME)(Java 2 Platform Micro Edition，java平台微型版)。</li></ul><h1 id="主要特性"><a href="#主要特性" class="headerlink" title="主要特性"></a>主要特性</h1><ul><li>面向对象</li><li>简单性</li><li>分布式</li><li>健壮性</li><li>安全性</li><li><h1 id="可移植性发展历史"><a href="#可移植性发展历史" class="headerlink" title="可移植性发展历史"></a>可移植性<br>发展历史</h1></li><li>1995年5月23日，Java语言诞生</li><li>1996年1月，第一个JDK-JDK1.0诞生</li><li>1997年2月18日，JDK1.1发布</li><li>1998年12月8日，JAVA2企业平台J2EE发布</li><li>1999年6月，SUN公司发布Java的三个版本：标准版（JavaSE,以前是J2SE）、企业版（JavaEE以前是J2EE）和微型版（JavaME，以前是J2ME）</li><li>2006年12月，SUN公司发布JRE6.0</li><li>2009年04月20日，甲骨文74亿美元收购Sun。取得java的版权。</li><li>2011年7月28日，甲骨文发布java7.0的正式版。</li><li>2014年3月18日，Oracle公司发表Java SE 8。</li></ul><h1 id="Java开发工具"><a href="#Java开发工具" class="headerlink" title="Java开发工具"></a>Java开发工具</h1><ul><li>Java JDK</li><li>编辑器：notepad 等文本编辑器</li><li>IDE： eclipse，idea 等</li></ul><h1 id="Java开发环境配置"><a href="#Java开发环境配置" class="headerlink" title="Java开发环境配置"></a>Java开发环境配置</h1><h2 id="下载JDK"><a href="#下载JDK" class="headerlink" title="下载JDK"></a>下载JDK</h2><h2 id="下载地址：http-www-oracle-com-technetwork-java-javase-downloads-index-html配置环境变量"><a href="#下载地址：http-www-oracle-com-technetwork-java-javase-downloads-index-html配置环境变量" class="headerlink" title="下载地址：http://www.oracle.com/technetwork/java/javase/downloads/index.html配置环境变量"></a>下载地址：<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a><br>配置环境变量</h2><p>1.安装完成后，右击”我的电脑”，点击”属性”，选择”高级系统设置”；<br>2.选择”高级”选项卡，点击”环境变量”；<br>在”系统变量”中设置3项属性，JAVA_HOME,PATH,CLASSPATH(大小写无所谓),若已存在则点击”编辑”，不存在则点击”新建”。<br>变量设置参数如下：</p><ul><li>JAVA_HOME    变量值：C:\Program Files (x86)\Java\jdk1.8.0_91        &#x2F;&#x2F; 要根据自己的实际路径配置</li><li>CLASSPATH    变量值：.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;         &#x2F;&#x2F;记得前面有个”.”.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;         &#x2F;&#x2F;记得前面有个”.”</li><li>Path  变量值：%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;</li></ul><blockquote><p>path环境变量的作用:保证javac命令可以在任意目录下运行。<br>classpath环境变量的作用:保证class文件可以在任意目录下运行。</p></blockquote><p>测试环境配置是否成功：打开cmd 输入java ，javac ，java -verson 等都能判断是否配置成功</p><h2 id="JDK-JRE-JVM的作用及关系"><a href="#JDK-JRE-JVM的作用及关系" class="headerlink" title="JDK,JRE,JVM的作用及关系"></a>JDK,JRE,JVM的作用及关系</h2><blockquote><ul><li>作用<br>  JVM：保证Java语言跨平台<br>  JRE：Java程序的运行环境<br>  JDK：Java程序的开发环境   </li><li>关系<br>  JDK：JRE+工具<br>  JRE：JVM+类库</li></ul></blockquote><h2 id="第一个Java程序"><a href="#第一个Java程序" class="headerlink" title="第一个Java程序"></a>第一个Java程序</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">HelloWorld</span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;hello world!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序解释：</p><ul><li>Java程序最基本的单位是类</li></ul>]]></content>
      
      
      <categories>
          
          <category> Java教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java读取xml的四种方法</title>
      <link href="/2017/08/29/JavaReadXml/"/>
      <url>/2017/08/29/JavaReadXml/</url>
      
        <content type="html"><![CDATA[<span id="more"></span>]]></content>
      
      
      <categories>
          
          <category> Java教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Xml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSM中使用POI实现excel的导入导出</title>
      <link href="/2017/08/27/POIExcel/"/>
      <url>/2017/08/27/POIExcel/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h2 id="环境-导入POI对应的包"><a href="#环境-导入POI对应的包" class="headerlink" title="环境:导入POI对应的包"></a>环境:导入POI对应的包</h2><p>环境：</p><blockquote><p>Spring+SpringMVC+Mybatis</p></blockquote><h2 id="POI对应的包ExcelBean数据封装"><a href="#POI对应的包ExcelBean数据封装" class="headerlink" title="POI对应的包ExcelBean数据封装"></a>POI对应的包<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-ooxml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.14<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-ooxml-schemas<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.14<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.14<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><br>ExcelBean数据封装</h2><h2 id="ExcelBean-java：导入导出工具类"><a href="#ExcelBean-java：导入导出工具类" class="headerlink" title="ExcelBean.java：导入导出工具类"></a>ExcelBean.java：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by LT on 2017-08-23.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExcelBean</span> <span class="keyword">implements</span>  <span class="title class_">java</span>.io.Serializable&#123;</span><br><span class="line">    <span class="keyword">private</span> String headTextName; <span class="comment">//列头（标题）名</span></span><br><span class="line">    <span class="keyword">private</span> String propertyName; <span class="comment">//对应字段名</span></span><br><span class="line">    <span class="keyword">private</span> Integer cols; <span class="comment">//合并单元格数</span></span><br><span class="line">    <span class="keyword">private</span> XSSFCellStyle cellStyle;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ExcelBean</span><span class="params">()</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ExcelBean</span><span class="params">(String headTextName, String propertyName)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.headTextName = headTextName;</span><br><span class="line">        <span class="built_in">this</span>.propertyName = propertyName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ExcelBean</span><span class="params">(String headTextName, String propertyName, Integer cols)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">        <span class="built_in">this</span>.headTextName = headTextName;</span><br><span class="line">        <span class="built_in">this</span>.propertyName = propertyName;</span><br><span class="line">        <span class="built_in">this</span>.cols = cols;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getHeadTextName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> headTextName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setHeadTextName</span><span class="params">(String headTextName)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.headTextName = headTextName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPropertyName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> propertyName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure><br>导入导出工具类</h2><h2 id="ExcelUtil-javaExcel表导出"><a href="#ExcelUtil-javaExcel表导出" class="headerlink" title="ExcelUtil.javaExcel表导出"></a>ExcelUtil.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by LT on 2017-08-23.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExcelUtil</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">excel2003L</span> <span class="operator">=</span><span class="string">&quot;.xls&quot;</span>;    <span class="comment">//2003- 版本的excel</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">excel2007U</span> <span class="operator">=</span><span class="string">&quot;.xlsx&quot;</span>;   <span class="comment">//2007+ 版本的excel</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Excel导入</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  List&lt;List&lt;Object&gt;&gt; <span class="title function_">getBankListByExcel</span><span class="params">(InputStream in, String fileName)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        List&lt;List&lt;Object&gt;&gt; list = <span class="literal">null</span>;</span><br><span class="line">        <span class="comment">//创建Excel工作薄</span></span><br><span class="line">        <span class="type">Workbook</span> <span class="variable">work</span> <span class="operator">=</span> getWorkbook(in,fileName);</span><br><span class="line">        <span class="keyword">if</span>(<span class="literal">null</span> == work)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Exception</span>(<span class="string">&quot;创建Excel工作薄为空！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Sheet</span> <span class="variable">sheet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Row</span> <span class="variable">row</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Cell</span> <span class="variable">cell</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;List&lt;Object&gt;&gt;();</span><br><span class="line">        <span class="comment">//遍历Excel中所有的sheet</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; work.getNumberOfSheets(); i++) &#123;</span><br><span class="line">            sheet = work.getSheetAt(i);</span><br><span class="line">            <span class="keyword">if</span>(sheet==<span class="literal">null</span>)&#123;<span class="keyword">continue</span>;&#125;</span><br><span class="line">            <span class="comment">//遍历当前sheet中的所有行</span></span><br><span class="line">            <span class="comment">//包涵头部，所以要小于等于最后一列数,这里也可以在初始值加上头部行数，以便跳过头部</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> sheet.getFirstRowNum(); j &lt;= sheet.getLastRowNum(); j++) &#123;</span><br><span class="line">                <span class="comment">//读取一行</span></span><br><span class="line">                row = sheet.getRow(j);</span><br><span class="line">                <span class="comment">//去掉空行和表头</span></span><br><span class="line">                <span class="keyword">if</span>(row==<span class="literal">null</span>||row.getFirstCellNum()==j)&#123;<span class="keyword">continue</span>;&#125;</span><br><span class="line">                <span class="comment">//遍历所有的列</span></span><br><span class="line">                List&lt;Object&gt; li = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Object&gt;();</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> row.getFirstCellNum(); y &lt; row.getLastCellNum(); y++) &#123;</span><br><span class="line">                    cell = row.getCell(y);</span><br><span class="line">                    li.add(getCellValue(cell));</span><br><span class="line">                &#125;</span><br><span class="line">                list.add(li);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 描述：根据文件后缀，自适应上传文件的版本</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  Workbook <span class="title function_">getWorkbook</span><span class="params">(InputStream inStr,String fileName)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">Workbook</span> <span class="variable">wb</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">fileType</span> <span class="operator">=</span> fileName.substring(fileName.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">        <span class="keyword">if</span>(excel2003L.equals(fileType))&#123;</span><br><span class="line">            wb = <span class="keyword">new</span> <span class="title class_">HSSFWorkbook</span>(inStr);  <span class="comment">//2003-</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(excel2007U.equals(fileType))&#123;</span><br><span class="line">            wb = <span class="keyword">new</span> <span class="title class_">XSSFWorkbook</span>(inStr);  <span class="comment">//2007+</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Exception</span>(<span class="string">&quot;解析的文件格式有误！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> wb;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 描述：对表格中数值进行格式化</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  Object <span class="title function_">getCellValue</span><span class="params">(Cell cell)</span>&#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">value</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">DecimalFormat</span> <span class="variable">df</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DecimalFormat</span>(<span class="string">&quot;0&quot;</span>);  <span class="comment">//格式化字符类型的数字</span></span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyy-MM-dd&quot;</span>);  <span class="comment">//日期格式化</span></span><br><span class="line">        <span class="type">DecimalFormat</span> <span class="variable">df2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DecimalFormat</span>(<span class="string">&quot;0.00&quot;</span>);  <span class="comment">//格式化数字</span></span><br><span class="line">        <span class="keyword">switch</span> (cell.getCellType()) &#123;</span><br><span class="line">            <span class="keyword">case</span> Cell.CELL_TYPE_STRING:</span><br><span class="line">                value = cell.getRichStringCellValue().getString();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> Cell.CELL_TYPE_NUMERIC:</span><br><span class="line">                <span class="keyword">if</span>(<span class="string">&quot;General&quot;</span>.equals(cell.getCellStyle().getDataFormatString()))&#123;</span><br><span class="line">                    value = df.format(cell.getNumericCellValue());</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&quot;m/d/yy&quot;</span>.equals(cell.getCellStyle().getDataFormatString()))&#123;</span><br><span class="line">                    value = sdf.format(cell.getDateCellValue());</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    value = df2.format(cell.getNumericCellValue());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> Cell.CELL_TYPE_BOOLEAN:</span><br><span class="line">                value = cell.getBooleanCellValue();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> Cell.CELL_TYPE_BLANK:</span><br><span class="line">                value = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 导入Excel表结束</span></span><br><span class="line"><span class="comment">     * 导出Excel表开始</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sheetName 工作簿名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz  数据源model类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> objs   excel标题列以及对应model字段名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map  标题列行数以及cell字体样式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> XSSFWorkbook <span class="title function_">createExcelFile</span><span class="params">(Class clazz, List objs, Map&lt;Integer, List&lt;ExcelBean&gt;&gt; map, String sheetName)</span> <span class="keyword">throws</span></span><br><span class="line">            IllegalArgumentException,IllegalAccessException,InvocationTargetException,</span><br><span class="line">            ClassNotFoundException, IntrospectionException, ParseException &#123;</span><br><span class="line">        <span class="comment">// 创建新的Excel工作簿</span></span><br><span class="line">        <span class="type">XSSFWorkbook</span> <span class="variable">workbook</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">XSSFWorkbook</span>();</span><br><span class="line">        <span class="comment">// 在Excel工作簿中建一工作表，其名为缺省值, 也可以指定Sheet名称</span></span><br><span class="line">        <span class="type">XSSFSheet</span> <span class="variable">sheet</span> <span class="operator">=</span> workbook.createSheet(sheetName);</span><br><span class="line">        <span class="comment">// 以下为excel的字体样式以及excel的标题与内容的创建，下面会具体分析;</span></span><br><span class="line">        createFont(workbook); <span class="comment">//字体样式</span></span><br><span class="line">        createTableHeader(sheet, map); <span class="comment">//创建标题（头）</span></span><br><span class="line">        createTableRows(sheet, map, objs, clazz); <span class="comment">//创建内容</span></span><br><span class="line">        <span class="keyword">return</span> workbook;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> XSSFCellStyle fontStyle;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> XSSFCellStyle fontStyle2;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">createFont</span><span class="params">(XSSFWorkbook workbook)</span> &#123;</span><br><span class="line">        <span class="comment">// 表头</span></span><br><span class="line">        fontStyle = workbook.createCellStyle();</span><br><span class="line">        <span class="type">XSSFFont</span> <span class="variable">font1</span> <span class="operator">=</span> workbook.createFont();</span><br><span class="line">        <span class="comment">//font1.setBoldweight(XSSFFont.BOLDWEIGHT_BOLD);</span></span><br><span class="line">        font1.setFontName(<span class="string">&quot;黑体&quot;</span>);</span><br><span class="line">        font1.setFontHeightInPoints((<span class="type">short</span>) <span class="number">11</span>);<span class="comment">// 设置字体大小</span></span><br><span class="line">        fontStyle.setFont(font1);</span><br><span class="line">        fontStyle.setBorderBottom(XSSFCellStyle.BORDER_THIN); <span class="comment">// 下边框</span></span><br><span class="line">        fontStyle.setBorderLeft(XSSFCellStyle.BORDER_THIN);<span class="comment">// 左边框</span></span><br><span class="line">        fontStyle.setBorderTop(XSSFCellStyle.BORDER_THIN);<span class="comment">// 上边框</span></span><br><span class="line">        fontStyle.setBorderRight(XSSFCellStyle.BORDER_THIN);<span class="comment">// 右边框</span></span><br><span class="line">        fontStyle.setAlignment(XSSFCellStyle.ALIGN_CENTER); <span class="comment">// 居中</span></span><br><span class="line">        <span class="comment">// 内容</span></span><br><span class="line">        fontStyle2=workbook.createCellStyle();</span><br><span class="line">        <span class="type">XSSFFont</span> <span class="variable">font2</span> <span class="operator">=</span> workbook.createFont();</span><br><span class="line">        font2.setFontName(<span class="string">&quot;宋体&quot;</span>);</span><br><span class="line">        font2.setFontHeightInPoints((<span class="type">short</span>) <span class="number">12</span>);<span class="comment">// 设置字体大小</span></span><br><span class="line">        fontStyle2.setFont(font2);</span><br><span class="line">        fontStyle2.setBorderBottom(XSSFCellStyle.BORDER_THIN); <span class="comment">// 下边框</span></span><br><span class="line">        fontStyle2.setBorderLeft(XSSFCellStyle.BORDER_THIN);<span class="comment">// 左边框</span></span><br><span class="line">        fontStyle2.setBorderTop(XSSFCellStyle.BORDER_THIN);<span class="comment">// 上边框</span></span><br><span class="line">        fontStyle2.setBorderRight(XSSFCellStyle.BORDER_THIN);<span class="comment">// 右边框</span></span><br><span class="line">        fontStyle2.setAlignment(XSSFCellStyle.ALIGN_RIGHT); <span class="comment">// 居中</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据ExcelMapping 生成列头（多行列头）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sheet 工作簿</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map 每行每个单元格对应的列头信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">createTableHeader</span><span class="params">(XSSFSheet sheet, Map&lt;Integer, List&lt;ExcelBean&gt;&gt; map)</span> &#123;</span><br><span class="line">        <span class="type">int</span> startIndex=<span class="number">0</span>;<span class="comment">//cell起始位置</span></span><br><span class="line">        <span class="type">int</span> endIndex=<span class="number">0</span>;<span class="comment">//cell终止位置</span></span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;Integer, List&lt;ExcelBean&gt;&gt; entry : map.entrySet()) &#123;</span><br><span class="line">            <span class="type">XSSFRow</span> <span class="variable">row</span> <span class="operator">=</span> sheet.createRow(entry.getKey());</span><br><span class="line">            List&lt;ExcelBean&gt; excels = entry.getValue();</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">0</span>; x &lt; excels.size(); x++) &#123;</span><br><span class="line">                <span class="comment">//合并单元格</span></span><br><span class="line">                <span class="keyword">if</span>(excels.get(x).getCols()&gt;<span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(x==<span class="number">0</span>)&#123;</span><br><span class="line">                        endIndex+=excels.get(x).getCols()-<span class="number">1</span>;</span><br><span class="line">                        CellRangeAddress range=<span class="keyword">new</span> <span class="title class_">CellRangeAddress</span>(<span class="number">0</span>,<span class="number">0</span>,startIndex,endIndex);</span><br><span class="line">                        sheet.addMergedRegion(range);</span><br><span class="line">                        startIndex+=excels.get(x).getCols();</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        endIndex+=excels.get(x).getCols();</span><br><span class="line">                        CellRangeAddress range=<span class="keyword">new</span> <span class="title class_">CellRangeAddress</span>(<span class="number">0</span>,<span class="number">0</span>,startIndex,endIndex);</span><br><span class="line">                        sheet.addMergedRegion(range);</span><br><span class="line">                        startIndex+=excels.get(x).getCols();</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="type">XSSFCell</span> <span class="variable">cell</span> <span class="operator">=</span> row.createCell(startIndex-excels.get(x).getCols());</span><br><span class="line">                    cell.setCellValue(excels.get(x).getHeadTextName());<span class="comment">// 设置内容</span></span><br><span class="line">                    <span class="keyword">if</span> (excels.get(x).getCellStyle() != <span class="literal">null</span>) &#123;</span><br><span class="line">                        cell.setCellStyle(excels.get(x).getCellStyle());<span class="comment">// 设置格式</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    cell.setCellStyle(fontStyle);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="type">XSSFCell</span> <span class="variable">cell</span> <span class="operator">=</span> row.createCell(x);</span><br><span class="line">                    cell.setCellValue(excels.get(x).getHeadTextName());<span class="comment">// 设置内容</span></span><br><span class="line">                    <span class="keyword">if</span> (excels.get(x).getCellStyle() != <span class="literal">null</span>) &#123;</span><br><span class="line">                        cell.setCellStyle(excels.get(x).getCellStyle());<span class="comment">// 设置格式</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    cell.setCellStyle(fontStyle);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">createTableRows</span><span class="params">(XSSFSheet sheet, Map&lt;Integer, List&lt;ExcelBean&gt;&gt; map, List objs, Class clazz)</span></span><br><span class="line">            <span class="keyword">throws</span> IllegalArgumentException, IllegalAccessException, InvocationTargetException, IntrospectionException,</span><br><span class="line">            ClassNotFoundException, ParseException &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">rowindex</span> <span class="operator">=</span> map.size();</span><br><span class="line">        <span class="type">int</span> <span class="variable">maxKey</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        List&lt;ExcelBean&gt; ems = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;ExcelBean&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;Integer, List&lt;ExcelBean&gt;&gt; entry : map.entrySet()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (entry.getKey() &gt; maxKey) &#123;</span><br><span class="line">                maxKey = entry.getKey();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ems = map.get(maxKey);</span><br><span class="line">        List&lt;Integer&gt; widths = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;(ems.size());</span><br><span class="line">        <span class="keyword">for</span> (Object obj : objs) &#123;</span><br><span class="line">            <span class="type">XSSFRow</span> <span class="variable">row</span> <span class="operator">=</span> sheet.createRow(rowindex);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; ems.size(); i++) &#123;</span><br><span class="line">                <span class="type">ExcelBean</span> <span class="variable">em</span> <span class="operator">=</span> (ExcelBean) ems.get(i);</span><br><span class="line">                <span class="comment">// 获得get方法</span></span><br><span class="line">                <span class="type">PropertyDescriptor</span> <span class="variable">pd</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PropertyDescriptor</span>(em.getPropertyName(), clazz);</span><br><span class="line">                <span class="type">Method</span> <span class="variable">getMethod</span> <span class="operator">=</span> pd.getReadMethod();</span><br><span class="line">                <span class="type">Object</span> <span class="variable">rtn</span> <span class="operator">=</span> getMethod.invoke(obj);</span><br><span class="line">                <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">                <span class="comment">// 如果是日期类型进行转换</span></span><br><span class="line">                <span class="keyword">if</span> (rtn != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (rtn <span class="keyword">instanceof</span> Date) &#123;</span><br><span class="line">                        value = DateUtils.dateToString((Date)rtn);</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(rtn <span class="keyword">instanceof</span> BigDecimal)&#123;</span><br><span class="line">                        <span class="type">NumberFormat</span> <span class="variable">nf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DecimalFormat</span>(<span class="string">&quot;#,##0.00&quot;</span>);</span><br><span class="line">                        value=nf.format((BigDecimal)rtn).toString();</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span>((rtn <span class="keyword">instanceof</span> Integer) &amp;&amp; (Integer.valueOf(rtn.toString())&lt;<span class="number">0</span> ))&#123;</span><br><span class="line">                        value=<span class="string">&quot;--&quot;</span>;</span><br><span class="line">                    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                        value = rtn.toString();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">XSSFCell</span> <span class="variable">cell</span> <span class="operator">=</span> row.createCell(i);</span><br><span class="line">                cell.setCellValue(value);</span><br><span class="line">                cell.setCellType(XSSFCell.CELL_TYPE_STRING);</span><br><span class="line">                cell.setCellStyle(fontStyle2);</span><br><span class="line">                <span class="comment">// 获得最大列宽</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">width</span> <span class="operator">=</span> value.getBytes().length * <span class="number">300</span>;</span><br><span class="line">                <span class="comment">// 还未设置，设置当前</span></span><br><span class="line">                <span class="keyword">if</span> (widths.size() &lt;= i) &#123;</span><br><span class="line">                    widths.add(width);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 比原来大，更新数据</span></span><br><span class="line">                <span class="keyword">if</span> (width &gt; widths.get(i)) &#123;</span><br><span class="line">                    widths.set(i, width);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            rowindex++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 设置列宽</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">0</span>; index &lt; widths.size(); index++) &#123;</span><br><span class="line">            <span class="type">Integer</span> <span class="variable">width</span> <span class="operator">=</span> widths.get(index);</span><br><span class="line">            width = width &lt; <span class="number">2500</span> ? <span class="number">2500</span> : width + <span class="number">300</span>;</span><br><span class="line">            width = width &gt; <span class="number">10000</span> ? <span class="number">10000</span> + <span class="number">300</span> : width + <span class="number">300</span>;</span><br><span class="line">            sheet.setColumnWidth(index, width);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>Excel表导出</h2><h2 id="ExcelController-javaExcel表导出"><a href="#ExcelController-javaExcel表导出" class="headerlink" title="ExcelController.javaExcel表导出"></a>ExcelController.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 上传excel并将内容导入数据库中</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/import&quot;)</span></span><br><span class="line"><span class="meta">@Permission(&quot;login&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Object <span class="title function_">importExcel</span><span class="params">(MultipartFile file, HttpServletRequest request)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (request.getSession().getAttribute(<span class="string">&quot;userName&quot;</span>) == <span class="literal">null</span> || request.getSession().getAttribute(<span class="string">&quot;userName&quot;</span>).toString().isEmpty()) &#123;</span><br><span class="line">            map.put(<span class="string">&quot;code&quot;</span>, <span class="string">&quot;20000&quot;</span>);</span><br><span class="line">            map.put(<span class="string">&quot;mes&quot;</span>, <span class="string">&quot;请先登录再进行操作！！！&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> map;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(file.getOriginalFilename());</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> file.getInputStream();</span><br><span class="line">        List&lt;List&lt;Object&gt;&gt; listob = ExcelUtil.getBankListByExcel(in, file.getOriginalFilename());</span><br><span class="line">        List&lt;Inventory&gt; inventoryList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Inventory&gt;();</span><br><span class="line">        <span class="type">String</span> <span class="variable">createBy</span> <span class="operator">=</span> request.getSession().getAttribute(<span class="string">&quot;userName&quot;</span>).toString();</span><br><span class="line">        <span class="comment">//遍历listob数据，把数据放到List中</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; listob.size(); i++) &#123;</span><br><span class="line">            List&lt;Object&gt; ob = listob.get(i);</span><br><span class="line">            <span class="type">Inventory</span> <span class="variable">inventory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Inventory</span>();</span><br><span class="line">            <span class="comment">//通过遍历实现把每一列封装成一个model中，再把所有的model用List集合装载</span></span><br><span class="line">            inventory.setCompany(String.valueOf(ob.get(<span class="number">0</span>)).trim());</span><br><span class="line">            inventory.setArea(String.valueOf(ob.get(<span class="number">1</span>)).trim());</span><br><span class="line">            inventory.setWarehouse(String.valueOf(ob.get(<span class="number">2</span>)).trim());</span><br><span class="line">            inventory.setWarehouseName(String.valueOf(ob.get(<span class="number">3</span>)).trim());</span><br><span class="line">            inventory.setStoreAttributes(String.valueOf(ob.get(<span class="number">4</span>)).trim());</span><br><span class="line">            inventory.setMaterialBig(String.valueOf(ob.get(<span class="number">5</span>)).trim());</span><br><span class="line">            inventory.setMaterialMid(String.valueOf(ob.get(<span class="number">6</span>)).trim());</span><br><span class="line">            inventory.setMaterialSmall(String.valueOf(ob.get(<span class="number">7</span>)).trim());</span><br><span class="line">            inventory.setMaterialModel(String.valueOf(ob.get(<span class="number">8</span>)).trim());</span><br><span class="line">            inventory.setMaterialCode(String.valueOf(ob.get(<span class="number">9</span>)).trim());</span><br><span class="line">            inventory.setMaterialTips(String.valueOf(ob.get(<span class="number">10</span>)).trim());</span><br><span class="line">            inventory.setServiceAttribute(String.valueOf(ob.get(<span class="number">11</span>)).trim());</span><br><span class="line">            inventory.setPlanner(String.valueOf(ob.get(<span class="number">12</span>)).trim());</span><br><span class="line">            inventory.setSales(String.valueOf(ob.get(<span class="number">13</span>)).trim());</span><br><span class="line">            inventory.setEndingCount(String.valueOf(ob.get(<span class="number">14</span>)).trim());</span><br><span class="line">            inventory.setTransferin(String.valueOf(ob.get(<span class="number">15</span>)).trim());</span><br><span class="line">            inventory.setInventory(String.valueOf(ob.get(<span class="number">16</span>)).trim());</span><br><span class="line">            inventory.setCreateTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">            inventory.setCreateBy(createBy);</span><br><span class="line">            inventoryList.add(inventory);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//批量插入</span></span><br><span class="line">        inventoryService.insertInfoBatch(inventoryList);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        LogUtil.error(<span class="string">&quot;ExcelController-----importExcel:&quot;</span> + e.getMessage());</span><br><span class="line">        map.put(<span class="string">&quot;code&quot;</span>, <span class="string">&quot;30000&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;mes&quot;</span>, <span class="string">&quot;上传异常&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line">    map.put(<span class="string">&quot;code&quot;</span>, <span class="string">&quot;10000&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;mes&quot;</span>, <span class="string">&quot;上传成功&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;url&quot;</span>,<span class="string">&quot;user/crud&quot;</span>);</span><br><span class="line">    LogUtil.info(<span class="string">&quot;ExcelController-----importExcel:&quot;</span> + map.toString());</span><br><span class="line">    <span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>Excel表导出</h2><h2 id="ExcelController-javamapper-xml配置"><a href="#ExcelController-javamapper-xml配置" class="headerlink" title="ExcelController.javamapper.xml配置"></a>ExcelController.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将数据库中的数据导出为excel</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/output&quot;)</span></span><br><span class="line"><span class="meta">@Permission(&quot;login&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Object <span class="title function_">outputExcel</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> &#123;</span><br><span class="line"></span><br><span class="line">    response.reset(); <span class="comment">//清除buffer缓存</span></span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;(), TempMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, Object&gt;();</span><br><span class="line">    System.out.println(<span class="string">&quot;startDate:&quot;</span>+request.getParameter(<span class="string">&quot;startDate&quot;</span>));</span><br><span class="line">    System.out.println(<span class="string">&quot;endDate:&quot;</span>+request.getParameter(<span class="string">&quot;endDate&quot;</span>));</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (request.getSession().getAttribute(<span class="string">&quot;userName&quot;</span>) == <span class="literal">null</span> || request.getSession().getAttribute(<span class="string">&quot;userName&quot;</span>).toString().isEmpty()) &#123;</span><br><span class="line">            map.put(<span class="string">&quot;code&quot;</span>, <span class="string">&quot;20000&quot;</span>);</span><br><span class="line">            map.put(<span class="string">&quot;mes&quot;</span>, <span class="string">&quot;请先登录再进行操作！！！&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> map;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> DateUtils.getCurrentDate() + <span class="string">&quot;~&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (request.getParameter(<span class="string">&quot;startDate&quot;</span>) != <span class="literal">null</span>&amp;&amp; !<span class="string">&quot;&quot;</span>.equals(request.getParameter(<span class="string">&quot;startDate&quot;</span>))) &#123;</span><br><span class="line">            TempMap.put(<span class="string">&quot;startDate&quot;</span>, request.getParameter(<span class="string">&quot;startDate&quot;</span>));</span><br><span class="line"></span><br><span class="line">            fileName = DateUtils.formatString(request.getParameter(<span class="string">&quot;startDate&quot;</span>))+ <span class="string">&quot;~&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (request.getParameter(<span class="string">&quot;endDate&quot;</span>) != <span class="literal">null</span>&amp;&amp;!<span class="string">&quot;&quot;</span>.equals(request.getParameter(<span class="string">&quot;endDate&quot;</span>))) &#123;</span><br><span class="line">            TempMap.put(<span class="string">&quot;endDate&quot;</span>, request.getParameter(<span class="string">&quot;endDate&quot;</span>));</span><br><span class="line">            fileName =fileName+ DateUtils.formatString(request.getParameter(<span class="string">&quot;endDate&quot;</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            fileName = fileName + DateUtils.dateToString(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 指定下载的文件名</span></span><br><span class="line">        response.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;filename=&quot;</span> + fileName + <span class="string">&quot;.xlsx&quot;</span>);</span><br><span class="line">        response.setContentType(<span class="string">&quot;application/vnd.ms-excel;charset=UTF-8&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Pragma&quot;</span>, <span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Cache-Control&quot;</span>, <span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">        response.setDateHeader(<span class="string">&quot;Expires&quot;</span>, <span class="number">0</span>);</span><br><span class="line">        List&lt;Inventory&gt; list = inventoryService.getList(TempMap);</span><br><span class="line">        List&lt;ExcelBean&gt; excel = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;ExcelBean&gt;();</span><br><span class="line">        Map&lt;Integer, List&lt;ExcelBean&gt;&gt; mapExcel = <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;Integer, List&lt;ExcelBean&gt;&gt;();</span><br><span class="line">        <span class="type">XSSFWorkbook</span> <span class="variable">xssfWorkbook</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="comment">//设置标题栏</span></span><br><span class="line">        excel.add(<span class="keyword">new</span> <span class="title class_">ExcelBean</span>(<span class="string">&quot;行政公司&quot;</span>, <span class="string">&quot;company&quot;</span>, <span class="number">0</span>));</span><br><span class="line">        excel.add(<span class="keyword">new</span> <span class="title class_">ExcelBean</span>(<span class="string">&quot;区域&quot;</span>, <span class="string">&quot;area&quot;</span>, <span class="number">0</span>));</span><br><span class="line">        excel.add(<span class="keyword">new</span> <span class="title class_">ExcelBean</span>(<span class="string">&quot;门店-仓库&quot;</span>, <span class="string">&quot;warehouse&quot;</span>, <span class="number">0</span>));</span><br><span class="line">        excel.add(<span class="keyword">new</span> <span class="title class_">ExcelBean</span>(<span class="string">&quot;门店-仓库名称&quot;</span>, <span class="string">&quot;warehouseName&quot;</span>, <span class="number">0</span>));</span><br><span class="line">        excel.add(<span class="keyword">new</span> <span class="title class_">ExcelBean</span>(<span class="string">&quot;门店属性&quot;</span>, <span class="string">&quot;storeAttributes&quot;</span>, <span class="number">0</span>));</span><br><span class="line">        excel.add(<span class="keyword">new</span> <span class="title class_">ExcelBean</span>(<span class="string">&quot;物料大类&quot;</span>, <span class="string">&quot;materialBig&quot;</span>, <span class="number">0</span>));</span><br><span class="line">        excel.add(<span class="keyword">new</span> <span class="title class_">ExcelBean</span>(<span class="string">&quot;物料中类(手机制式)&quot;</span>, <span class="string">&quot;materialMid&quot;</span>, <span class="number">0</span>));</span><br><span class="line">        excel.add(<span class="keyword">new</span> <span class="title class_">ExcelBean</span>(<span class="string">&quot;物料小类&quot;</span>, <span class="string">&quot;materialSmall&quot;</span>, <span class="number">0</span>));</span><br><span class="line">        excel.add(<span class="keyword">new</span> <span class="title class_">ExcelBean</span>(<span class="string">&quot;物料型号&quot;</span>, <span class="string">&quot;materialModel&quot;</span>, <span class="number">0</span>));</span><br><span class="line">        excel.add(<span class="keyword">new</span> <span class="title class_">ExcelBean</span>(<span class="string">&quot;物料编码&quot;</span>, <span class="string">&quot;materialCode&quot;</span>, <span class="number">0</span>));</span><br><span class="line">        excel.add(<span class="keyword">new</span> <span class="title class_">ExcelBean</span>(<span class="string">&quot;物料说明&quot;</span>, <span class="string">&quot;materialTips&quot;</span>, <span class="number">0</span>));</span><br><span class="line">        excel.add(<span class="keyword">new</span> <span class="title class_">ExcelBean</span>(<span class="string">&quot;业务属性&quot;</span>, <span class="string">&quot;serviceAttribute&quot;</span>, <span class="number">0</span>));</span><br><span class="line">        excel.add(<span class="keyword">new</span> <span class="title class_">ExcelBean</span>(<span class="string">&quot;计划员&quot;</span>, <span class="string">&quot;planner&quot;</span>, <span class="number">0</span>));</span><br><span class="line">        excel.add(<span class="keyword">new</span> <span class="title class_">ExcelBean</span>(<span class="string">&quot;销量&quot;</span>, <span class="string">&quot;sales&quot;</span>, <span class="number">0</span>));</span><br><span class="line">        excel.add(<span class="keyword">new</span> <span class="title class_">ExcelBean</span>(<span class="string">&quot;期末数量&quot;</span>, <span class="string">&quot;endingCount&quot;</span>, <span class="number">0</span>));</span><br><span class="line">        excel.add(<span class="keyword">new</span> <span class="title class_">ExcelBean</span>(<span class="string">&quot;调拨在途&quot;</span>, <span class="string">&quot;transferin&quot;</span>, <span class="number">0</span>));</span><br><span class="line">        excel.add(<span class="keyword">new</span> <span class="title class_">ExcelBean</span>(<span class="string">&quot;库存&quot;</span>, <span class="string">&quot;inventory&quot;</span>, <span class="number">0</span>));</span><br><span class="line">        mapExcel.put(<span class="number">0</span>, excel);</span><br><span class="line">        <span class="type">String</span> <span class="variable">sheetName</span> <span class="operator">=</span> fileName + <span class="string">&quot;天翼库存表&quot;</span>;</span><br><span class="line">        xssfWorkbook = ExcelUtil.createExcelFile(Inventory.class, list, mapExcel, sheetName);</span><br><span class="line">        OutputStream output;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            output = response.getOutputStream();</span><br><span class="line">            <span class="type">BufferedOutputStream</span> <span class="variable">bufferedOutPut</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedOutputStream</span>(output);</span><br><span class="line">            bufferedOutPut.flush();</span><br><span class="line">            xssfWorkbook.write(bufferedOutPut);</span><br><span class="line">            bufferedOutPut.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            LogUtil.error(<span class="string">&quot;ExcelController-----outputExcel:&quot;</span> + e.getMessage());</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            map.put(<span class="string">&quot;code&quot;</span>, <span class="string">&quot;30000&quot;</span>);</span><br><span class="line">            map.put(<span class="string">&quot;mes&quot;</span>, <span class="string">&quot;导出异常&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> map;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        LogUtil.error(<span class="string">&quot;ExcelController-----outputExcel:&quot;</span> + e.getMessage());</span><br><span class="line">        map.put(<span class="string">&quot;code&quot;</span>, <span class="string">&quot;30000&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;mes&quot;</span>, <span class="string">&quot;导出异常&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line">    map.put(<span class="string">&quot;code&quot;</span>, <span class="string">&quot;10000&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;mes&quot;</span>, <span class="string">&quot;导出成功&quot;</span>);</span><br><span class="line">    LogUtil.info(<span class="string">&quot;ExcelController-----outputExcel:&quot;</span> + map.toString());</span><br><span class="line">    <span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>mapper.xml配置</h2><p>InventoryMapping.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertInfoBatch&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;java.util.List&quot;</span>&gt;</span></span><br><span class="line">    insert into inventory (</span><br><span class="line">    company, area,warehouse, warehouseName, storeAttributes,materialBig,</span><br><span class="line">    materialMid, materialSmall, materialModel, materialCode, materialTips,serviceAttribute,</span><br><span class="line">    planner , sales, endingCount, transferin, inventory, createTime, createBy</span><br><span class="line">    )</span><br><span class="line">    values</span><br><span class="line">    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;list&quot;</span> <span class="attr">item</span>=<span class="string">&quot;item&quot;</span> <span class="attr">index</span>=<span class="string">&quot;index&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line">        (</span><br><span class="line">        #&#123;item.company&#125;, #&#123;item.area&#125;, #&#123;item.warehouse&#125;,#&#123;item.warehouseName&#125;, #&#123;item.storeAttributes&#125;, #&#123;item.materialBig&#125;,</span><br><span class="line">        #&#123;item.materialMid&#125;,#&#123;item.materialSmall&#125;, #&#123;item.materialModel&#125;,#&#123;item.materialCode&#125;, #&#123;item.materialTips&#125;, #&#123;item.serviceAttribute&#125;,</span><br><span class="line">        #&#123;item.planner&#125;, #&#123;item.sales&#125;, #&#123;item.endingCount&#125;,#&#123;item.transferin&#125;, #&#123;item.inventory&#125;, #&#123;item.createTime&#125;, #&#123;item.createBy&#125;</span><br><span class="line">        )</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>为了方便所以将service层的代码写到了Controller里了</code></p><h2 id="项目效果图"><a href="#项目效果图" class="headerlink" title="项目效果图"></a>项目效果图</h2>]]></content>
      
      
      <categories>
          
          <category> Java教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Mysql </tag>
            
            <tag> SSM </tag>
            
            <tag> Excel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring AOP 实现数据库读写分离</title>
      <link href="/2017/08/12/SpringRead-write-separation/"/>
      <url>/2017/08/12/SpringRead-write-separation/</url>
      
        <content type="html"><![CDATA[<p><img src="https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=3833687770,1236182247&fm=26&gp=0.jpg" alt="Mou_icon"></p><span id="more"></span><h1 id="背景"><a href="#背景" class="headerlink" title=" 背景"></a> 背景</h1><p>我们一般应用对数据库而言都是“读多写少”，也就说对数据库读取数据的压力比较大，有一个思路就是说采用数据库集群的方案，<br>其中一个是主库，负责写入数据，我们称之为：写库；<br>其它都是从库，负责读取数据，我们称之为：读库；<br>那么，对我们的要求是：</p><blockquote><ul><li>读库和写库的数据一致；</li><li>写数据必须写到写库；</li><li>读数据必须到读库；</li></ul></blockquote><h1 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h1><p>目前公司已经对数据库进行了双机热备，保证了读库和写库的数据一致性，<br> 所以目前要做的就是解决读写分离</p><blockquote><p>解决读写分离的方案有两种：应用层解决和中间件解决。</p></blockquote><h2 id="应用层解决"><a href="#应用层解决" class="headerlink" title="应用层解决"></a>应用层解决</h2><p><img src="http://ou38qmztk.bkt.clouddn.com/read_write_model.jpg" alt="Mou_icon"></p><p>优点：</p><blockquote><p>1.多数据源切换方便，由程序自动完成；<br>2.不需要引入中间件；<br>3.理论上支持任何数据库；</p></blockquote><p>缺点：</p><blockquote><p>1.由程序员完成，运维参与不到；<br>2.不能做到动态增加数据源；</p></blockquote><h2 id="中间件解决"><a href="#中间件解决" class="headerlink" title="中间件解决"></a>中间件解决</h2><p><img src="http://ou38qmztk.bkt.clouddn.com/read_write_model2.jpg" alt="Mou_icon"></p><p>优点：</p><blockquote><p>1.源程序不需要做任何改动就可以实现读写分离；<br>2.动态添加数据源不需要重启程序；</p></blockquote><p>缺点：</p><blockquote><p>1.程序依赖于中间件，会导致切换数据库变得困难；<br>2.由中间件做了中转代理，性能有所下降；</p></blockquote><p>本文我们介绍一种在应用层的解决方案，通过spring动态数据源和AOP来解决数据库的读写分离。</p><h1 id="使用Spring基于应用层实现"><a href="#使用Spring基于应用层实现" class="headerlink" title="使用Spring基于应用层实现"></a>使用Spring基于应用层实现</h1><h2 id="数据源配置"><a href="#数据源配置" class="headerlink" title="数据源配置"></a>数据源配置</h2><h2 id="1-读（jdbc-properties）2-写（jdbc-properties）xml文件需添加的相关配置"><a href="#1-读（jdbc-properties）2-写（jdbc-properties）xml文件需添加的相关配置" class="headerlink" title="1.读（jdbc.properties）2.写（jdbc.properties）xml文件需添加的相关配置"></a>1.读（jdbc.properties）<br><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://192.168.8.19:3306/newagency?useUnicode=true&amp;characterEncoding=UTF-8</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">***</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">***</span></span><br><span class="line"><span class="comment">#password=123</span></span><br><span class="line"><span class="comment">#定义初始连接数</span></span><br><span class="line"><span class="attr">initialSize</span>=<span class="string">0</span></span><br><span class="line"><span class="comment">#定义最大连接数</span></span><br><span class="line"><span class="attr">maxActive</span>=<span class="string">20</span></span><br><span class="line"><span class="comment">#定义最大空闲</span></span><br><span class="line"><span class="attr">maxIdle</span>=<span class="string">20</span></span><br><span class="line"><span class="comment">#定义最小空闲</span></span><br><span class="line"><span class="attr">minIdle</span>=<span class="string">1</span></span><br><span class="line"><span class="comment">#定义最长等待时间</span></span><br><span class="line"><span class="attr">maxWait</span>=<span class="string">60000</span></span><br></pre></td></tr></table></figure><br>2.写（jdbc.properties）<br><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://192.168.8.20:3306/newagency?useUnicode=true&amp;characterEncoding=UTF-8</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">***</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">***</span></span><br><span class="line"><span class="comment">#password=123</span></span><br><span class="line"><span class="comment">#定义初始连接数</span></span><br><span class="line"><span class="attr">initialSize</span>=<span class="string">0</span></span><br><span class="line"><span class="comment">#定义最大连接数</span></span><br><span class="line"><span class="attr">maxActive</span>=<span class="string">20</span></span><br><span class="line"><span class="comment">#定义最大空闲</span></span><br><span class="line"><span class="attr">maxIdle</span>=<span class="string">20</span></span><br><span class="line"><span class="comment">#定义最小空闲</span></span><br><span class="line"><span class="attr">minIdle</span>=<span class="string">1</span></span><br><span class="line"><span class="comment">#定义最长等待时间</span></span><br><span class="line"><span class="attr">maxWait</span>=<span class="string">60000</span></span><br></pre></td></tr></table></figure><br>xml文件需添加的相关配置</h2><h2 id="1-spring-mybatis-xmlJava源码"><a href="#1-spring-mybatis-xmlJava源码" class="headerlink" title="1.spring-mybatis.xmlJava源码"></a>1.spring-mybatis.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">   <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">   <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">   <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span> <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">   <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  </span></span></span><br><span class="line"><span class="string"><span class="tag">                        http://www.springframework.org/schema/context  </span></span></span><br><span class="line"><span class="string"><span class="tag">                        http://www.springframework.org/schema/context/spring-context-3.1.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">                        http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="string"><span class="tag">                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">                        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/aop/spring-aop.xsd &quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;masterdataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.commons.dbcp.BasicDataSource&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">destroy-method</span>=<span class="string">&quot;close&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;driver&#125;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;masterdataSourceurl&#125;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;username&#125;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;password&#125;&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 初始化连接大小 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;initialSize&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 连接池最大数量 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxActive&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;maxActive&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 连接池最大空闲 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxIdle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;maxIdle&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 连接池最小空闲 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minIdle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;minIdle&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 获取连接最大等待时间 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxWait&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;maxWait&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- removeAbandoned: 是否自动回收超时连接 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;removeAbandoned&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;removeAbandoned&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- removeAbandonedTimeout: 超时时间(以秒数为单位) --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;removeAbandonedTimeout&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;removeAbandonedTimeout&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;timeBetweenEvictionRunsMillis&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;timeBetweenEvictionRunsMillis&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;numTestsPerEvictionRun&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;numTestsPerEvictionRun&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 1000 * 60 * 30  连接在池中保持空闲而不被空闲连接回收器线程 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minEvictableIdleTimeMillis&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;minEvictableIdleTimeMillis&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;validationQuery&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;validationQuery&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 定时对线程池中的链接进行validateObject校验，对无效的链接进行关闭 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;property name=&quot;testWhileIdle&quot; value=&quot;$&#123;testWhileIdle&#125;&quot;&gt;&lt;/property&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定在从连接池中拿连接时，要检查连接是否有效，若无效会将连接从连接池中移除掉 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;testOnBorrow&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;testOnBorrow&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;slavedataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.commons.dbcp.BasicDataSource&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">destroy-method</span>=<span class="string">&quot;close&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;driver&#125;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;slavedataSourceurl&#125;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;username&#125;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;password&#125;&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 初始化连接大小 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initialSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;initialSize&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 连接池最大数量 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxActive&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;maxActive&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 连接池最大空闲 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxIdle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;maxIdle&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 连接池最小空闲 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minIdle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;minIdle&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 获取连接最大等待时间 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxWait&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;maxWait&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- removeAbandoned: 是否自动回收超时连接 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;removeAbandoned&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;removeAbandoned&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- removeAbandonedTimeout: 超时时间(以秒数为单位) --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;removeAbandonedTimeout&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;removeAbandonedTimeout&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;timeBetweenEvictionRunsMillis&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;timeBetweenEvictionRunsMillis&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;numTestsPerEvictionRun&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;numTestsPerEvictionRun&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 1000 * 60 * 30  连接在池中保持空闲而不被空闲连接回收器线程 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minEvictableIdleTimeMillis&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;minEvictableIdleTimeMillis&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;validationQuery&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;validationQuery&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 定时对线程池中的链接进行validateObject校验，对无效的链接进行关闭 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;property name=&quot;testWhileIdle&quot; value=&quot;$&#123;testWhileIdle&#125;&quot;&gt;&lt;/property&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定在从连接池中拿连接时，要检查连接是否有效，若无效会将连接从连接池中移除掉 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;testOnBorrow&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;testOnBorrow&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.cn.hjsj.base.SqlSource.DynamicDataSource&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;targetDataSources&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">map</span> <span class="attr">key-type</span>=<span class="string">&quot;java.lang.String&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- write --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;master&quot;</span> <span class="attr">value-ref</span>=<span class="string">&quot;masterdataSource&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- read --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;slave&quot;</span> <span class="attr">value-ref</span>=<span class="string">&quot;slavedataSource&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;defaultTargetDataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;masterdataSource&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 配置数据库注解aop --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:aspectj-autoproxy</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;manyDataSourceAspect&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.cn.hjsj.base.aop.DataSourceAspect&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">id</span>=<span class="string">&quot;c&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;manyDataSourceAspect&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;tx&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.cn.hjsj.dao.*.*(..))&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;tx&quot;</span> <span class="attr">method</span>=<span class="string">&quot;before&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置数据库注解aop --&gt;</span></span><br></pre></td></tr></table></figure><br>Java源码</h2><p>1.DataSource</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Created by LT on 2017-07-31.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Target(ElementType.METHOD)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> DataSource &#123;</span><br><span class="line">  String <span class="title function_">value</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.DataSourceAspect</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by LT on 2017-07-31.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DataSourceAspect</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">(JoinPoint point)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">target</span> <span class="operator">=</span> point.getTarget();</span><br><span class="line">        <span class="type">String</span> <span class="variable">method</span> <span class="operator">=</span> point.getSignature().getName();</span><br><span class="line"></span><br><span class="line">        Class&lt;?&gt;[] classz = target.getClass().getInterfaces();</span><br><span class="line"></span><br><span class="line">        Class&lt;?&gt;[] parameterTypes = ((MethodSignature) point.getSignature())</span><br><span class="line">                .getMethod().getParameterTypes();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Method</span> <span class="variable">m</span> <span class="operator">=</span> classz[<span class="number">0</span>].getMethod(method, parameterTypes);</span><br><span class="line">            <span class="keyword">if</span> (m != <span class="literal">null</span> &amp;&amp; m.isAnnotationPresent(DataSource.class)) &#123;</span><br><span class="line">                <span class="type">DataSource</span> <span class="variable">data</span> <span class="operator">=</span> m</span><br><span class="line">                        .getAnnotation(DataSource.class);</span><br><span class="line">                DynamicDataSourceHolder.putDataSource(data.value());</span><br><span class="line">                System.out.println(<span class="string">&quot;datasource come from:&quot;</span>+data.value());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// <span class="doctag">TODO:</span> handle exception</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-DynamicDataSource4-DynamicDataSourceHolder测试"><a href="#3-DynamicDataSource4-DynamicDataSourceHolder测试" class="headerlink" title="3.DynamicDataSource4.DynamicDataSourceHolder测试"></a>3.DynamicDataSource<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by LT on 2017-07-31.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DynamicDataSource</span> <span class="keyword">extends</span> <span class="title class_">AbstractRoutingDataSource</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Object <span class="title function_">determineCurrentLookupKey</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> DynamicDataSourceHolder.getDataSouce();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>4.DynamicDataSourceHolder<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by LT on 2017-07-31.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DynamicDataSourceHolder</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> ThreadLocal&lt;String&gt; holder = <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">putDataSource</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        holder.set(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getDataSouce</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> holder.get();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>测试</h2><h2 id="1-mapper文件2-Dao层3-Controller层结果"><a href="#1-mapper文件2-Dao层3-Controller层结果" class="headerlink" title="1.mapper文件2.Dao层3.Controller层结果"></a>1.mapper文件<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id=&quot;getListCount&quot; resultType=&quot;java.lang.Integer&quot;&gt;</span><br><span class="line">        &lt;![CDATA[</span><br><span class="line">SELECT count(*) FROM system_user</span><br><span class="line">]]&gt;</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line">    &lt;update id=&quot;userExit&quot; parameterType=&quot;com.cn.hjsj.pojo.User&quot;&gt;</span><br><span class="line">        update system_user</span><br><span class="line">        &lt;set&gt;</span><br><span class="line">            recordStatus = #&#123;recordStatus,jdbcType=VARCHAR&#125;,</span><br><span class="line">        &lt;/set&gt;</span><br><span class="line">        where userId= #&#123;userId,jdbcType=INTEGER&#125;</span><br><span class="line">    &lt;/update&gt;</span><br></pre></td></tr></table></figure><br>2.Dao层<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@DataSource(&quot;master&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Integer <span class="title function_">getListCount</span><span class="params">()</span>;</span><br><span class="line"><span class="meta">@DataSource(&quot;slave&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Integer <span class="title function_">userExit</span><span class="params">(User user)</span>;</span><br></pre></td></tr></table></figure><br>3.Controller层<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> testService.getListCount();</span><br><span class="line"><span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> testService.userExit(user);</span><br></pre></td></tr></table></figure><br>结果</h2><p><img src="http://ou38qmztk.bkt.clouddn.com/Test.bmp" alt="Mou_icon"><br>根据 DataSourceAspect.java 打印出来的结果实现了读写分离。</p>]]></content>
      
      
      <categories>
          
          <category> Spring教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Mysql </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法</title>
      <link href="/2017/08/03/Markdown/"/>
      <url>/2017/08/03/Markdown/</url>
      
        <content type="html"><![CDATA[<p><img src="http://codeimages.lutao1726.top/markdown.png" alt="Mou icon"></p><span id="more"></span><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="宗旨"><a href="#宗旨" class="headerlink" title="宗旨"></a>宗旨</h2><blockquote><p>Markdown 的目标是实现「易读易写」。<br>可读性，无论如何，都是最重要的。一份使用 Markdown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。Markdown 语法受到一些既有 text-to-HTML 格式的影响，<br>包括 <a href="http://docutils.sourceforge.net/mirror/setext.html">Setext</a>、<a href="http://www.aaronsw.com/2002/atx/">atx</a>、<a href="http://www.booked.net/textism.html">Textile</a>、<a href="http://docutils.sourceforge.net/rst.html">reStructuredText</a>、<a href="http://triptico.com/software/grutatxt.html">Grutatext</a> 和 <a href="http://ettext.taint.org/doc/">EtText</a>，而最大灵感来源其实是纯文本电子邮件的格式。</p></blockquote><p>总之，Markdown的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像<code>*</code>强调<code>*</code>。Markdown的列表看起来，嗯，就是列表。Markdown的区块引用看起来就真的像是引用一段文字，就像你曾在电子邮件中见过的那样。</p><h2 id="兼容HTML"><a href="#兼容HTML" class="headerlink" title="兼容HTML"></a>兼容HTML</h2><p>Markdown语法的目标是：成为一种适用于网络的<span style="border-bottom:2px dashed red;">书写</span>语言。</p><p>Markdown不是想要取代HTML，甚至也没有要和它相近，它的语法种类很少，只对应HTML标记的一小部分。Markdown的构想不是要使得HTML文档更容易书写。在我看来,HTML已经很容易写了。Markdown的理念是，能让文档更容易读、写和随意改。HTML 是一种发布的格式，Markdown 是一种书写的格式。就这样，Markdown 的格式语法只涵盖纯文本可以涵盖的范围。<br>不在Markdown涵盖范围之内的标签，都可以直接在文档里面用HTML撰写。不需要额外标注这是HTML或是 Markdown；只要直接加标签就可以了。</p><p>要制约的只有一些 HTML 区块元素――比如 <code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code>、<code>&lt;p&gt;</code> 等标签，必须在前后加上空行与其它内容区隔开，还要求它们的开始标签与结尾标签不能用制表符或空格来缩进。Markdown 的生成器有足够智能，不会在 HTML 区块标签外加上不必要的 <code>&lt;p&gt;</code>标签。<br>例子如下，在 Markdown 文件里加上一段 HTML 表格：</p><blockquote><p>这是一个普通段落。<br><code>&lt;table&gt;</code><br>    <code>&lt;tr&gt;</code><br>        <code>&lt;td&gt;Foo&lt;/td&gt;</code><br>    <code>&lt;/tr&gt;</code><br><code>&lt;/table&gt;</code><br>这是另一个普通段落。</p></blockquote><p>请注意，在 HTML 区块标签间的 Markdown 格式语法将不会被处理。比如，你在 HTML 区块内使用 Markdown 样式的<code>*强调*</code>会没有效果。</p><p>HTML 的区段（行内）标签如 <code>&lt;span&gt;</code>、<code>&lt;cite&gt;</code>、<code>&lt;del&gt;</code> 可以在 Markdown 的段落、列表或是标题里随意使用。依照个人习惯，甚至可以不用 Markdown 格式，而直接采用 HTML 标签来格式化。举例说明：如果比较喜欢 HTML 的 <code>&lt;a&gt;</code> 或 <code>&lt;img&gt;</code> 标签，可以直接使用这些标签，而不用 Markdown 提供的链接或是图像标签语法。</p><p>和处在 HTML 区块标签间不同，Markdown 语法在 HTML 区段标签间是有效的</p><h2 id="特殊字符自动转换"><a href="#特殊字符自动转换" class="headerlink" title="特殊字符自动转换"></a>特殊字符自动转换</h2><p>在 HTML 文件中，有两个字符需要特殊处理： <code>&lt;</code> 和 <code>&amp;</code> 。 <code>&lt;</code> 符号用于起始标签，<code>&amp; </code>符号则用于标记 HTML 实体，如果你只是想要显示这些字符的原型，你必须要使用实体的形式，像是 <code>&amp;lt;</code> 和 <code>&amp;amp;</code>。</p><p><code>&amp;</code> 字符尤其让网络文档编写者受折磨，如果你要打<code>「AT&amp;T」</code> ，你必须要写成<code>「AT&amp;amp;T」</code>。而网址中的 <code>&amp; </code>字符也要转换。比如你要链接到：</p><blockquote><p><a href="http://images.google.com/images?num=30&q=larry+bird">http://images.google.com/images?num=30&amp;q=larry+bird</a></p></blockquote><p>你必须要把网址转换写为：</p><blockquote><p><a href="http://images.google.com/images?num=30%60&%60amp;q=larry+bird">http://images.google.com/images?num=30`&amp;`amp;q=larry+bird</a></p></blockquote><p>才能放到链接标签的 href 属性里。不用说也知道这很容易忽略，这也可能是 HTML 标准检验所检查到的错误中，数量最多的。</p><p>Markdown 让你可以自然地书写字符，需要转换的由它来处理好了。如果你使用的 &amp; 字符是 HTML 字符实体的一部分，它会保留原状，否则它会被转换成 <code>&amp;amp;</code>。</p><p>所以你如果要在文档中插入一个版权符号 ©，你可以这样写：</p><blockquote><p>$copy</p></blockquote><p>Markdown 会保留它不动。而若你写：</p><blockquote><p>AT&amp;T</p></blockquote><p>Markdown 就会将它转为：</p><blockquote><p>AT<code>&amp;amp;</code>T</p></blockquote><p>类似的状况也会发生在 <code>&lt; </code>符号上，因为 Markdown 允许 兼容 HTML ，如果你是把<code>&lt;</code>符号作为 HTML 标签的定界符使用，那 Markdown 也不会对它做任何转换，但是如果你写：</p><blockquote><p>4 &lt; 5</p></blockquote><p>Markdown 将会把它转换为：</p><blockquote><p>4 <code>&amp;lt;</code> 5</p></blockquote><p>不过需要注意的是，code 范围内，不论是行内还是区块， <code>&lt; </code>和<code> &amp;</code> 两个符号都一定会被转换成 HTML 实体，这项特性让你可以很容易地用 Markdown 写 HTML code （和 HTML 相对而言， HTML 语法中，你要把所有的 <code>&lt;</code> 和 <code>&amp; </code>都转换为 HTML 实体，才能在 HTML 文件里面写出 HTML code。）</p><h1 id="区块元素"><a href="#区块元素" class="headerlink" title="区块元素"></a>区块元素</h1><h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><p>一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。</p><p>「由一个或多个连续的文本行组成」这句话其实暗示了 Markdown 允许段落内的强迫换行（插入换行符），这个特性和其他大部分的 text-to-HTML 格式不一样（包括 Movable Type 的「Convert Line Breaks」选项），其它的格式会把每个换行符都转成<code>&lt;br /&gt;</code>标签。</p><p>如果你确实想要依赖 Markdown 来插入<code>&lt;br /&gt;</code>标签的话，在插入处先按入两个以上的空格然后回车。</p><p>的确，需要多费点事（多加空格）来产生<code> &lt;br /&gt;</code> ，但是简单地「每个换行都转换为 <code>&lt;br /&gt;</code>」的方法在 Markdown 中并不适合， Markdown 中 email 式的 区块引用 和多段落的 列表 在使用换行来排版的时候，不但更好用，还更方便阅读。</p><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>Markdown 支持两种标题的语法，类 Setext 和类 atx 形式。</p><p>类 Setext 形式是用底线的形式，利用 <code>=</code> （最高阶标题）和 <code>- </code>（第二阶标题），例如：</p><blockquote><p>  This is an H1<br/>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br/>This is an H2<br/>————-</p></blockquote><p>任何数量的<code>=</code>和 <code>- </code>都可以有效果。</p><p>类 Atx 形式则是在行首插入 1 到 6 个 <code># </code>，对应到标题 1 到 6 阶，例如：</p><blockquote><p>#这是 H1<br/>## 这是 H2<br/>###### 这是 H6</p></blockquote><p>你可以选择性地「闭合」类 atx 样式的标题，这纯粹只是美观用的，若是觉得这样看起来比较舒适，你就可以在行尾加上<code> #</code>，而行尾的 <code># </code>数量也不用和开头一样（行首的井字符数量决定标题的阶数）：</p><blockquote><p>#这是 H1 # <br/>## 这是 H2 ## <br/>### 这是 H3 #####</p></blockquote><h2 id="区块引用"><a href="#区块引用" class="headerlink" title="区块引用"></a>区块引用</h2><p>Markdown 标记区块引用是使用类似 email 中用 <code>&gt; </code>的引用方式。如果你还熟悉在 email 信件中的引言部分，你就知道怎么在 Markdown 文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上<code> &gt;</code> ：</p><blockquote><p><code>&gt;</code>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br><code>&gt;</code>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br><code>&gt;</code>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.<br><code>&gt;</code>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br><code>&gt;</code>id sem consectetuer libero luctus adipiscing.</p></blockquote><p>Markdown 也允许你偷懒只在整个段落的第一行最前面加上 <code>&gt; </code>：</p><blockquote><p><code>&gt;</code>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p></blockquote><blockquote><p><code>&gt;</code>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br>id sem consectetuer libero luctus adipiscing.</p></blockquote><p>区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 <code>&gt;</code> ：</p><blockquote><p><code>&gt;</code> This is the first level of quoting.<br><code>&gt;</code><br><code>&gt;</code> <code>&gt; </code>This is nested blockquote.<br><code>&gt;</code><br><code>&gt; </code>Back to the first level.</p></blockquote><blockquote></blockquote><p>引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：</p><blockquote><p><code>&gt;</code> ##这是一个标题。<br><code>&gt;</code><br><code>&gt;</code> 1.   这是第一行列表项。<br><code>&gt;</code> 2.   这是第二行列表项。<br><code>&gt;</code><br><code>&gt; </code>给出一些例子代码：<br><code>&gt;</code><br><code>&gt; </code>    return shell_exec(“echo $input | $markdown_script”);</p></blockquote><p>任何像样的文本编辑器都能轻松地建立 email 型的引用。例如在 BBEdit 中，你可以选取文字后然后从选单中选择增加引用阶层。</p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>Markdown 支持有序列表和无序列表。</p><p>无序列表使用星号、加号或是减号作为列表标记：</p><blockquote><p><code>*</code>   Red<br> <code>* </code>  Green<br> <code>*</code>   Blue</p></blockquote><p>等同于：</p><blockquote><p><code>+</code>   Red<br> <code>+</code>   Green<br> <code>+</code>   Blue</p></blockquote><p>也等同于：</p><blockquote><p><code>- </code>  Red<br> <code>-</code>   Green<br> <code>-</code>   Blue</p></blockquote><p>有序列表则使用数字接着一个英文句点：</p><blockquote><p><code>1.</code>  Bird<br> <code>2.</code>  McHale<br> <code>3.</code>  Parish</p></blockquote><p>很重要的一点是，你在列表标记上使用的数字并不会影响输出的 HTML 结果，上面的列表所产生的 HTML 标记为：</p><blockquote><p><code>&lt;ol&gt;</code><br> <code>&lt;li&gt;Bird&lt;/li&gt;</code><br> <code>&lt;li&gt;McHale&lt;/li&gt;</code><br> <code>&lt;li&gt;Parish&lt;/li&gt;</code><br> <code>&lt;/ol&gt;</code></p></blockquote><p>但是这个：</p><blockquote><p><code>*</code> Bird<br> <code> *</code>   Magic</p></blockquote><p>会被转换为：</p><blockquote><p><code>&lt;ul&gt;</code><br>  <code>&lt;li&gt;&lt;p&gt;Bird&lt;/p&gt;&lt;/li&gt;</code><br>  <code>&lt;li&gt;&lt;p&gt;Magic&lt;/p&gt;&lt;/li&gt;</code><br>  <code>&lt;/ul&gt;</code></p></blockquote><p>列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符：</p><blockquote><p><code>1.</code>  This is a list item with two paragraphs. Lorem ipsum dolor<br>     sit amet, consectetuer adipiscing elit. Aliquam hendrerit<br>     mi posuere lectus.<br>     Vestibulum enim wisi, viverra nec, fringilla in, laoreet<br>     vitae, risus. Donec sit amet nisl. Aliquam semper ipsum<br>     sit amet velit.<br><code> 2.</code>  Suspendisse id sem consectetuer libero luctus adipiscing.</p></blockquote><p>如果你每行都有缩进，看起来会看好很多，当然，再次地，如果你很懒惰，Markdown 也允许：</p><blockquote><p><code>*</code>   This is a list item with two paragraphs.<br><code> </code><br>     This is the second paragraph in the list item. You’re<br> only required to indent the first line. Lorem ipsum dolor<br> sit amet, consectetuer adipiscing elit.<br> <code> </code><br> <code>*</code>   Another item in the same list.</p></blockquote><p> 如果要在列表项目内放进引用，那 <code>&gt; </code>就需要缩进：</p><blockquote><p><code>*</code>   A list item with a blockquote:<br> &#96;&#96;<br>      <code>&gt;</code> This is a blockquote<br>      <code>&gt;</code> inside a list item.</p></blockquote><p>如果要放代码区块的话，该区块就需要缩进两次，也就是 8 个空格或是 2 个制表符：</p><blockquote><p><code>*</code>   一列表项包含一个列表区块：<br> &#96;&#96;<br>         &lt;代码写在这&gt;</p></blockquote><p>当然，项目列表很可能会不小心产生，像是下面这样的写法：</p><blockquote><p><code>1986.</code> What a great season.</p></blockquote><p>换句话说，也就是在行首出现数字-句点-空白，要避免这样的状况，你可以在句点前面加上反斜杠。</p><blockquote><p><code>1986\.</code> What a great season.</p></blockquote><h2 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h2><p>和程序相关的写作或是标签语言原始码通常会有已经排版好的代码区块，通常这些区块我们并不希望它以一般段落文件的方式去排版，而是照原来的样子显示，Markdown 会用 <code>&lt;pre&gt;</code> 和 <code>&lt;code&gt;</code> 标签来把代码区块包起来。<br>要在 Markdown 中建立代码区块很简单，只要简单地缩进 4 个空格或是 1 个制表符就可以，例如，下面的输入：</p><blockquote><p>这是一个普通段落：<br>&#96;&#96;<br>     这是一个代码区块。</p></blockquote><p>Markdown 会转换成：</p><blockquote><p><code>&lt;p&gt;</code>这是一个普通段落：<code>&lt;/p&gt;</code><br> <code>&lt;pre&gt;&lt;code&gt;</code>这是一个代码区块。<br> <code>&lt;/code&gt;&lt;/pre&gt;</code></p></blockquote><p>这个每行一阶的缩进（4 个空格或是 1 个制表符），都会被移除，例如：</p><blockquote><p>Here is an example of AppleScript: <br/><br>    tell application “Foo”<br>        beep<br>    end tell</p></blockquote><p>会被转换为：</p><blockquote><p><code>&lt;p&gt;</code>Here is an example of AppleScript:<code>&lt;/p&gt;</code><br> <code>&lt;pre&gt;&lt;code&gt;</code>tell application “Foo”<br>     beep<br> end tell<br> <code>&lt;/code&gt;&lt;/pre&gt;</code><br>一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。</p></blockquote><p>在代码区块里面，<code> &amp;</code> 、 <code>&lt; </code>和 <code>&gt; </code>会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码，只需要复制贴上，再加上缩进就可以了，剩下的 Markdown 都会帮你处理，例如：</p><blockquote><p><code>&lt;div class=&quot;footer&quot;&gt;</code><br>         <code>&amp;copy; 2004 Foo Corporation</code><br>     <code>&lt;/div&gt;</code></p></blockquote><p>会被转换为：</p><blockquote><p><code>&lt;pre&gt;&lt;code&gt;&amp;lt;</code>div class&#x3D;”footer”<code>&amp;gt</code>;<br>     <code>&amp;amp;</code>copy; 2004 Foo Corporation<br> <code>&amp;lt;</code>&#x2F;div&gt;<br> <code>&lt;/code&gt;&lt;/pre&gt;</code></p></blockquote><p>代码区块中，一般的 Markdown 语法不会被转换，像是星号便只是星号，这表示你可以很容易地以 Markdown 语法撰写 Markdown 语法相关的文件。</p><h2 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h2><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><blockquote><p><code>* * *</code><br/><br> <code>***</code><br/><br> <code>*****</code><br/><br> <code>- - -</code><br/><br><code>---------------------------------------</code></p></blockquote><hr><h1 id="区段元素"><a href="#区段元素" class="headerlink" title="区段元素"></a>区段元素</h1><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>Markdown 支持两种形式的链接语法： 行内式和参考式两种形式。</p><p>不管是哪一种，链接文字都是用 [方括号] 来标记。</p><p>要建立一个行内式的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如：</p><blockquote><p><code>This is [an example](http://example.com/ &quot;Title&quot;) inline link.</code></p></blockquote><p> <code>[This link](http://example.net/) has no title attribute.</code></p><p>会产生：</p><blockquote><p><code>&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt;</code><br> an example</a> inline link.</p></p></blockquote><p> <code>&lt;p&gt;&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has no</code><br> <code>title attribute.&lt;/p&gt;</code></p><p>如果你是要链接到同样主机的资源，你可以使用相对路径：</p><blockquote><p>See my <code>[About](/about/)</code> page for details.</p></blockquote><p>参考式的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：</p><blockquote><p>This is <code>[an example][id]</code> reference-style link.</p></blockquote><p>你也可以选择性地在两个方括号中间加上一个空格：</p><blockquote><p>This is <code>[an example] [id]</code> reference-style link.</p></blockquote><p>接着，在文件的任意处，你可以把这个标记的链接内容定义出来：</p><blockquote><p><code>[id]</code>: <a href="http://example.com/">http://example.com/</a>  “Optional Title Here”</p></blockquote><p>链接内容定义的形式为：</p><ul><li>方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字</li><li>接着一个冒号</li><li>接着一个以上的空格或制表符</li><li>接着链接的网址</li><li>选择性地接着 title 内容，可以用单引号、双引号或是括弧包着</li></ul><p>下面这三种链接的定义都是相同：</p><blockquote><p><code>[foo]</code>: <a href="http://example.com/">http://example.com/</a>  “Optional Title Here”<br><code>[foo]</code>: <a href="http://example.com/">http://example.com/</a>  ‘Optional Title Here’<br><code>[foo]</code>: <a href="http://example.com/">http://example.com/</a>  (Optional Title Here)</p></blockquote><p>_请注意_：有一个已知的问题是 Markdown.pl 1.0.1 会忽略单引号包起来的链接 title。</p><p>链接网址也可以用尖括号包起来：</p><blockquote><p><code>[id]</code>: <a href="http://example.com/">http://example.com/</a>  “Optional Title Here”</p></blockquote><p>你也可以把 title 属性放到下一行，也可以加一些缩进，若网址太长的话，这样会比较好看：</p><blockquote><p><code>[id]</code>: <a href="http://example.com/longish/path/to/resource/here">http://example.com/longish/path/to/resource/here</a><br>    “Optional Title Here”</p></blockquote><p>网址定义只有在产生链接的时候用到，并不会直接出现在文件之中。</p><p>链接辨别标签可以有字母、数字、空白和标点符号，但是并不区分大小写，因此下面两个链接是一样的：</p><blockquote><p><code>[link text][a]</code><br><code>[link text][A]</code></p></blockquote><p>隐式链接标记功能让你可以省略指定链接标记，这种情形下，链接标记会视为等同于链接文字，要用隐式链接标记只要在链接文字后面加上一个空的方括号，如果你要让 “Google” 链接到 google.com，你可以简化成：</p><blockquote><p><code>[Google][]</code></p></blockquote><p>然后定义链接内容：</p><blockquote><p><code>[Google]</code>: <a href="http://google.com/">http://google.com/</a></p></blockquote><p>由于链接文字可能包含空白，所以这种简化型的标记内也许包含多个单词：</p><blockquote><p>Visit <code>[Daring Fireball][]</code> for more information.</p></blockquote><p>然后接着定义链接：</p><blockquote><p><code>[Daring Fireball]</code>: <a href="http://daringfireball.net/">http://daringfireball.net/</a></p></blockquote><p>链接的定义可以放在文件中的任何一个地方，我比较偏好直接放在链接出现段落的后面，你也可以把它放在文件最后面，就像是注解一样。</p><p>下面是一个参考式链接的范例：</p><blockquote><p>I get 10 times more traffic from <code>[Google] [1]</code> than from<br><code>[Yahoo] [2]</code> or <code>[MSN] [3]</code>.</p></blockquote><p>  <code>[1]</code>: <a href="http://google.com/">http://google.com/</a>        “Google”<br>  <code>[2]</code>: <a href="http://search.yahoo.com/">http://search.yahoo.com/</a>  “Yahoo Search”<br>  <code>[3]</code>: <a href="http://search.msn.com/">http://search.msn.com/</a>    “MSN Search”</p><p>如果改成用链接名称的方式写：</p><blockquote><p>I get 10 times more traffic from <code>[Google][]</code> than from<br><code>[Yahoo][]</code> or <code>[MSN][]</code>.</p></blockquote><p>  <code>[google]</code>: <a href="http://google.com/">http://google.com/</a>        “Google”<br>  <code>[yahoo]</code>:  <a href="http://search.yahoo.com/">http://search.yahoo.com/</a>  “Yahoo Search”<br>  <code>[msn]</code>:    <a href="http://search.msn.com/">http://search.msn.com/</a>    “MSN Search”</p><p>上面两种写法都会产生下面的 HTML。</p><blockquote><p><code>&lt;p&gt;</code>I get 10 times more traffic from <a href="http://google.com/"title="Google">Google<code>&lt;/a&gt;</code> than from<br><code>&lt;a href=&quot;http://search.yahoo.com/&quot; title=&quot;Yahoo Search&quot;&gt;Yahoo&lt;/a&gt;</code><br>or <code>&lt;a href=&quot;http://search.msn.com/&quot; title=&quot;MSN Search&quot;&gt;MSN&lt;/a&gt;</code>.<code>&lt;/p&gt;</code></p></blockquote><p>下面是用行内式写的同样一段内容的 Markdown 文件，提供作为比较之用：</p><blockquote><p>I get 10 times more traffic from <code>[Google](http://google.com/ &quot;Google&quot;)</code><br>than from <code>[Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;)</code> or<br><code>[MSN](http://search.msn.com/ &quot;MSN Search&quot;)</code>.</p></blockquote><p>参考式的链接其实重点不在于它比较好写，而是它比较好读，比较一下上面的范例，使用参考式的文章本身只有 81 个字符，但是用行内形式的却会增加到 176 个字元，如果是用纯 HTML 格式来写，会有 234 个字元，在 HTML 格式中，标签比文本还要多。</p><p>使用 Markdown 的参考式链接，可以让文件更像是浏览器最后产生的结果，让你可以把一些标记相关的元数据移到段落文字之外，你就可以增加链接而不让文章的阅读感觉被打断。</p><h2 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h2><p>Markdown 使用星号（<code>*</code>）和底线（<code>_</code>）作为标记强调字词的符号，被<code> *</code> 或 <code>_ </code>包围的字词会被转成用 <code>&lt;em&gt;</code> 标签包围，用两个 <code>* </code>或 <code>_ </code>包起来的话，则会被转成 <code>&lt;strong&gt;</code>，例如：</p><blockquote><p><code>*single asterisks*</code></p></blockquote><blockquote><p><code>_single underscores_</code></p></blockquote><blockquote><p><code>**double asterisks**</code></p></blockquote><blockquote><p><code>__double underscores__</code></p></blockquote><p>会转成：</p><blockquote><p><code>&lt;em&gt;single asterisks&lt;/em&gt;</code></p></blockquote><blockquote><p><code>&lt;em&gt;single underscores&lt;/em&gt;</code></p></blockquote><blockquote><p><code>&lt;strong&gt;double asterisks&lt;/strong&gt;</code></p></blockquote><blockquote><p><code>&lt;strong&gt;double underscores&lt;/strong&gt;</code></p></blockquote><p>你可以随便用你喜欢的样式，唯一的限制是，你用什么符号开启标签，就要用什么符号结束。</p><p>强调也可以直接插在文字中间：</p><blockquote><p>un<code>*frigging*</code>believable</p></blockquote><p>但是如果你的 <code>* </code>和 <code>_ </code>两边都有空白的话，它们就只会被当成普通的符号。</p><p>如果要在文字前后直接插入普通的星号或底线，你可以用反斜线：</p><blockquote><p><code>\*this text is surrounded by literal asterisks\*</code></p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>如果要标记一小段行内代码，你可以用反引号把它包起来（&#96;），例如：</p><blockquote><p>Use the ‘printf()’ function.</p></blockquote><p>会产生：</p><blockquote><p><code>&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;</code></p></blockquote><p>如果要在代码区段内插入反引号，你可以用多个反引号来开启和结束代码区段：</p><blockquote><p>‘’There is a literal backtick (&#96;) here.’’</p></blockquote><p>这段语法会产生：</p><blockquote><p><code>&lt;p&gt;&lt;code&gt;There is a literal backtick (</code>) here.</code></p>&#96;</p></blockquote><p>代码区段的起始和结束端都可以放入一个空白，起始端后面一个，结束端前面一个，这样你就可以在区段的一开始就插入反引号：</p><blockquote><p>‘A single backtick in a code span: <code>`</code>‘</p></blockquote><blockquote><p>‘A backtick-delimited string in a code span: <code>`foo`</code>‘</p></blockquote><p>会产生：</p><blockquote><p><code>&lt;p&gt;A single backtick in a code span: &lt;code&gt;</code></code></p>&#96;</p></blockquote><blockquote><p><code>&lt;p&gt;A backtick-delimited string in a code span: &lt;code&gt;</code>foo<code>&lt;/code&gt;&lt;/p&gt;</code></p></blockquote><p>在代码区段内，&amp; 和尖括号都会被自动地转成 HTML 实体，这使得插入 HTML 原始码变得很容易，Markdown 会把下面这段：</p><blockquote><p>Please don’t use any <code>&lt;blink&gt;</code> tags.</p></blockquote><p>转为：</p><blockquote><p>Please don't use any <code>&lt;blink&gt;</code> tags.</p></blockquote><p>你也可以这样写：</p><blockquote><p><code>&amp;#8212;</code> is the decimal-encoded equivalent of <code>&amp;mdash;</code>.</p></blockquote><p>以产生：</p><blockquote><p><code>&amp;#8212;</code> is the decimal-encodedequivalent of <code>&amp;mdash;</code>.</p></blockquote><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>很明显地，要在纯文字应用中设计一个「自然」的语法来插入图片是有一定难度的。</p><p>Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： 行内式和参考式。</p><p>行内式的图片语法看起来像是：</p><blockquote><p><code>![Alt text](/path/to/img.jpg)</code></p></blockquote><blockquote><p><code>![Alt text](/path/to/img.jpg &quot;Optional title&quot;)</code></p></blockquote><p>详细叙述如下：</p><p>一个惊叹号 <code>!</code></p><ul><li>接着一个方括号，里面放上图片的替代文字</li><li>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 ‘title’ 文字。</li><li>参考式的图片语法则长得像这样：</li></ul><blockquote><p><code>![Alt text][id]</code></p></blockquote><p>「id」是图片参考的名称，图片参考的定义方式则和连结参考一样：</p><blockquote><p><code>[id]</code>: url&#x2F;to&#x2F;image  “Optional title attribute”</p></blockquote><p>到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 <code>&lt;img&gt;</code> 标签。</p><h1 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h1><h2 id="反斜杠"><a href="#反斜杠" class="headerlink" title="反斜杠"></a>反斜杠</h2><p>Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调效果（但不用 <code>&lt;em&gt;</code> 标签），你可以在星号的前面加上反斜杠：</p><blockquote><p><code>\*literal asterisks\*</code></p></blockquote><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><blockquote><p>\   反斜线<br><code>  反引号</code>*<code>  星号 _   底线 &#123;&#125;  花括号 []  方括号 ()  括弧</code>#<code>  井字号</code>+<code>  加号</code>-&#96;   减号<br>.   英文句点<br>!   惊叹号</p></blockquote><h2 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h2><p>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用尖括号包起来， Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，例如：</p><blockquote><p><a href="http://example.com/">http://example.com/</a></p></blockquote><p>Markdown 会转为：</p><blockquote><p><a href="http://example.com/">http://example.com/</a></p></blockquote><p>邮址的自动链接也很类似，只是 Markdown 会先做一个编码转换的过程，把文字字符转成 16 进位码的 HTML 实体，这样的格式可以糊弄一些不好的邮址收集机器人，例如：</p><blockquote><p><a href="mailto:&#x61;&#x64;&#x64;&#114;&#x65;&#115;&#115;&#x40;&#101;&#x78;&#97;&#x6d;&#x70;&#x6c;&#x65;&#x2e;&#x63;&#111;&#x6d;">&#x61;&#x64;&#x64;&#114;&#x65;&#115;&#115;&#x40;&#101;&#x78;&#97;&#x6d;&#x70;&#x6c;&#x65;&#x2e;&#x63;&#111;&#x6d;</a></p></blockquote><p>Markdown 会转成：</p><blockquote><p><code>&lt;a href=&quot;&amp;#x6D;&amp;#x61;i&amp;#x6C;&amp;#x74;&amp;#x6F;:&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&quot;&gt;&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;</code></p></blockquote><p>在浏览器里面，这段字串（其实是<code>&lt;a href=&quot;mailto:address@example.com&quot;&gt;address@example.com&lt;/a&gt;</code>）会变成一个可以点击的<code>「address@example.com」</code>链接。</p><p>（这种作法虽然可以糊弄不少的机器人，但并不能全部挡下来，不过总比什么都不做好些。不管怎样，公开你的信箱终究会引来广告信件的。）</p>]]></content>
      
      
      <categories>
          
          <category> hexo教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中文技术文档的写作规范</title>
      <link href="/2017/08/03/%E4%B8%AD%E6%96%87%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3%E7%9A%84%E5%86%99%E4%BD%9C%E8%A7%84%E8%8C%83/"/>
      <url>/2017/08/03/%E4%B8%AD%E6%96%87%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3%E7%9A%84%E5%86%99%E4%BD%9C%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<p><img src="http://codeimages.lutao1726.top/markdown.png" alt="Mou icon"></p><span id="more"></span><p>本文转载自 <a href="https://github.com/ruanyf/document-style-guide">ruanyf&#x2F;document-style-guide</a></p><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><blockquote><h6 id="1-标题"><a href="#1-标题" class="headerlink" title="1. 标题"></a><strong>1. <a href="#%E6%A0%87%E9%A2%98">标题</a></strong></h6><h6 id="2-文本"><a href="#2-文本" class="headerlink" title="2. 文本"></a><strong>2. <a href="#%E6%96%87%E6%9C%AC">文本</a></strong></h6><h6 id="3-段落"><a href="#3-段落" class="headerlink" title="3. 段落"></a><strong>3. <a href="#%E6%AE%B5%E8%90%BD">段落</a></strong></h6><h6 id="4-数值"><a href="#4-数值" class="headerlink" title="4. 数值"></a><strong>4. <a href="#%E6%95%B0%E5%80%BC">数值</a></strong></h6><h6 id="5-标点符号"><a href="#5-标点符号" class="headerlink" title="5. 标点符号"></a><strong>5. <a href="#%E6%A0%87%E7%82%B9%E7%AC%A6%E5%8F%B7">标点符号</a></strong></h6><h6 id="6-文档体系"><a href="#6-文档体系" class="headerlink" title="6. 文档体系"></a><strong>6. <a href="#%E6%96%87%E6%A1%A3%E4%BD%93%E7%B3%BB">文档体系</a></strong></h6><h6 id="7-参考链接"><a href="#7-参考链接" class="headerlink" title="7. 参考链接"></a><strong>7. <a href="#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5">参考链接</a></strong></h6></blockquote><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><h4 id="层级"><a href="#层级" class="headerlink" title="层级"></a>层级</h4><p>标题分为四级。</p><ul><li>一级标题：文章的标题</li><li>二级标题：文章主要部分的大标题</li><li>三级标题：二级标题下面一级的小标题</li><li>四级标题：三级标题下面某一方面的小标题</li></ul><p>下面是示例。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"></span><br><span class="line"><span class="section">#### 四级标题</span></span><br></pre></td></tr></table></figure><h4 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h4><p>（1）一级标题下，不能直接出现三级标题。</p><p>示例：下面的文章结构，缺少二级标题。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"></span><br><span class="line"><span class="section">### 三级标题</span></span><br></pre></td></tr></table></figure><p>（2）标题要避免孤立编号（即同级标题只有一个）。</p><p>示例：下面的文章结构，<code>二级标题 A</code>只包含一个三级标题，完全可以省略<code>三级标题 A</code>。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">## 二级标题 A</span></span><br><span class="line"></span><br><span class="line"><span class="section">### 三级标题 A</span></span><br><span class="line"></span><br><span class="line"><span class="section">## 二级标题 B</span></span><br></pre></td></tr></table></figure><p>（3）下级标题不重复上一级标题的名字。</p><p>示例：下面的文章结构，二级标题与下属的三级标题同名，建议避免。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">## 概述</span></span><br><span class="line"></span><br><span class="line"><span class="section">### 概述</span></span><br></pre></td></tr></table></figure><p>（4）谨慎使用四级标题，尽量避免出现，保持层级的简单，防止出现过于复杂的章节。</p><p>如果三级标题下有并列性的内容，建议只使用项目列表（Item list）。</p><p>示例：下面的结构二要好于结构一。结构一适用的场景，主要是较长篇幅的内容。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">结构一</span><br><span class="line"></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"></span><br><span class="line"><span class="section">#### 四级标题 A</span></span><br><span class="line"></span><br><span class="line"><span class="section">#### 四级标题 B</span></span><br><span class="line"></span><br><span class="line"><span class="section">#### 四级标题 C</span></span><br><span class="line"></span><br><span class="line">结构二</span><br><span class="line"></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"></span><br><span class="line"><span class="strong">**（1）A**</span></span><br><span class="line"></span><br><span class="line"><span class="strong">**（2）B**</span></span><br><span class="line"></span><br><span class="line"><span class="strong">**（3）C**</span></span><br></pre></td></tr></table></figure><h2 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h2><h4 id="字间距"><a href="#字间距" class="headerlink" title="字间距"></a>字间距</h4><p>（1）全角中文字符与半角英文字符之间，应有一个半角空格。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">错误：本文介绍如何快速启动Windows系统。</span><br><span class="line"></span><br><span class="line">正确：本文介绍如何快速启动 Windows 系统。</span><br></pre></td></tr></table></figure><p>（2）全角中文字符与半角阿拉伯数字之间，有没有半角空格都可，但必须保证风格统一，不能两种风格混杂。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">正确：2011年5月15日，我订购了5台笔记本电脑与10台平板电脑。</span><br><span class="line"></span><br><span class="line">正确：2011 年 5 月 15 日，我订购了 5 台笔记本电脑与 10 台平板电脑。</span><br></pre></td></tr></table></figure><p>半角的百分号，视同阿拉伯数字。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">正确：今年我国经济增长率是6.5%。</span><br><span class="line"></span><br><span class="line">正确：今年我国经济增长率是 6.5%。</span><br></pre></td></tr></table></figure><p>（3）英文单位若不翻译，单位前的阿拉伯数字与单位间不留空格。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">错误：一部容量为 16 GB 的智能手机</span><br><span class="line"></span><br><span class="line">正确：一部容量为 16GB 的智能手机</span><br></pre></td></tr></table></figure><p>（4）半角英文字符和半角阿拉伯数字，与全角标点符号之间不留空格。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">错误：他的电脑是 MacBook Air 。</span><br><span class="line"></span><br><span class="line">正确：他的电脑是 MacBook Air。</span><br></pre></td></tr></table></figure><h4 id="句子"><a href="#句子" class="headerlink" title="句子"></a>句子</h4><p>（1）避免使用长句。</p><p>不包含任何标点符号的单个句子，或者以逗号分隔的句子构件，长度尽量保持在 20 个字以内；20～29 个字的句子，可以接受；30～39 个字的句子，语义必须明确，才能接受；多于 40 个字的句子，任何情况下都不能接受。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">错误：本产品适用于从由一台服务器进行动作控制的单一节点结构到由多台服务器进行动作控制的并行处理程序结构等多种体系结构。</span><br><span class="line"></span><br><span class="line">正确：本产品适用于多种体系结构。无论是由一台服务器（单一节点结构），还是由多台服务器（并行处理结构）进行动作控制，均可以使用本产品。</span><br></pre></td></tr></table></figure><p>逗号分割的长句，总长度不应该超过 100 字或者正文的 3 行。</p><p>（2）尽量使用简单句和并列句，避免使用复合句。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">并列句：他昨天生病了，没有参加会议。</span><br><span class="line"></span><br><span class="line">复合句：那个昨天生病的人没有参加会议。</span><br></pre></td></tr></table></figure><p>（3）同样一个意思，尽量使用肯定句表达，不使用否定句表达。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">错误：请确认没有接通装置的电源。</span><br><span class="line"></span><br><span class="line">正确：请确认装置的电源已关闭。</span><br></pre></td></tr></table></figure><p>（4）避免使用双重否定句。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">错误：没有删除权限的用户，不能删除此文件。</span><br><span class="line"></span><br><span class="line">正确：用户必须拥有删除权限，才能删除此文件。</span><br></pre></td></tr></table></figure><h4 id="写作风格"><a href="#写作风格" class="headerlink" title="写作风格"></a>写作风格</h4><p>（1）尽量不使用被动语态，改为使用主动语态。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">错误：假如此软件尚未被安装，</span><br><span class="line"></span><br><span class="line">正确：假如尚未安装这个软件，</span><br></pre></td></tr></table></figure><p>（2）不使用非正式的语言风格。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">错误：Lady Gaga 的演唱会真是酷毙了，从没看过这么给力的表演！！！</span><br><span class="line"></span><br><span class="line">正确：无法参加本次活动，我深感遗憾。</span><br></pre></td></tr></table></figure><p>（3）不使用冷僻、生造或者文言文的词语，而要使用现代汉语的常用表达方式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">错误：这是唯二的快速启动的方法。</span><br><span class="line"></span><br><span class="line">正确：这是仅有的两种快速启动的方法。</span><br></pre></td></tr></table></figure><p>（4）用对“的”、“地”、“得”。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">她露出了开心的笑容。</span><br><span class="line">（形容词＋的＋名词）</span><br><span class="line"></span><br><span class="line">她开心地笑了。</span><br><span class="line">（副词＋地＋动词）</span><br><span class="line"></span><br><span class="line">她笑得很开心。</span><br><span class="line">（动词＋得＋副词）</span><br></pre></td></tr></table></figure><p>（5）使用代词时（比如“其”、“该”、“此”、“这”等词），必须明确指代的内容，保证只有一个含义。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">错误：从管理系统可以监视中继系统和受其直接控制的分配系统。</span><br><span class="line"></span><br><span class="line">正确：从管理系统可以监视两个系统：中继系统和受中继系统直接控制的分配系统。</span><br></pre></td></tr></table></figure><p>（6）名词前不要使用过多的形容词。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">错误：此设备的使用必须在接受过本公司举办的正式的设备培训的技师的指导下进行。</span><br><span class="line"></span><br><span class="line">正确：此设备必须在技师的指导下使用，且指导技师必须接受过由本公司举办的正式设备培训。</span><br></pre></td></tr></table></figure><h4 id="英文处理"><a href="#英文处理" class="headerlink" title="英文处理"></a>英文处理</h4><p>（1）英文原文如果使用了复数形式，翻译成中文时，应该将其还原为单数形式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">英文：⋯information stored in random access memory (RAMs)⋯</span><br><span class="line"></span><br><span class="line">中文：……存储在随机存取存储器（RAM）里的信息……</span><br></pre></td></tr></table></figure><p>（2）外文缩写可以使用半角圆点(<code>.</code>)表示缩写。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">U.S.A.</span><br><span class="line">Apple, Inc.</span><br></pre></td></tr></table></figure><p>（3）表示中文时，英文省略号（<code>⋯</code>）应改为中文省略号（<code>……</code>）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">英文：5 minutes later⋯</span><br><span class="line"></span><br><span class="line">中文：5 分钟过去了……</span><br></pre></td></tr></table></figure><p>（4）英文书名或电影名改用中文表达时，双引号应改为书名号。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">英文：He published an article entitled &quot;The Future of the Aviation&quot;.</span><br><span class="line"></span><br><span class="line">中文：他发表了一篇名为《航空业的未来》的文章。</span><br></pre></td></tr></table></figure><p>（5）第一次出现英文词汇时，在括号中给出中文标注。此后再次出现时，直接使用英文缩写即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IOC（International Olympic Committee，国际奥林匹克委员会）。这样定义后，便可以直接使用“IOC”了。</span><br></pre></td></tr></table></figure><p>（6）专有名词中每个词第一个字母均应大写，非专有名词则不需要大写。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">“American Association of Physicists in Medicine”（美国医学物理学家协会）是专有名词，需要大写。</span><br><span class="line"></span><br><span class="line">“online transaction processing”（在线事务处理）不是专有名词，不应大写。</span><br></pre></td></tr></table></figure><h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><h4 id="原则-1"><a href="#原则-1" class="headerlink" title="原则"></a>原则</h4><ul><li>一个段落只能有一个主题，或一个中心句子。</li><li>段落的中心句子放在段首，对全段内容进行概述。后面陈述的句子为核心句服务。</li><li>一个段落的长度不能超过七行，最佳段落长度小于等于四行。</li><li>段落的句子语气要使用陈述和肯定语气，避免使用感叹语气。</li><li>段落之间使用一个空行隔开。</li><li>段落开头不要留出空白字符。</li></ul><h4 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h4><p>引用第三方内容时，应注明出处。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">One man’s constant is another man’s variable. — Alan Perlis</span><br></pre></td></tr></table></figure><p>如果是全篇转载，请在全文开头显著位置注明作者和出处，并链接至原文。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">本文转载自 WikiQuote</span><br></pre></td></tr></table></figure><p>使用外部图片时，必须在图片下方或文末标明来源。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">本文部分图片来自 Wikipedia</span><br></pre></td></tr></table></figure><h2 id="数值"><a href="#数值" class="headerlink" title="数值"></a>数值</h2><h4 id="半角数字"><a href="#半角数字" class="headerlink" title="半角数字"></a>半角数字</h4><p>阿拉伯数字一律使用半角形式，不得使用全角形式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">错误： 这件商品的价格是１０００元。</span><br><span class="line"></span><br><span class="line">正确： 这件商品的价格是 1000 元。</span><br></pre></td></tr></table></figure><h4 id="千分号"><a href="#千分号" class="headerlink" title="千分号"></a>千分号</h4><p>数值为千位以上，应添加千分号（半角逗号）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XXX 公司的实收资本为 ￥1,258,000 人民币。</span><br></pre></td></tr></table></figure><p>对于 4 位以下的数值，千分号是选用的，比如<code>1000</code>和<code>1,000</code>都可以接受。对于 4 位以上的数值，千分号是必须的。</p><h4 id="货币"><a href="#货币" class="headerlink" title="货币"></a>货币</h4><p>货币应为阿拉伯数字，并在数字前写出货币符号，或在数字后写出货币中文名称。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$1,000</span><br><span class="line">1,000 美元</span><br></pre></td></tr></table></figure><p>英文的货币名称，建议参考国际标准 <a href="https://en.wikipedia.org/wiki/ISO_4217">ISO 4217</a>。</p><h4 id="数值范围"><a href="#数值范围" class="headerlink" title="数值范围"></a>数值范围</h4><p>表示数值范围时，用<code>～</code>或<code>——</code>连接。参见《标点符号》一节的“连接号”部分。</p><p>带有单位或百分号时，两个数字建议都要加上单位或百分号。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">132kg～234kg</span><br><span class="line"></span><br><span class="line">67%～89%</span><br></pre></td></tr></table></figure><h4 id="变化程度的表示法"><a href="#变化程度的表示法" class="headerlink" title="变化程度的表示法"></a>变化程度的表示法</h4><p>数字的增加要使用“增加了”、“增加到”。“了”表示增量，“到”表示定量。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">增加到过去的两倍</span><br><span class="line">（过去为一，现在为二）</span><br><span class="line"></span><br><span class="line">增加了两倍</span><br><span class="line">（过去为一，现在为三）</span><br></pre></td></tr></table></figure><p>数字的减少要使用“降低了”、“降低到”。“了”表示增量，“到”表示定量。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">降低到百分之八十</span><br><span class="line">（定额是一百，现在是八十）</span><br><span class="line"></span><br><span class="line">降低了百分之八十</span><br><span class="line">（原来是一百，现在是二十）</span><br></pre></td></tr></table></figure><p>不能用“降低 N 倍”或“减少 N 倍”的表示法，要用“降低百分之几”或“减少百分之几”。因为减少（或降低）一倍表示数值原来为一百，现在等于零。</p><h2 id="标点符号"><a href="#标点符号" class="headerlink" title="标点符号"></a>标点符号</h2><h4 id="原则-2"><a href="#原则-2" class="headerlink" title="原则"></a>原则</h4><p>（1）中文语句的标点符号，均应该采取全角符号，这样可以与全角文字保持视觉的一致。</p><p>（2）如果整句为英文，则该句使用英文&#x2F;半角标点。</p><p>（3）句号、问号、叹号、逗号、顿号、分号和冒号不得出现在一行之首。</p><h4 id="句号"><a href="#句号" class="headerlink" title="句号"></a>句号</h4><p>（1）中文语句的结尾处应该用全角句号（<code>。</code>）。</p><p>（2）句子末尾用括号加注时，句号应在括号之外。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">错误：关于文件的输出，请参照第 1.3 节（见第 26 页。）</span><br><span class="line"></span><br><span class="line">正确：关于文件的输出，请参照第 1.3 节（见第 26 页）。</span><br></pre></td></tr></table></figure><h4 id="逗号"><a href="#逗号" class="headerlink" title="逗号"></a>逗号</h4><p>（1）逗号（<code>，</code>）表示句子内部的一般性停顿。</p><p>（2）注意避免“一逗到底”，即整个段落除了结尾，全部停顿都使用逗号。</p><h4 id="顿号"><a href="#顿号" class="headerlink" title="顿号"></a>顿号</h4><p>（1）句子内部的并列词，应该用全角顿号(<code>、</code>) 分隔，而不用逗号，即使并列词是英语也是如此。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">错误：我最欣赏的科技公司有 Google, Facebook, 腾讯, 阿里和百度等。</span><br><span class="line"></span><br><span class="line">正确：我最欣赏的科技公司有 Google、Facebook、腾讯、阿里和百度等。</span><br></pre></td></tr></table></figure><p>（2）英文句子中，并列词语之间使用半角逗号（<code>,</code>）分隔。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例句：Microsoft Office includes Word, Excel, PowerPoint, Outlook and other components.</span><br></pre></td></tr></table></figure><h4 id="分号"><a href="#分号" class="headerlink" title="分号"></a>分号</h4><p>（1）分号（<code>；</code>）表示复句内部并列分句之间的停顿。</p><h4 id="引号"><a href="#引号" class="headerlink" title="引号"></a>引号</h4><p>（1）引用时，应该使用全角双引号（<code>“ ”</code>），注意前后双引号不同。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例句：许多人都认为客户服务的核心是“友好”和“专业”。</span><br></pre></td></tr></table></figure><p>（2）引号里面还要用引号时，外面一层用双引号，里面一层用单引号（<code>‘ ’</code>），注意前后单引号不同。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例句：鲍勃解释道：“我要放音乐，可萨利说，‘不行！’。”</span><br></pre></td></tr></table></figure><h4 id="括号"><a href="#括号" class="headerlink" title="括号"></a>括号</h4><p>（1）补充说明时，使用全角圆括号（<code>（）</code>），括号前后不加空格。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例句：请确认所有的连接（电缆和接插件）均安装牢固。</span><br></pre></td></tr></table></figure><p>（2）几种括号的中英文名称。</p><table><thead><tr><th></th><th align="center">英文</th><th align="right">中文</th></tr></thead><tbody><tr><td><code>&#123; &#125;</code></td><td align="center">braces 或 curly brackets</td><td align="right">大括号</td></tr><tr><td><code>[ ]</code></td><td align="center">square brackets 或 brackets</td><td align="right">方括号</td></tr><tr><td><code>&lt; &gt;</code></td><td align="center">angled brackets</td><td align="right">尖括号</td></tr><tr><td><code>( )</code></td><td align="center">parentheses</td><td align="right">圆括号</td></tr></tbody></table><h4 id="冒号"><a href="#冒号" class="headerlink" title="冒号"></a>冒号</h4><p>（1）全角冒号（<code>：</code>）常用在需要解释的词语后边，引出解释和说明。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例句：请确认以下几项内容：时间、地点、活动名称，以及来宾数量。</span><br></pre></td></tr></table></figure><p>（2）表示时间时，应使用半角冒号（<code>:</code>）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例句：早上 8:00</span><br></pre></td></tr></table></figure><h4 id="省略号"><a href="#省略号" class="headerlink" title="省略号"></a>省略号</h4><p>（1）省略号（<code>……</code>）表示语句未完、或者语气的不连续。</p><p>（2）省略号占两个汉字空间、包含六个省略点，不要使用<code>。。。</code>或<code>...</code>等非标准形式。</p><p>（3）省略号不应与“等”这个词一起使用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">错误：我们为会餐准备了香蕉、苹果、梨…等各色水果。</span><br><span class="line"></span><br><span class="line">正确：我们为会餐准备了各色水果，有香蕉、苹果、梨……</span><br><span class="line"></span><br><span class="line">正确：我们为会餐准备了香蕉、苹果、梨等各色水果。</span><br></pre></td></tr></table></figure><h4 id="感叹号"><a href="#感叹号" class="headerlink" title="感叹号"></a>感叹号</h4><p>（1）应该使用平静的语气叙述，尽量避免使用感叹号（<code>！</code>）。</p><p>（2）不得多个感叹号连用，比如<code>！！</code>和<code>!!!</code>。</p><h4 id="破折号"><a href="#破折号" class="headerlink" title="破折号"></a>破折号</h4><p>（1）破折号<code>————</code>一般用于进一步解释。</p><p>（2）破折号应占两个汉字的位置。如果破折号本身只占一个汉字的位置，那么前后应该留出一个半角空格。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">例句：直觉————尽管它并不总是可靠的————告诉我，这事可能出了些问题。</span><br><span class="line"></span><br><span class="line">例句：直觉 —— 尽管它并不总是可靠的 —— 告诉我，这事可能出了些问题。</span><br></pre></td></tr></table></figure><h4 id="连接号"><a href="#连接号" class="headerlink" title="连接号"></a>连接号</h4><p>（1）连接号用于连接两个类似的词。</p><p>（2）以下场合应该使用直线连接号（<code>-</code>），占一个半角字符的位置。</p><ul><li>两个名词的复合</li><li>图表编号</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">例句：氧化-还原反应</span><br><span class="line"></span><br><span class="line">例句：图 1-1</span><br></pre></td></tr></table></figure><p>（3）数值范围（例如日期、时间或数字）应该使用波浪连接号（<code>～</code>），占一个全角字符的位置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例句：2009 年～2011 年</span><br></pre></td></tr></table></figure><p>注意，波浪连接号前后两个值都应该加上单位。</p><p>（4）波浪连接号也可以用汉字“至”代替。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例句：周围温度：-20°C 至 -10°C</span><br></pre></td></tr></table></figure><h2 id="文档体系"><a href="#文档体系" class="headerlink" title="文档体系"></a>文档体系</h2><h4 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h4><p>软件手册是一部完整的书，建议采用下面的结构。</p><ul><li><strong>简介</strong>（Introduction）： [必备] [文件] 提供对产品和文档本身的总体的、扼要的说明</li><li><strong>快速上手</strong>（Getting Started）：[可选] [文件] 如何最快速地使用产品</li><li><strong>入门篇</strong>（Basics）： [必备] [目录] 又称”使用篇“，提供初级的使用教程<ul><li><strong>环境准备</strong>（Prerequisite）：[必备] [文件] 软件使用需要满足的前置条件</li><li><strong>安装</strong>（Installation）：[可选] [文件] 软件的安装方法</li><li><strong>设置</strong>（Configuration）：[必备] [文件] 软件的设置</li></ul></li><li><strong>进阶篇</strong>（Advanced)：[可选] [目录] 又称”开发篇“，提供中高级的开发教程</li><li><strong>API</strong>（Reference）：[可选] [目录|文件] 软件 API 的逐一介绍</li><li><strong>FAQ</strong>：[可选] [文件] 常见问题解答</li><li><strong>附录</strong>（Appendix）：[可选] [目录] 不属于教程本身、但对阅读教程有帮助的内容<ul><li><strong>Glossary</strong>：[可选] [文件] 名词解释</li><li><strong>Recipes</strong>：[可选] [文件] 最佳实践</li><li><strong>Troubleshooting</strong>：[可选] [文件] 故障处理</li><li><strong>ChangeLog</strong>：[可选] [文件] 版本说明</li><li><strong>Feedback</strong>：[可选] [文件] 反馈方式</li></ul></li></ul><p>下面是两个真实范例，可参考。</p><ul><li><a href="http://redux.js.org/index.html">Redux 手册</a></li><li><a href="http://flight-manual.atom.io/">Atom 手册</a></li></ul><h4 id="文件名"><a href="#文件名" class="headerlink" title="文件名"></a>文件名</h4><p>文档的文件名不得含有空格。</p><p>文件名必须使用半角字符，不得使用全角字符。这也意味着，中文不能用于文件名。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">错误： 名词解释.md</span><br><span class="line"></span><br><span class="line">正确： glossary.md</span><br></pre></td></tr></table></figure><p>文件名建议只使用小写字母，不使用大写字母。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">错误：TroubleShooting.md</span><br><span class="line"></span><br><span class="line">正确：troubleshooting.md </span><br></pre></td></tr></table></figure><p>为了醒目，某些说明文件的文件名，可以使用大写字母，比如<code>README</code>、<code>LICENSE</code>。</p><p>文件名包含多个单词时，单词之间建议使用半角的连词线（<code>-</code>）分隔。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">不佳：advanced_usage.md</span><br><span class="line"></span><br><span class="line">正确：advanced-usage.md</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="http://wenku.baidu.com/view/23cc1a6527d3240c8447efbf.html">产品手册中文写作规范</a>, by 华为</li><li><a href="http://guide.daocloud.io/dcs/%E5%86%99%E4%BD%9C%E8%A7%84%E8%8C%83%E5%92%8C%E6%A0%BC%E5%BC%8F%E8%A7%84%E8%8C%83-9153803.html">写作规范和格式规范</a>, by DaoCloud</li><li><a href="http://www.hitachi-tc.co.jp/company/thesis/thesis.pdf">技术写作技巧在日汉翻译中的应用</a>, by 刘方</li><li><a href="https://www.lengoo.de/documents/styleguides/lengoo_styleguide_ZH.pdf">简体中文规范指南</a>, by lengoo</li><li><a href="https://open.leancloud.cn/copywriting-style-guide.html">文档风格指南</a>, by LeanCloud</li><li><a href="https://docs.google.com/document/d/1R8lMCPf6zCD5KEA8ekZ5knK77iw9J-vJ6vEopPemqZM/edit">豌豆荚文案风格指南</a>, by 豌豆荚</li><li><a href="https://github.com/sparanoid/chinese-copywriting-guidelines">中文文案排版指北</a>, by sparanoid</li><li><a href="http://w3c.github.io/clreq/">中文排版需求</a>, by W3C</li><li><a href="http://www.ruanyifeng.com/blog/2017/02/filename-should-be-lowercase.html">为什么文件名要小写？</a>, by 阮一峰</li><li><a href="https://developers.google.com/style/">Google Developer Documentation Style Guide</a>, by Google</li><li><a href="http://www.moe.gov.cn/ewebeditor/uploadfile/2015/01/13/20150113091154536.pdf">出版物上数字用法的规定（国家标准GBT15835－2011）</a></li><li><a href="https://baike.baidu.com/item/%E4%B8%AD%E5%8D%8E%E4%BA%BA%E6%B0%91%E5%85%B1%E5%92%8C%E5%9B%BD%E5%9B%BD%E5%AE%B6%E6%A0%87%E5%87%86%E5%87%BA%E7%89%88%E7%89%A9%E6%95%B0%E5%AD%97%E7%94%A8%E6%B3%95">中华人民共和国国家标准出版物数字用法</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分布式-zookeeper与dubbo</title>
      <link href="/2017/06/19/Java-%E5%88%86%E5%B8%83%E5%BC%8F-1/"/>
      <url>/2017/06/19/Java-%E5%88%86%E5%B8%83%E5%BC%8F-1/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="zookeeper和dubbo的关系"><a href="#zookeeper和dubbo的关系" class="headerlink" title="zookeeper和dubbo的关系"></a>zookeeper和dubbo的关系</h1><blockquote><p>Dubbo建议使用Zookeeper作为服务的注册中心。</p></blockquote><p><strong>1、Zookeeper的作用</strong></p><blockquote><p>zookeeper用来注册服务和进行负载均衡，哪一个服务由哪一个机器来提供必需让调用者知道，简单来说就是ip地址和服务名称的对应关系。当然也可以通过硬编码的方式把这种对应关系在调用方业务代码中实现，但是如果提供服务的机器挂掉调用者无法知晓，如果不更改代码会继续请求挂掉的机器提供服务。zookeeper通过心跳机制可以检测挂掉的机器并将挂掉机器的ip和服务对应关系从列表中删除。至于支持高并发，简单来说就是横向扩展，在不更改代码的情况通过添加机器来提高运算能力。通过添加新的机器向zookeeper注册服务，服务的提供者多了能服务的客户就多了。</p></blockquote><p><strong>2、dubbo</strong></p><blockquote><p>是管理中间层的工具，在业务层到数据仓库间有非常多服务的接入和服务提供者需要调度，dubbo提供一个框架解决这个问题。<br>注意这里的dubbo只是一个框架，至于你架子上放什么是完全取决于你的，就像一个汽车骨架，你需要配你的轮子引擎。这个框架中要完成调度必须要有一个分布式的注册中心，储存所有服务的元数据，你可以用zk，也可以用别的，只是大家都用zk。</p></blockquote><p><strong>3、zookeeper和dubbo的关系</strong></p><blockquote><p>Dubbo的将注册中心进行抽象，是得它可以外接不同的存储媒介给注册中心提供服务，有ZooKeeper，Memcached，Redis等。<br>引入了ZooKeeper作为存储媒介，也就把ZooKeeper的特性引进来。首先是负载均衡，单注册中心的承载能力是有限的，在流量达到一定程度的时候就需要分流，负载均衡就是为了分流而存在的，一个ZooKeeper群配合相应的Web应用就可以很容易达到负载均衡；资源同步，单单有负载均衡还不够，节点之间的数据和资源需要同步，ZooKeeper集群就天然具备有这样的功能；命名服务，将树状结构用于维护全局的服务地址列表，服务提供者在启动的时候，向ZK上的指定节点&#x2F;dubbo&#x2F;${serviceName}&#x2F;providers目录下写入自己的URL地址，这个操作就完成了服务的发布。其他特性还有Mast选举，分布式锁等。</p></blockquote><p><strong>4、zookeeper和dubbo的的配置</strong></p><p><em>生产者配置</em></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dubbo:application</span> <span class="attr">name</span>=<span class="string">&quot;dubbo_provider_resourcesw&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">dubbo:application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dubbo:protocol</span> <span class="attr">name</span>=<span class="string">&quot;dubbo&quot;</span> <span class="attr">port</span>=<span class="string">&quot;20885&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 使用zookeeper注册中心暴露服务地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dubbo:registry</span> <span class="attr">address</span>=<span class="string">&quot;zookeeper://127.0.0.1:2181&quot;</span> <span class="attr">check</span>=<span class="string">&quot;false&quot;</span> <span class="attr">subscribe</span>=<span class="string">&quot;false&quot;</span> <span class="attr">register</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">dubbo:registry</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 要暴露的服务接口 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dubbo:service</span> <span class="attr">interface</span>=<span class="string">&quot;com.cn.xxx.xxxControl&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;xxxControl&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><em>消费者配置</em></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dubbo:application</span> <span class="attr">name</span>=<span class="string">&quot;dubbo_consumer&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">dubbo:application</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 使用zookeeper注册中心暴露服务地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dubbo:registry</span> <span class="attr">address</span>=<span class="string">&quot;zookeeper://127.0.0.1:2181&quot;</span> <span class="attr">check</span>=<span class="string">&quot;false&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">dubbo:registry</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 要引用的服务 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dubbo:reference</span> <span class="attr">interface</span>=<span class="string">&quot;com.cn.xxx.xxxControl&quot;</span> <span class="attr">id</span>=<span class="string">&quot;xxxControl&quot;</span> <span class="attr">timeout</span>=<span class="string">&quot;180000&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">dubbo:reference</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>总结小记</strong></p>]]></content>
      
      
      <categories>
          
          <category> Java分布式文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 分布式 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
